<?xml version="1.0" encoding="UTF-8"?><model:MDescriptors xmlns:model="http://www.silabs.com/ss/Studio.ecore">
  <descriptors label="SLSTK3400A_EFM32HG_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_interrupt/SimplicityStudio/STK3200_EFM32ZG_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_interrupt/SimplicityStudio/STK3300_EFM32TG_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_interrupt/SimplicityStudio/STK3600_EFM32LG_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_interrupt/SimplicityStudio/STK3700_EFM32GG_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_interrupt/SimplicityStudio/STK3800_EFM32WG_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_interrupt/SimplicityStudio/STKXXX_EFM32G_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_pin_output/SimplicityStudio/SLSTK3400A_EFM32HG_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_pin_output/SimplicityStudio/STK3200_EFM32ZG_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_pin_output/SimplicityStudio/STK3300_EFM32TG_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_pin_output/SimplicityStudio/STK3600_EFM32LG_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_pin_output/SimplicityStudio/STK3700_EFM32GG_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_pin_output/SimplicityStudio/STK3800_EFM32WG_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_pin_output/SimplicityStudio/STKXXX_EFM32G_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_polled/SimplicityStudio/SLSTK3400A_EFM32HG_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_polled/SimplicityStudio/STK3200_EFM32ZG_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_polled/SimplicityStudio/STK3300_EFM32TG_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_polled/SimplicityStudio/STK3600_EFM32LG_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_polled/SimplicityStudio/STK3700_EFM32GG_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_polled/SimplicityStudio/STK3800_EFM32WG_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/acmp/acmp_polled/SimplicityStudio/STKXXX_EFM32G_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored to global variables. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_scan_letimer_prs_dma/SimplicityStudio/STK3600_EFM32LG_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored to global variables. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_scan_letimer_prs_dma/SimplicityStudio/STK3700_EFM32GG_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored to global variables. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_scan_letimer_prs_dma/SimplicityStudio/STK3800_EFM32WG_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_scan_prs_gpio_dma/SimplicityStudio/SLSTK3400A_EFM32HG_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_scan_prs_gpio_dma/SimplicityStudio/STK3200_EFM32ZG_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_scan_prs_gpio_dma/SimplicityStudio/STK3300_EFM32TG_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_scan_prs_gpio_dma/SimplicityStudio/STK3600_EFM32LG_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_scan_prs_gpio_dma/SimplicityStudio/STK3700_EFM32GG_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_scan_prs_gpio_dma/SimplicityStudio/STK3800_EFM32WG_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_scan_prs_gpio_dma/SimplicityStudio/STKXXX_EFM32G_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_diff_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_diff_interrupt/SimplicityStudio/STK3200_EFM32ZG_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_diff_interrupt/SimplicityStudio/STK3300_EFM32TG_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_diff_interrupt/SimplicityStudio/STK3600_EFM32LG_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_diff_interrupt/SimplicityStudio/STK3700_EFM32GG_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_diff_interrupt/SimplicityStudio/STK3800_EFM32WG_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_diff_interrupt/SimplicityStudio/STKXXX_EFM32G_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_interrupt/SimplicityStudio/STK3200_EFM32ZG_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_interrupt/SimplicityStudio/STK3300_EFM32TG_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_interrupt/SimplicityStudio/STK3600_EFM32LG_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_interrupt/SimplicityStudio/STK3700_EFM32GG_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_interrupt/SimplicityStudio/STK3800_EFM32WG_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_interrupt/SimplicityStudio/STKXXX_EFM32G_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_letimer_interrupt/SimplicityStudio/STK3300_EFM32TG_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_letimer_interrupt/SimplicityStudio/STK3600_EFM32LG_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_letimer_interrupt/SimplicityStudio/STK3700_EFM32GG_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_letimer_interrupt/SimplicityStudio/STK3800_EFM32WG_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_letimer_interrupt/SimplicityStudio/STKXXX_EFM32G_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_letimer_prs_dma/SimplicityStudio/STK3600_EFM32LG_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_letimer_prs_dma/SimplicityStudio/STK3700_EFM32GG_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_letimer_prs_dma/SimplicityStudio/STK3800_EFM32WG_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_polled/SimplicityStudio/SLSTK3400A_EFM32HG_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_polled/SimplicityStudio/STK3200_EFM32ZG_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_polled/SimplicityStudio/STK3300_EFM32TG_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_polled/SimplicityStudio/STK3600_EFM32LG_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_polled/SimplicityStudio/STK3700_EFM32GG_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_polled/SimplicityStudio/STK3800_EFM32WG_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_polled/SimplicityStudio/STKXXX_EFM32G_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_prs_gpio_dma/SimplicityStudio/SLSTK3400A_EFM32HG_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_prs_gpio_dma/SimplicityStudio/STK3200_EFM32ZG_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_prs_gpio_dma/SimplicityStudio/STK3300_EFM32TG_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_prs_gpio_dma/SimplicityStudio/STK3600_EFM32LG_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_prs_gpio_dma/SimplicityStudio/STK3700_EFM32GG_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_prs_gpio_dma/SimplicityStudio/STK3800_EFM32WG_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/adc/adc_single_prs_gpio_dma/SimplicityStudio/STKXXX_EFM32G_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_aes_cbc_128" description="This project uses the CBC (Cipher Block Chaining) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_aes_cbc_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cbc_128/SimplicityStudio/SLSTK3400A_EFM32HG_aes_cbc_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_aes_cbc_128" description="This project uses the CBC (Cipher Block Chaining) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_aes_cbc_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cbc_128/SimplicityStudio/STK3200_EFM32ZG_aes_cbc_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_aes_cbc_128" description="This project uses the CBC (Cipher Block Chaining) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_aes_cbc_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cbc_128/SimplicityStudio/STK3300_EFM32TG_aes_cbc_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_aes_cbc_128" description="This project uses the CBC (Cipher Block Chaining) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_aes_cbc_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cbc_128/SimplicityStudio/STK3600_EFM32LG_aes_cbc_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_aes_cbc_128" description="This project uses the CBC (Cipher Block Chaining) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_aes_cbc_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cbc_128/SimplicityStudio/STK3700_EFM32GG_aes_cbc_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_aes_cbc_128" description="This project uses the CBC (Cipher Block Chaining) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_aes_cbc_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cbc_128/SimplicityStudio/STK3800_EFM32WG_aes_cbc_128.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_aes_cbc_128" description="This project uses the CBC (Cipher Block Chaining) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_aes_cbc_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cbc_128/SimplicityStudio/STKXXX_EFM32G_aes_cbc_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_aes_cbc_256" description="This project uses the CBC (Cipher Block Chaining) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_aes_cbc_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cbc_256/SimplicityStudio/STK3300_EFM32TG_aes_cbc_256.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_aes_cbc_256" description="This project uses the CBC (Cipher Block Chaining) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_aes_cbc_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cbc_256/SimplicityStudio/STK3600_EFM32LG_aes_cbc_256.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_aes_cbc_256" description="This project uses the CBC (Cipher Block Chaining) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_aes_cbc_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cbc_256/SimplicityStudio/STK3700_EFM32GG_aes_cbc_256.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_aes_cbc_256" description="This project uses the CBC (Cipher Block Chaining) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_aes_cbc_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cbc_256/SimplicityStudio/STK3800_EFM32WG_aes_cbc_256.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_aes_cbc_256" description="This project uses the CBC (Cipher Block Chaining) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_aes_cbc_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cbc_256/SimplicityStudio/STKXXX_EFM32G_aes_cbc_256.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_aes_cfb_128" description="This project uses the CFB (Cipher Feedback) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_aes_cfb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cfb_128/SimplicityStudio/SLSTK3400A_EFM32HG_aes_cfb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_aes_cfb_128" description="This project uses the CFB (Cipher Feedback) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_aes_cfb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cfb_128/SimplicityStudio/STK3200_EFM32ZG_aes_cfb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_aes_cfb_128" description="This project uses the CFB (Cipher Feedback) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_aes_cfb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cfb_128/SimplicityStudio/STK3300_EFM32TG_aes_cfb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_aes_cfb_128" description="This project uses the CFB (Cipher Feedback) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_aes_cfb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cfb_128/SimplicityStudio/STK3600_EFM32LG_aes_cfb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_aes_cfb_128" description="This project uses the CFB (Cipher Feedback) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_aes_cfb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cfb_128/SimplicityStudio/STK3700_EFM32GG_aes_cfb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_aes_cfb_128" description="This project uses the CFB (Cipher Feedback) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_aes_cfb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cfb_128/SimplicityStudio/STK3800_EFM32WG_aes_cfb_128.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_aes_cfb_128" description="This project uses the CFB (Cipher Feedback) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_aes_cfb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cfb_128/SimplicityStudio/STKXXX_EFM32G_aes_cfb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_aes_cfb_256" description="This project uses the CFB (Cipher Feedback) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_aes_cfb_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cfb_256/SimplicityStudio/STK3300_EFM32TG_aes_cfb_256.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_aes_cfb_256" description="This project uses the CFB (Cipher Feedback) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_aes_cfb_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cfb_256/SimplicityStudio/STK3600_EFM32LG_aes_cfb_256.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_aes_cfb_256" description="This project uses the CFB (Cipher Feedback) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_aes_cfb_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cfb_256/SimplicityStudio/STK3700_EFM32GG_aes_cfb_256.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_aes_cfb_256" description="This project uses the CFB (Cipher Feedback) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_aes_cfb_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cfb_256/SimplicityStudio/STK3800_EFM32WG_aes_cfb_256.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_aes_cfb_256" description="This project uses the CFB (Cipher Feedback) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_aes_cfb_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_cfb_256/SimplicityStudio/STKXXX_EFM32G_aes_cfb_256.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_aes_ctr_128" description="This project uses the CTR (Counter Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_aes_ctr_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ctr_128/SimplicityStudio/SLSTK3400A_EFM32HG_aes_ctr_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_aes_ctr_128" description="This project uses the CTR (Counter Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_aes_ctr_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ctr_128/SimplicityStudio/STK3200_EFM32ZG_aes_ctr_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_aes_ctr_128" description="This project uses the CTR (Counter Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_aes_ctr_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ctr_128/SimplicityStudio/STK3300_EFM32TG_aes_ctr_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_aes_ctr_128" description="This project uses the CTR (Counter Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_aes_ctr_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ctr_128/SimplicityStudio/STK3600_EFM32LG_aes_ctr_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_aes_ctr_128" description="This project uses the CTR (Counter Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_aes_ctr_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ctr_128/SimplicityStudio/STK3700_EFM32GG_aes_ctr_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_aes_ctr_128" description="This project uses the CTR (Counter Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_aes_ctr_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ctr_128/SimplicityStudio/STK3800_EFM32WG_aes_ctr_128.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_aes_ctr_128" description="This project uses the CTR (Counter Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_aes_ctr_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ctr_128/SimplicityStudio/STKXXX_EFM32G_aes_ctr_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_aes_ctr_256" description="This project uses the CTR (Counter Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_aes_ctr_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ctr_256/SimplicityStudio/STK3300_EFM32TG_aes_ctr_256.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_aes_ctr_256" description="This project uses the CTR (Counter Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_aes_ctr_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ctr_256/SimplicityStudio/STK3600_EFM32LG_aes_ctr_256.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_aes_ctr_256" description="This project uses the CTR (Counter Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_aes_ctr_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ctr_256/SimplicityStudio/STK3700_EFM32GG_aes_ctr_256.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_aes_ctr_256" description="This project uses the CTR (Counter Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_aes_ctr_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ctr_256/SimplicityStudio/STK3800_EFM32WG_aes_ctr_256.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_aes_ctr_256" description="This project uses the CTR (Counter Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_aes_ctr_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ctr_256/SimplicityStudio/STKXXX_EFM32G_aes_ctr_256.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_aes_ecb_128" description="This project uses the ECB (Electronic Code Book) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_aes_ecb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ecb_128/SimplicityStudio/SLSTK3400A_EFM32HG_aes_ecb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_aes_ecb_128" description="This project uses the ECB (Electronic Code Book) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_aes_ecb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ecb_128/SimplicityStudio/STK3200_EFM32ZG_aes_ecb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_aes_ecb_128" description="This project uses the ECB (Electronic Code Book) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_aes_ecb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ecb_128/SimplicityStudio/STK3300_EFM32TG_aes_ecb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_aes_ecb_128" description="This project uses the ECB (Electronic Code Book) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_aes_ecb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ecb_128/SimplicityStudio/STK3600_EFM32LG_aes_ecb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_aes_ecb_128" description="This project uses the ECB (Electronic Code Book) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_aes_ecb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ecb_128/SimplicityStudio/STK3700_EFM32GG_aes_ecb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_aes_ecb_128" description="This project uses the ECB (Electronic Code Book) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_aes_ecb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ecb_128/SimplicityStudio/STK3800_EFM32WG_aes_ecb_128.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_aes_ecb_128" description="This project uses the ECB (Electronic Code Book) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_aes_ecb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ecb_128/SimplicityStudio/STKXXX_EFM32G_aes_ecb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_aes_ecb_256" description="This project uses the ECB (Electronic Code Book) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit  keys. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_aes_ecb_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ecb_256/SimplicityStudio/STK3300_EFM32TG_aes_ecb_256.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_aes_ecb_256" description="This project uses the ECB (Electronic Code Book) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit  keys. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_aes_ecb_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ecb_256/SimplicityStudio/STK3600_EFM32LG_aes_ecb_256.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_aes_ecb_256" description="This project uses the ECB (Electronic Code Book) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit  keys. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_aes_ecb_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ecb_256/SimplicityStudio/STK3700_EFM32GG_aes_ecb_256.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_aes_ecb_256" description="This project uses the ECB (Electronic Code Book) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit  keys. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_aes_ecb_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ecb_256/SimplicityStudio/STK3800_EFM32WG_aes_ecb_256.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_aes_ecb_256" description="This project uses the ECB (Electronic Code Book) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit  keys. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_aes_ecb_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ecb_256/SimplicityStudio/STKXXX_EFM32G_aes_ecb_256.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_aes_ofb_128" description="This project uses the OFB (Output Feedback Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_aes_ofb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ofb_128/SimplicityStudio/SLSTK3400A_EFM32HG_aes_ofb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_aes_ofb_128" description="This project uses the OFB (Output Feedback Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_aes_ofb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ofb_128/SimplicityStudio/STK3200_EFM32ZG_aes_ofb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_aes_ofb_128" description="This project uses the OFB (Output Feedback Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_aes_ofb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ofb_128/SimplicityStudio/STK3300_EFM32TG_aes_ofb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_aes_ofb_128" description="This project uses the OFB (Output Feedback Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_aes_ofb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ofb_128/SimplicityStudio/STK3600_EFM32LG_aes_ofb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_aes_ofb_128" description="This project uses the OFB (Output Feedback Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_aes_ofb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ofb_128/SimplicityStudio/STK3700_EFM32GG_aes_ofb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_aes_ofb_128" description="This project uses the OFB (Output Feedback Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_aes_ofb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ofb_128/SimplicityStudio/STK3800_EFM32WG_aes_ofb_128.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_aes_ofb_128" description="This project uses the OFB (Output Feedback Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 128 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_aes_ofb_128"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ofb_128/SimplicityStudio/STKXXX_EFM32G_aes_ofb_128.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_aes_ofb_256" description="This project uses the OFB (Output Feedback Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_aes_ofb_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ofb_256/SimplicityStudio/STK3300_EFM32TG_aes_ofb_256.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_aes_ofb_256" description="This project uses the OFB (Output Feedback Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_aes_ofb_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ofb_256/SimplicityStudio/STK3600_EFM32LG_aes_ofb_256.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_aes_ofb_256" description="This project uses the OFB (Output Feedback Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_aes_ofb_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ofb_256/SimplicityStudio/STK3700_EFM32GG_aes_ofb_256.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_aes_ofb_256" description="This project uses the OFB (Output Feedback Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_aes_ofb_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ofb_256/SimplicityStudio/STK3800_EFM32WG_aes_ofb_256.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_aes_ofb_256" description="This project uses the OFB (Output Feedback Mode) mode of AES encryption to  encrypt the user's input data and then decrypt it. This project uses 256 bit keys. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_aes_ofb_256"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="AES"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/aes/aes_ofb_256/SimplicityStudio/STKXXX_EFM32G_aes_ofb_256.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_burtc_backup_domain" description="This project uses the Backup Power Domain and BURTC (Backup Real Time Counter) to maintain a counter value even during a main power brownout. The counter is saved in the BURTC retention registers and is updated every BURTC compare0 value (every second by default). The BURTC is used because it is one of the real time counters still available in backup mode. This project uses the LFXO for higher precision, but the ULFRCO can also be used to save even more energy. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_burtc_backup_domain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="BURTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/burtc/burtc_backup_domain/SimplicityStudio/STK3600_EFM32LG_burtc_backup_domain.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_burtc_backup_domain" description="This project uses the Backup Power Domain and BURTC (Backup Real Time Counter) to maintain a counter value even during a main power brownout. The counter is saved in the BURTC retention registers and is updated every BURTC compare0 value (every second by default). The BURTC is used because it is one of the real time counters still available in backup mode. This project uses the LFXO for higher precision, but the ULFRCO can also be used to save even more energy. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_burtc_backup_domain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="BURTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/burtc/burtc_backup_domain/SimplicityStudio/STK3700_EFM32GG_burtc_backup_domain.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_burtc_backup_domain" description="This project uses the Backup Power Domain and BURTC (Backup Real Time Counter) to maintain a counter value even during a main power brownout. The counter is saved in the BURTC retention registers and is updated every BURTC compare0 value (every second by default). The BURTC is used because it is one of the real time counters still available in backup mode. This project uses the LFXO for higher precision, but the ULFRCO can also be used to save even more energy. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_burtc_backup_domain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="BURTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/burtc/burtc_backup_domain/SimplicityStudio/STK3800_EFM32WG_burtc_backup_domain.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_burtc_em4_wakeup_retention" description="This project uses the BURTC (Backup Real Time Counter) to wake the board up from EM4 mode and thus trigger a reset. This project also shows how to use the BURTC retention registers to have data persist between resets. The LCD will show the number of resets triggered by the BURTC. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_burtc_em4_wakeup_retention"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="BURTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/burtc/burtc_em4_wakeup_retention/SimplicityStudio/STK3600_EFM32LG_burtc_em4_wakeup_retention.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_burtc_em4_wakeup_retention" description="This project uses the BURTC (Backup Real Time Counter) to wake the board up from EM4 mode and thus trigger a reset. This project also shows how to use the BURTC retention registers to have data persist between resets. The LCD will show the number of resets triggered by the BURTC. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_burtc_em4_wakeup_retention"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="BURTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/burtc/burtc_em4_wakeup_retention/SimplicityStudio/STK3700_EFM32GG_burtc_em4_wakeup_retention.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_burtc_em4_wakeup_retention" description="This project uses the BURTC (Backup Real Time Counter) to wake the board up from EM4 mode and thus trigger a reset. This project also shows how to use the BURTC retention registers to have data persist between resets. The LCD will show the number of resets triggered by the BURTC. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_burtc_em4_wakeup_retention"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="BURTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/burtc/burtc_em4_wakeup_retention/SimplicityStudio/STK3800_EFM32WG_burtc_em4_wakeup_retention.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_dac_voltage" description="This project uses the DAC in continuous mode to output 0.5V to a pin in EM1.  The DAC operates independently from the core. Since the DAC is operating in  continuous mode, the output voltage will be stable even if the output is  loaded. The fact that the DAC is continuously working will be reflected by the  power consumption. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_dac_voltage"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dac/dac_voltage/SimplicityStudio/STK3600_EFM32LG_dac_voltage.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_dac_voltage" description="This project uses the DAC in continuous mode to output 0.5V to a pin in EM1.  The DAC operates independently from the core. Since the DAC is operating in  continuous mode, the output voltage will be stable even if the output is  loaded. The fact that the DAC is continuously working will be reflected by the  power consumption. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_dac_voltage"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dac/dac_voltage/SimplicityStudio/STK3700_EFM32GG_dac_voltage.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_dac_voltage" description="This project uses the DAC in continuous mode to output 0.5V to a pin in EM1.  The DAC operates independently from the core. Since the DAC is operating in  continuous mode, the output voltage will be stable even if the output is  loaded. The fact that the DAC is continuously working will be reflected by the  power consumption. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_dac_voltage"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dac/dac_voltage/SimplicityStudio/STK3800_EFM32WG_dac_voltage.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_dac_voltage" description="This project uses the DAC in continuous mode to output 0.5V to a pin in EM1.  The DAC operates independently from the core. Since the DAC is operating in  continuous mode, the output voltage will be stable even if the output is  loaded. The fact that the DAC is continuously working will be reflected by the  power consumption. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_dac_voltage"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dac/dac_voltage/SimplicityStudio/STKXXX_EFM32G_dac_voltage.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_dma_2d_copy" description="In this example, the DMA transfers a submatrix from one software matrix  to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_dma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/2d_copy/SimplicityStudio/STK3600_EFM32LG_dma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_dma_2d_copy" description="In this example, the DMA transfers a submatrix from one software matrix  to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_dma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/2d_copy/SimplicityStudio/STK3700_EFM32GG_dma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_dma_2d_copy" description="In this example, the DMA transfers a submatrix from one software matrix  to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_dma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/2d_copy/SimplicityStudio/STK3800_EFM32WG_dma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_dma_linked_list" description="Software requests a DMA transfer on a linked list of 4 descriptors,  which each move 8 halfwords of memory into a destination buffer.  The  callback function is called after every descriptor. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_dma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/linked_list/SimplicityStudio/SLSTK3400A_EFM32HG_dma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_dma_linked_list" description="Software requests a DMA transfer on a linked list of 4 descriptors,  which each move 8 halfwords of memory into a destination buffer.  The  callback function is called after every descriptor. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_dma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/linked_list/SimplicityStudio/STK3200_EFM32ZG_dma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_dma_linked_list" description="Software requests a DMA transfer on a linked list of 4 descriptors,  which each move 8 halfwords of memory into a destination buffer.  The  callback function is called after every descriptor. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_dma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/linked_list/SimplicityStudio/STK3300_EFM32TG_dma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_dma_linked_list" description="Software requests a DMA transfer on a linked list of 4 descriptors,  which each move 8 halfwords of memory into a destination buffer.  The  callback function is called after every descriptor. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_dma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/linked_list/SimplicityStudio/STK3600_EFM32LG_dma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_dma_linked_list" description="Software requests a DMA transfer on a linked list of 4 descriptors,  which each move 8 halfwords of memory into a destination buffer.  The  callback function is called after every descriptor. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_dma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/linked_list/SimplicityStudio/STK3700_EFM32GG_dma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_dma_linked_list" description="Software requests a DMA transfer on a linked list of 4 descriptors,  which each move 8 halfwords of memory into a destination buffer.  The  callback function is called after every descriptor. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_dma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/linked_list/SimplicityStudio/STK3800_EFM32WG_dma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_dma_linked_list" description="Software requests a DMA transfer on a linked list of 4 descriptors,  which each move 8 halfwords of memory into a destination buffer.  The  callback function is called after every descriptor. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_dma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/linked_list/SimplicityStudio/STKXXX_EFM32G_dma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_dma_linked_list_looped" description="In this example, the DMA transfers 4 character strings from one  software array to another in the pattern: A, B, A, B, A, B, A, B, C  -or- (A, B) 4 times, then C The transfer is requested by software at the end of the DMA  initialization.  A Callback function is called after every  completed transfer. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_dma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/linked_list_looped/SimplicityStudio/STK3600_EFM32LG_dma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_dma_linked_list_looped" description="In this example, the DMA transfers 4 character strings from one  software array to another in the pattern: A, B, A, B, A, B, A, B, C  -or- (A, B) 4 times, then C The transfer is requested by software at the end of the DMA  initialization.  A Callback function is called after every  completed transfer. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_dma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/linked_list_looped/SimplicityStudio/STK3700_EFM32GG_dma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_dma_linked_list_looped" description="In this example, the DMA transfers 4 character strings from one  software array to another in the pattern: A, B, A, B, A, B, A, B, C  -or- (A, B) 4 times, then C The transfer is requested by software at the end of the DMA  initialization.  A Callback function is called after every  completed transfer. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_dma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/linked_list_looped/SimplicityStudio/STK3800_EFM32WG_dma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_dma_ping_pong" description="Software requests DMA ping-pong transfers.  A shared source array is  transfered first to the &quot;ping&quot; buffer, then to the &quot;pong&quot;, then back to ping,  etc.  After each transfer, there is a callback function that increments the  elements of the source buffer, then requests the next transfer.  In this way,  you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot; transfered to  pong, etc. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_dma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/ping_pong/SimplicityStudio/SLSTK3400A_EFM32HG_dma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_dma_ping_pong" description="Software requests DMA ping-pong transfers.  A shared source array is  transfered first to the &quot;ping&quot; buffer, then to the &quot;pong&quot;, then back to ping,  etc.  After each transfer, there is a callback function that increments the  elements of the source buffer, then requests the next transfer.  In this way,  you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot; transfered to  pong, etc. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_dma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/ping_pong/SimplicityStudio/STK3200_EFM32ZG_dma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_dma_ping_pong" description="Software requests DMA ping-pong transfers.  A shared source array is  transfered first to the &quot;ping&quot; buffer, then to the &quot;pong&quot;, then back to ping,  etc.  After each transfer, there is a callback function that increments the  elements of the source buffer, then requests the next transfer.  In this way,  you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot; transfered to  pong, etc. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_dma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/ping_pong/SimplicityStudio/STK3300_EFM32TG_dma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_dma_ping_pong" description="Software requests DMA ping-pong transfers.  A shared source array is  transfered first to the &quot;ping&quot; buffer, then to the &quot;pong&quot;, then back to ping,  etc.  After each transfer, there is a callback function that increments the  elements of the source buffer, then requests the next transfer.  In this way,  you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot; transfered to  pong, etc. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_dma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/ping_pong/SimplicityStudio/STK3600_EFM32LG_dma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_dma_ping_pong" description="Software requests DMA ping-pong transfers.  A shared source array is  transfered first to the &quot;ping&quot; buffer, then to the &quot;pong&quot;, then back to ping,  etc.  After each transfer, there is a callback function that increments the  elements of the source buffer, then requests the next transfer.  In this way,  you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot; transfered to  pong, etc. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_dma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/ping_pong/SimplicityStudio/STK3700_EFM32GG_dma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_dma_ping_pong" description="Software requests DMA ping-pong transfers.  A shared source array is  transfered first to the &quot;ping&quot; buffer, then to the &quot;pong&quot;, then back to ping,  etc.  After each transfer, there is a callback function that increments the  elements of the source buffer, then requests the next transfer.  In this way,  you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot; transfered to  pong, etc. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_dma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/ping_pong/SimplicityStudio/STK3800_EFM32WG_dma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_dma_ping_pong" description="Software requests DMA ping-pong transfers.  A shared source array is  transfered first to the &quot;ping&quot; buffer, then to the &quot;pong&quot;, then back to ping,  etc.  After each transfer, there is a callback function that increments the  elements of the source buffer, then requests the next transfer.  In this way,  you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot; transfered to  pong, etc. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_dma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/ping_pong/SimplicityStudio/STKXXX_EFM32G_dma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_dma_scatter_gather" description="Software requests a DMA transfer on a linked list of 4 descriptors to &quot;scatter&quot;  one large array into 4 smaller arrays.  Each descriptor moves 8 halfwords of  memory into a destination buffer.  An interrupt triggers after the completion  of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_dma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/scatter_gather/SimplicityStudio/SLSTK3400A_EFM32HG_dma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_dma_scatter_gather" description="Software requests a DMA transfer on a linked list of 4 descriptors to &quot;scatter&quot;  one large array into 4 smaller arrays.  Each descriptor moves 8 halfwords of  memory into a destination buffer.  An interrupt triggers after the completion  of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_dma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/scatter_gather/SimplicityStudio/STK3200_EFM32ZG_dma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_dma_scatter_gather" description="Software requests a DMA transfer on a linked list of 4 descriptors to &quot;scatter&quot;  one large array into 4 smaller arrays.  Each descriptor moves 8 halfwords of  memory into a destination buffer.  An interrupt triggers after the completion  of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_dma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/scatter_gather/SimplicityStudio/STK3300_EFM32TG_dma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_dma_scatter_gather" description="Software requests a DMA transfer on a linked list of 4 descriptors to &quot;scatter&quot;  one large array into 4 smaller arrays.  Each descriptor moves 8 halfwords of  memory into a destination buffer.  An interrupt triggers after the completion  of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_dma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/scatter_gather/SimplicityStudio/STK3600_EFM32LG_dma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_dma_scatter_gather" description="Software requests a DMA transfer on a linked list of 4 descriptors to &quot;scatter&quot;  one large array into 4 smaller arrays.  Each descriptor moves 8 halfwords of  memory into a destination buffer.  An interrupt triggers after the completion  of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_dma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/scatter_gather/SimplicityStudio/STK3700_EFM32GG_dma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_dma_scatter_gather" description="Software requests a DMA transfer on a linked list of 4 descriptors to &quot;scatter&quot;  one large array into 4 smaller arrays.  Each descriptor moves 8 halfwords of  memory into a destination buffer.  An interrupt triggers after the completion  of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_dma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/scatter_gather/SimplicityStudio/STK3800_EFM32WG_dma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_dma_scatter_gather" description="Software requests a DMA transfer on a linked list of 4 descriptors to &quot;scatter&quot;  one large array into 4 smaller arrays.  Each descriptor moves 8 halfwords of  memory into a destination buffer.  An interrupt triggers after the completion  of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_dma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/scatter_gather/SimplicityStudio/STKXXX_EFM32G_dma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_dma_single_button" description="In this example, the DMA transfers 128 halfwords (256 bytes) from one  software array to another.  The transfer is requested by a button press  on Push Button 1 routed through the PRS.  A Callback Function is called when the tranfer is complete. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_dma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_button/SimplicityStudio/SLSTK3400A_EFM32HG_dma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_dma_single_button" description="In this example, the DMA transfers 128 halfwords (256 bytes) from one  software array to another.  The transfer is requested by a button press  on Push Button 1 routed through the PRS.  A Callback Function is called when the tranfer is complete. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_dma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_button/SimplicityStudio/STK3200_EFM32ZG_dma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_dma_single_button" description="In this example, the DMA transfers 128 halfwords (256 bytes) from one  software array to another.  The transfer is requested by a button press  on Push Button 1 routed through the PRS.  A Callback Function is called when the tranfer is complete. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_dma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_button/SimplicityStudio/STK3300_EFM32TG_dma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_dma_single_button" description="In this example, the DMA transfers 128 halfwords (256 bytes) from one  software array to another.  The transfer is requested by a button press  on Push Button 1 routed through the PRS.  A Callback Function is called when the tranfer is complete. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_dma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_button/SimplicityStudio/STK3600_EFM32LG_dma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_dma_single_button" description="In this example, the DMA transfers 128 halfwords (256 bytes) from one  software array to another.  The transfer is requested by a button press  on Push Button 1 routed through the PRS.  A Callback Function is called when the tranfer is complete. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_dma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_button/SimplicityStudio/STK3700_EFM32GG_dma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_dma_single_button" description="In this example, the DMA transfers 128 halfwords (256 bytes) from one  software array to another.  The transfer is requested by a button press  on Push Button 1 routed through the PRS.  A Callback Function is called when the tranfer is complete. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_dma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_button/SimplicityStudio/STK3800_EFM32WG_dma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_dma_single_button" description="In this example, the DMA transfers 128 halfwords (256 bytes) from one  software array to another.  The transfer is requested by a button press  on Push Button 1 routed through the PRS.  A Callback Function is called when the tranfer is complete. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_dma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_button/SimplicityStudio/STKXXX_EFM32G_dma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_dma_single_looped" description="In this example, the DMA transfers 8 halfwords from one software  array to another.  It will loop this process an infinite number of times.  The transfer is requested by software at the end of  the DMA initialization and again after each callback function. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_dma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_looped/SimplicityStudio/STK3600_EFM32LG_dma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_dma_single_looped" description="In this example, the DMA transfers 8 halfwords from one software  array to another.  It will loop this process an infinite number of times.  The transfer is requested by software at the end of  the DMA initialization and again after each callback function. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_dma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_looped/SimplicityStudio/STK3700_EFM32GG_dma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_dma_single_looped" description="In this example, the DMA transfers 8 halfwords from one software  array to another.  It will loop this process an infinite number of times.  The transfer is requested by software at the end of  the DMA initialization and again after each callback function. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_dma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_looped/SimplicityStudio/STK3800_EFM32WG_dma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_dma_single_software" description="In this example, the DMA transfers 128 halfwords (256 bytes) from one  software array to another.  The transfer is requested by software, and a callback function is called upon completion. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_dma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_software/SimplicityStudio/SLSTK3400A_EFM32HG_dma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_dma_single_software" description="In this example, the DMA transfers 128 halfwords (256 bytes) from one  software array to another.  The transfer is requested by software, and a callback function is called upon completion. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_dma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_software/SimplicityStudio/STK3200_EFM32ZG_dma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_dma_single_software" description="In this example, the DMA transfers 128 halfwords (256 bytes) from one  software array to another.  The transfer is requested by software, and a callback function is called upon completion. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_dma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_software/SimplicityStudio/STK3300_EFM32TG_dma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_dma_single_software" description="In this example, the DMA transfers 128 halfwords (256 bytes) from one  software array to another.  The transfer is requested by software, and a callback function is called upon completion. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_dma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_software/SimplicityStudio/STK3600_EFM32LG_dma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_dma_single_software" description="In this example, the DMA transfers 128 halfwords (256 bytes) from one  software array to another.  The transfer is requested by software, and a callback function is called upon completion. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_dma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_software/SimplicityStudio/STK3700_EFM32GG_dma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_dma_single_software" description="In this example, the DMA transfers 128 halfwords (256 bytes) from one  software array to another.  The transfer is requested by software, and a callback function is called upon completion. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_dma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_software/SimplicityStudio/STK3800_EFM32WG_dma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_dma_single_software" description="In this example, the DMA transfers 128 halfwords (256 bytes) from one  software array to another.  The transfer is requested by software, and a callback function is called upon completion. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_dma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="DMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/dma/single_software/SimplicityStudio/STKXXX_EFM32G_dma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB0 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/EM4_WakeUp/SimplicityStudio/SLSTK3400A_EFM32HG_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/EM4_WakeUp/SimplicityStudio/STK3200_EFM32ZG_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. When first loading th eproject, the device will enter EM4. Pressing the external reset button will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. You need to use an socket board to test this device. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/EM4_WakeUp/SimplicityStudio/STK3300_EFM32TG_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Grounding PA0 will wake the device from EM4 and cause the output pin to toggle indefinitely. Note you have to use a socket board since PA0 is not provided as an expansion header pin You also have to map one of the output pin on the socket board to its LED by using wire connections ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/EM4_WakeUp/SimplicityStudio/STK3600_EFM32LG_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Grounding PA0 will wake the device from EM4 and cause the output pin to toggle indefinitely. Note you have to use a socket board since PA0 is not provided as an expansion header pin You also have to map one of the output pin on the socket board to its LED by using wire connections ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/EM4_WakeUp/SimplicityStudio/STK3700_EFM32GG_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Grounding PA0 will wake the device from EM4 and cause the output pin to toggle indefinitely. Note you have to use a socket board since PA0 is not provided as an expansion header pin You also have to map one of the output pin on the socket board to its LED by using wire connections ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/EM4_WakeUp/SimplicityStudio/STK3800_EFM32WG_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. When first loading the project, the device will enter EM4. Pressing the external reset button will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/EM4_WakeUp/SimplicityStudio/STKXXX_EFM32G_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_gpio_conf" description="This project demonstrates how GPIO pin configuration, reading, and writing are performed. By default, LED0 is configured to be driven with the default drive strength. When the PB0 button is pressed, the EFM32 will change the drive strength of LED0 to its lowest value.  Default and alternate drive strength are derivative-specific; check the datasheet for the device in question for drive strength options. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_gpio_conf"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_conf/SimplicityStudio/SLSTK3400A_EFM32HG_gpio_conf.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_gpio_conf" description="This project demonstrates how GPIO pin configuration, reading, and writing are performed. By default, LED0 is configured to be driven with the default drive strength. When the PB0 button is pressed, the EFM32 will change the drive strength of LED0 to its lowest value.  Default and alternate drive strength are derivative-specific; check the datasheet for the device in question for drive strength options. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_gpio_conf"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_conf/SimplicityStudio/STK3200_EFM32ZG_gpio_conf.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_gpio_conf" description="This project demonstrates how GPIO pin configuration, reading, and writing are performed. By default, LED0 is configured to be driven with the default drive strength. When the PB0 button is pressed, the EFM32 will change the drive strength of LED0 to its lowest value.  Default and alternate drive strength are derivative-specific; check the datasheet for the device in question for drive strength options. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_gpio_conf"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_conf/SimplicityStudio/STK3300_EFM32TG_gpio_conf.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_gpio_conf" description="This project demonstrates how GPIO pin configuration, reading, and writing are performed. By default, LED0 is configured to be driven with the default drive strength. When the PB0 button is pressed, the EFM32 will change the drive strength of LED0 to its lowest value.  Default and alternate drive strength are derivative-specific; check the datasheet for the device in question for drive strength options. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_gpio_conf"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_conf/SimplicityStudio/STK3600_EFM32LG_gpio_conf.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_gpio_conf" description="This project demonstrates how GPIO pin configuration, reading, and writing are performed. By default, LED0 is configured to be driven with the default drive strength. When the PB0 button is pressed, the EFM32 will change the drive strength of LED0 to its lowest value.  Default and alternate drive strength are derivative-specific; check the datasheet for the device in question for drive strength options. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_gpio_conf"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_conf/SimplicityStudio/STK3700_EFM32GG_gpio_conf.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_gpio_conf" description="This project demonstrates how GPIO pin configuration, reading, and writing are performed. By default, LED0 is configured to be driven with the default drive strength. When the PB0 button is pressed, the EFM32 will change the drive strength of LED0 to its lowest value.  Default and alternate drive strength are derivative-specific; check the datasheet for the device in question for drive strength options. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_gpio_conf"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_conf/SimplicityStudio/STK3800_EFM32WG_gpio_conf.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_gpio_conf" description="This project demonstrates how GPIO pin configuration, reading, and writing are performed. By default, LED0 is configured to be driven with the default drive strength. When the PB0 button is pressed, the EFM32 will change the drive strength of LED0 to its lowest value.  Default and alternate drive strength are derivative-specific; check the datasheet for the device in question for drive strength options. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_gpio_conf"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_conf/SimplicityStudio/STKXXX_EFM32G_gpio_conf.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_gpio_periph" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_gpio_periph"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_periph/SimplicityStudio/SLSTK3400A_EFM32HG_gpio_periph.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_gpio_periph" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_gpio_periph"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_periph/SimplicityStudio/STK3200_EFM32ZG_gpio_periph.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_gpio_periph" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_gpio_periph"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_periph/SimplicityStudio/STK3300_EFM32TG_gpio_periph.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_gpio_periph" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_gpio_periph"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_periph/SimplicityStudio/STK3600_EFM32LG_gpio_periph.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_gpio_periph" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_gpio_periph"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_periph/SimplicityStudio/STK3700_EFM32GG_gpio_periph.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_gpio_periph" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_gpio_periph"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_periph/SimplicityStudio/STK3800_EFM32WG_gpio_periph.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_gpio_periph" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_gpio_periph"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_periph/SimplicityStudio/STKXXX_EFM32G_gpio_periph.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_gpio_prs" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_gpio_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_prs/SimplicityStudio/SLSTK3400A_EFM32HG_gpio_prs.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_gpio_prs" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_gpio_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_prs/SimplicityStudio/STK3200_EFM32ZG_gpio_prs.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_gpio_prs" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_gpio_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_prs/SimplicityStudio/STK3300_EFM32TG_gpio_prs.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_gpio_prs" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_gpio_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_prs/SimplicityStudio/STK3600_EFM32LG_gpio_prs.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_gpio_prs" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_gpio_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_prs/SimplicityStudio/STK3700_EFM32GG_gpio_prs.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_gpio_prs" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_gpio_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_prs/SimplicityStudio/STK3800_EFM32WG_gpio_prs.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_gpio_prs" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_gpio_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/gpio_prs/SimplicityStudio/STKXXX_EFM32G_gpio_prs.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/switch_led_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/switch_led_interrupt/SimplicityStudio/STK3200_EFM32ZG_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/switch_led_interrupt/SimplicityStudio/STK3300_EFM32TG_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/switch_led_interrupt/SimplicityStudio/STK3600_EFM32LG_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/switch_led_interrupt/SimplicityStudio/STK3700_EFM32GG_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/switch_led_interrupt/SimplicityStudio/STK3800_EFM32WG_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/switch_led_interrupt/SimplicityStudio/STKXXX_EFM32G_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/switch_led_polled/SimplicityStudio/SLSTK3400A_EFM32HG_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/switch_led_polled/SimplicityStudio/STK3200_EFM32ZG_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/switch_led_polled/SimplicityStudio/STK3300_EFM32TG_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/switch_led_polled/SimplicityStudio/STK3600_EFM32LG_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/switch_led_polled/SimplicityStudio/STK3700_EFM32GG_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/switch_led_polled/SimplicityStudio/STK3800_EFM32WG_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/gpio/switch_led_polled/SimplicityStudio/STKXXX_EFM32G_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). This readme is for the Zero Gecko and Happy Gecko boards, the Happy Gecko uses the odd GPIO interrupt handler and the Zero  Gecko uses the even. This project exists for all series 0 STKs except for the Tiny Gecko. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/i2c/i2c/SimplicityStudio/SLSTK3400A_EFM32HG_i2c.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). This readme is for the Zero Gecko and Happy Gecko boards, the Happy Gecko uses the odd GPIO interrupt handler and the Zero  Gecko uses the even. This project exists for all series 0 STKs except for the Tiny Gecko. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/i2c/i2c/SimplicityStudio/STK3200_EFM32ZG_i2c.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). This project exists for all series 0 STKs except for the Tiny Gecko. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/i2c/i2c/SimplicityStudio/STK3600_EFM32LG_i2c.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). This project exists for all series 0 STKs except for the Tiny Gecko. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/i2c/i2c/SimplicityStudio/STK3700_EFM32GG_i2c.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). This project exists for all series 0 STKs except for the Tiny Gecko. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/i2c/i2c/SimplicityStudio/STK3800_EFM32WG_i2c.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). This project exists for all series 0 STKs except for the Tiny Gecko. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/i2c/i2c/SimplicityStudio/STKXXX_EFM32G_i2c.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_idac_output_constant" description="This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example used about 1.64 milliamps on average. Note: this energy measurement was done using Simplicity Studio's built-in energy profiler for the GG11 board with a Debug build configuration and no optimization flags (gcc -O0). ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_idac_output_constant"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/idac/idac_output_constant/SimplicityStudio/SLSTK3400A_EFM32HG_idac_output_constant.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_idac_output_constant" description="This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example used about 1.64 milliamps on average. Note: this energy measurement was done using Simplicity Studio's built-in energy profiler for the GG11 board with a Debug build configuration and no optimization flags (gcc -O0). ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_idac_output_constant"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/idac/idac_output_constant/SimplicityStudio/STK3200_EFM32ZG_idac_output_constant.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_idac_timer_dma_waveform" description="This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_idac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/idac/idac_timer_dma_waveform/SimplicityStudio/SLSTK3400A_EFM32HG_idac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_idac_timer_dma_waveform" description="This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_idac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/idac/idac_timer_dma_waveform/SimplicityStudio/STK3200_EFM32ZG_idac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_idac_timer_prs" description="This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in EM1 even though the IDAC works in EM3 because the timers are only capable of operating up to EM1. An example use case of this project is PRS triggered charge injection to control current output. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_idac_timer_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/idac/idac_timer_prs/SimplicityStudio/SLSTK3400A_EFM32HG_idac_timer_prs.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_idac_timer_prs" description="This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in EM1 even though the IDAC works in EM3 because the timers are only capable of operating up to EM1. An example use case of this project is PRS triggered charge injection to control current output. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_idac_timer_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/idac/idac_timer_prs/SimplicityStudio/STK3200_EFM32ZG_idac_timer_prs.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/letimer/one_shot_output_compare/SimplicityStudio/STK3300_EFM32TG_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/letimer/one_shot_output_compare/SimplicityStudio/STK3600_EFM32LG_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/letimer/one_shot_output_compare/SimplicityStudio/STK3700_EFM32GG_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/letimer/one_shot_output_compare/SimplicityStudio/STK3800_EFM32WG_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/letimer/one_shot_output_compare/SimplicityStudio/STKXXX_EFM32G_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/letimer/pulse_train/SimplicityStudio/STK3300_EFM32TG_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/letimer/pulse_train/SimplicityStudio/STK3600_EFM32LG_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/letimer/pulse_train/SimplicityStudio/STK3700_EFM32GG_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/letimer/pulse_train/SimplicityStudio/STK3800_EFM32WG_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/letimer/pulse_train/SimplicityStudio/STKXXX_EFM32G_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/letimer/pulse_width_modulation/SimplicityStudio/STK3300_EFM32TG_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/letimer/pulse_width_modulation/SimplicityStudio/STK3600_EFM32LG_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/letimer/pulse_width_modulation/SimplicityStudio/STK3700_EFM32GG_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/letimer/pulse_width_modulation/SimplicityStudio/STK3800_EFM32WG_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/letimer/pulse_width_modulation/SimplicityStudio/STKXXX_EFM32G_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_dma/SimplicityStudio/SLSTK3400A_EFM32HG_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_dma/SimplicityStudio/STK3200_EFM32ZG_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_dma/SimplicityStudio/STK3300_EFM32TG_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_dma/SimplicityStudio/STK3600_EFM32LG_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_dma/SimplicityStudio/STK3700_EFM32GG_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_dma/SimplicityStudio/STK3800_EFM32WG_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_dma/SimplicityStudio/STKXXX_EFM32G_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_echo/SimplicityStudio/SLSTK3400A_EFM32HG_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_echo/SimplicityStudio/STK3200_EFM32ZG_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_echo/SimplicityStudio/STK3300_EFM32TG_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_echo/SimplicityStudio/STK3600_EFM32LG_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_echo/SimplicityStudio/STK3700_EFM32GG_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_echo/SimplicityStudio/STK3800_EFM32WG_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_echo/SimplicityStudio/STKXXX_EFM32G_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_half_duplex/SimplicityStudio/SLSTK3400A_EFM32HG_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_half_duplex/SimplicityStudio/STK3200_EFM32ZG_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_half_duplex/SimplicityStudio/STK3300_EFM32TG_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_half_duplex/SimplicityStudio/STK3600_EFM32LG_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_half_duplex/SimplicityStudio/STK3700_EFM32GG_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_half_duplex/SimplicityStudio/STK3800_EFM32WG_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/leuart/leuart_half_duplex/SimplicityStudio/STKXXX_EFM32G_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/msc/debug_lock/SimplicityStudio/SLSTK3400A_EFM32HG_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/msc/debug_lock/SimplicityStudio/STK3200_EFM32ZG_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/msc/debug_lock/SimplicityStudio/STK3300_EFM32TG_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/msc/debug_lock/SimplicityStudio/STK3600_EFM32LG_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/msc/debug_lock/SimplicityStudio/STK3700_EFM32GG_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/msc/debug_lock/SimplicityStudio/STK3800_EFM32WG_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/msc/debug_lock/SimplicityStudio/STKXXX_EFM32G_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/msc/msc_rw/SimplicityStudio/SLSTK3400A_EFM32HG_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/msc/msc_rw/SimplicityStudio/STK3200_EFM32ZG_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/msc/msc_rw/SimplicityStudio/STK3300_EFM32TG_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/msc/msc_rw/SimplicityStudio/STK3600_EFM32LG_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/msc/msc_rw/SimplicityStudio/STK3700_EFM32GG_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/msc/msc_rw/SimplicityStudio/STK3800_EFM32WG_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/msc/msc_rw/SimplicityStudio/STKXXX_EFM32G_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_opamp_cascaded_inverting" description="This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_opamp_cascaded_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_cascaded_inverting/SimplicityStudio/STK3300_EFM32TG_opamp_cascaded_inverting.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_opamp_cascaded_inverting" description="This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_opamp_cascaded_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_cascaded_inverting/SimplicityStudio/STK3600_EFM32LG_opamp_cascaded_inverting.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_opamp_cascaded_inverting" description="This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_opamp_cascaded_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_cascaded_inverting/SimplicityStudio/STK3700_EFM32GG_opamp_cascaded_inverting.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_opamp_cascaded_inverting" description="This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_opamp_cascaded_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_cascaded_inverting/SimplicityStudio/STK3800_EFM32WG_opamp_cascaded_inverting.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_opamp_cascaded_noninverting" description="This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_opamp_cascaded_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_cascaded_noninverting/SimplicityStudio/STK3300_EFM32TG_opamp_cascaded_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_opamp_cascaded_noninverting" description="This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_opamp_cascaded_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_cascaded_noninverting/SimplicityStudio/STK3600_EFM32LG_opamp_cascaded_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_opamp_cascaded_noninverting" description="This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_opamp_cascaded_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_cascaded_noninverting/SimplicityStudio/STK3700_EFM32GG_opamp_cascaded_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_opamp_cascaded_noninverting" description="This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_opamp_cascaded_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_cascaded_noninverting/SimplicityStudio/STK3800_EFM32WG_opamp_cascaded_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_opamp_dac_to_opamp" description="This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also configures the DAC to output on Channel 0. The user should use a wire to connect the output of the DAC to the positive input node of the opamp. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_opamp_dac_to_opamp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_dac_to_opamp/SimplicityStudio/STK3300_EFM32TG_opamp_dac_to_opamp.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_opamp_dac_to_opamp" description="This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also configures the DAC to output on Channel 0. The user should use a wire to connect the output of the DAC to the positive input node of the opamp. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_opamp_dac_to_opamp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_dac_to_opamp/SimplicityStudio/STK3600_EFM32LG_opamp_dac_to_opamp.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_opamp_dac_to_opamp" description="This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also configures the DAC to output on Channel 0. The user should use a wire to connect the output of the DAC to the positive input node of the opamp. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_opamp_dac_to_opamp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_dac_to_opamp/SimplicityStudio/STK3700_EFM32GG_opamp_dac_to_opamp.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_opamp_dac_to_opamp" description="This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also configures the DAC to output on Channel 0. The user should use a wire to connect the output of the DAC to the positive input node of the opamp. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_opamp_dac_to_opamp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_dac_to_opamp/SimplicityStudio/STK3800_EFM32WG_opamp_dac_to_opamp.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_opamp_differential_three" description="This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_opamp_differential_three"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_differential_three/SimplicityStudio/STK3300_EFM32TG_opamp_differential_three.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_opamp_differential_three" description="This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_opamp_differential_three"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_differential_three/SimplicityStudio/STK3600_EFM32LG_opamp_differential_three.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_opamp_differential_three" description="This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_opamp_differential_three"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_differential_three/SimplicityStudio/STK3700_EFM32GG_opamp_differential_three.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_opamp_differential_three" description="This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_opamp_differential_three"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_differential_three/SimplicityStudio/STK3800_EFM32WG_opamp_differential_three.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_opamp_differential_two" description="This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_opamp_differential_two"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_differential_two/SimplicityStudio/STK3300_EFM32TG_opamp_differential_two.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_opamp_differential_two" description="This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_opamp_differential_two"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_differential_two/SimplicityStudio/STK3600_EFM32LG_opamp_differential_two.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_opamp_differential_two" description="This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_opamp_differential_two"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_differential_two/SimplicityStudio/STK3700_EFM32GG_opamp_differential_two.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_opamp_differential_two" description="This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_opamp_differential_two"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_differential_two/SimplicityStudio/STK3800_EFM32WG_opamp_differential_two.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_opamp_inverting" description="This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_opamp_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_inverting/SimplicityStudio/STK3300_EFM32TG_opamp_inverting.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_opamp_inverting" description="This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_opamp_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_inverting/SimplicityStudio/STK3600_EFM32LG_opamp_inverting.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_opamp_inverting" description="This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_opamp_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_inverting/SimplicityStudio/STK3700_EFM32GG_opamp_inverting.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_opamp_inverting" description="This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_opamp_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_inverting/SimplicityStudio/STK3800_EFM32WG_opamp_inverting.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_opamp_noninverting" description="This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_opamp_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_noninverting/SimplicityStudio/STK3300_EFM32TG_opamp_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_opamp_noninverting" description="This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_opamp_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_noninverting/SimplicityStudio/STK3600_EFM32LG_opamp_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_opamp_noninverting" description="This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_opamp_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_noninverting/SimplicityStudio/STK3700_EFM32GG_opamp_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_opamp_noninverting" description="This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_opamp_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_noninverting/SimplicityStudio/STK3800_EFM32WG_opamp_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_opamp_to_adc" description="This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also configures the ADC to receive input on the same pin the opamp is outputting to so that the user can enter debug mode to check the ADC conversion of the opamp output. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_opamp_to_adc"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_to_adc/SimplicityStudio/STK3300_EFM32TG_opamp_to_adc.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_opamp_to_adc" description="This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also configures the ADC to receive input on the same pin the opamp is outputting to so that the user can enter debug mode to check the ADC conversion of the opamp output. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_opamp_to_adc"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_to_adc/SimplicityStudio/STK3600_EFM32LG_opamp_to_adc.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_opamp_to_adc" description="This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also configures the ADC to receive input on the same pin the opamp is outputting to so that the user can enter debug mode to check the ADC conversion of the opamp output. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_opamp_to_adc"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_to_adc/SimplicityStudio/STK3700_EFM32GG_opamp_to_adc.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_opamp_to_adc" description="This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also configures the ADC to receive input on the same pin the opamp is outputting to so that the user can enter debug mode to check the ADC conversion of the opamp output. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_opamp_to_adc"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_to_adc/SimplicityStudio/STK3800_EFM32WG_opamp_to_adc.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_opamp_unity_gain" description="This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and drive higher loads. This project operates in EM3. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_opamp_unity_gain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_unity_gain/SimplicityStudio/STK3300_EFM32TG_opamp_unity_gain.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_opamp_unity_gain" description="This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and drive higher loads. This project operates in EM3. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_opamp_unity_gain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_unity_gain/SimplicityStudio/STK3600_EFM32LG_opamp_unity_gain.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_opamp_unity_gain" description="This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and drive higher loads. This project operates in EM3. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_opamp_unity_gain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_unity_gain/SimplicityStudio/STK3700_EFM32GG_opamp_unity_gain.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_opamp_unity_gain" description="This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and drive higher loads. This project operates in EM3. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_opamp_unity_gain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/opamp/opamp_unity_gain/SimplicityStudio/STK3800_EFM32WG_opamp_unity_gain.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_qudarature/SimplicityStudio/SLSTK3400A_EFM32HG_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_qudarature/SimplicityStudio/STK3200_EFM32ZG_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_qudarature/SimplicityStudio/STK3300_EFM32TG_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_qudarature/SimplicityStudio/STK3600_EFM32LG_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_qudarature/SimplicityStudio/STK3700_EFM32GG_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_qudarature/SimplicityStudio/STK3800_EFM32WG_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_qudarature/SimplicityStudio/STKXXX_EFM32G_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/SLSTK3400A_EFM32HG_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/STK3200_EFM32ZG_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/STK3300_EFM32TG_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/STK3600_EFM32LG_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/STK3700_EFM32GG_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/STK3800_EFM32WG_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/STKXXX_EFM32G_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero.  In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/SLSTK3400A_EFM32HG_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero.  In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/STK3200_EFM32ZG_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero.  In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/STK3300_EFM32TG_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero.  In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/STK3600_EFM32LG_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero.  In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/STK3700_EFM32GG_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero.  In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/STK3800_EFM32WG_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter using interrupts. BTN0 clock is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/STKXXX_EFM32G_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/SLSTK3400A_EFM32HG_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/STK3200_EFM32ZG_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/STK3300_EFM32TG_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/STK3600_EFM32LG_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/STK3700_EFM32GG_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/STK3800_EFM32WG_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/STKXXX_EFM32G_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/SLSTK3400A_EFM32HG_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/STK3200_EFM32ZG_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/STK3300_EFM32TG_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/STK3600_EFM32LG_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/STK3700_EFM32GG_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/STK3800_EFM32WG_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/STKXXX_EFM32G_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. Note for Zero Gecko PB0 and PB1 functionality is switched. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rmu/rmu_get_reset_cause/SimplicityStudio/SLSTK3400A_EFM32HG_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. Note for Zero Gecko PB0 and PB1 functionality is switched. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rmu/rmu_get_reset_cause/SimplicityStudio/STK3200_EFM32ZG_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rmu/rmu_get_reset_cause/SimplicityStudio/STK3300_EFM32TG_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rmu/rmu_get_reset_cause/SimplicityStudio/STK3600_EFM32LG_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rmu/rmu_get_reset_cause/SimplicityStudio/STK3700_EFM32GG_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rmu/rmu_get_reset_cause/SimplicityStudio/STK3800_EFM32WG_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_rmu_get_reset_cause" description="This project demonstrates three different reset sources - POR, Pin Reset  and System Reset Request. GPIO Push Button (PB0) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rmu/rmu_get_reset_cause/SimplicityStudio/STKXXX_EFM32G_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_rtc_lfxo" description="This project demonstrates the use of the Real Time Counter in EM2. The timer is set to interrupt every 3 seconds and upon interrupt  LED0 is toggled. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_rtc_lfxo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rtc/rtc_lfxo/SimplicityStudio/SLSTK3400A_EFM32HG_rtc_lfxo.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_rtc_lfxo" description="This project demonstrates the use of the Real Time Counter in EM2. The timer is set to interrupt every 3 seconds and upon interrupt  LED0 is toggled. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_rtc_lfxo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rtc/rtc_lfxo/SimplicityStudio/STK3200_EFM32ZG_rtc_lfxo.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_rtc_lfxo" description="This project demonstrates the use of the Real Time Counter in EM2. The timer is set to interrupt every 3 seconds and upon interrupt  LED0 is toggled. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_rtc_lfxo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rtc/rtc_lfxo/SimplicityStudio/STK3300_EFM32TG_rtc_lfxo.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_rtc_lfxo" description="This project demonstrates the use of the Real Time Counter in EM2. The timer is set to interrupt every 3 seconds and upon interrupt  LED0 is toggled. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_rtc_lfxo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rtc/rtc_lfxo/SimplicityStudio/STK3600_EFM32LG_rtc_lfxo.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_rtc_lfxo" description="This project demonstrates the use of the Real Time Counter in EM2. The timer is set to interrupt every 3 seconds and upon interrupt  LED0 is toggled. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_rtc_lfxo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rtc/rtc_lfxo/SimplicityStudio/STK3700_EFM32GG_rtc_lfxo.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_rtc_lfxo" description="This project demonstrates the use of the Real Time Counter in EM2. The timer is set to interrupt every 3 seconds and upon interrupt  LED0 is toggled. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_rtc_lfxo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rtc/rtc_lfxo/SimplicityStudio/STK3800_EFM32WG_rtc_lfxo.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_rtc_lfxo" description="This project demonstrates the use of the Real Time Counter in EM2. The timer is set to interrupt every 3 seconds and upon interrupt  LED0 is toggled. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_rtc_lfxo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rtc/rtc_lfxo/SimplicityStudio/STKXXX_EFM32G_rtc_lfxo.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_rtc_ulfrco" description="This project demonstrates the use of the Real Time Counter in EM3. The RTC is set up and then the device goes into EM3. After 5 seconds the RTC interrupts waking the device and causing LED0 to toggle. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_rtc_ulfrco"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rtc/rtc_ulfrco/SimplicityStudio/SLSTK3400A_EFM32HG_rtc_ulfrco.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_rtc_ulfrco" description="This project demonstrates the use of the Real Time Counter in EM3. The RTC is set up and then the device goes into EM3. After 5 seconds the RTC interrupts waking the device and causing LED0 to toggle. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_rtc_ulfrco"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rtc/rtc_ulfrco/SimplicityStudio/STK3200_EFM32ZG_rtc_ulfrco.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_rtc_ulfrco" description="This project demonstrates the use of the Real Time Counter in EM3. The RTC is set up and then the device goes into EM3. After 5 seconds the RTC interrupts waking the device and causing LED0 to toggle. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_rtc_ulfrco"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rtc/rtc_ulfrco/SimplicityStudio/STK3300_EFM32TG_rtc_ulfrco.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_rtc_ulfrco" description="This project demonstrates the use of the Real Time Counter in EM3. The RTC is set up and then the device goes into EM3. After 5 seconds the RTC interrupts waking the device and causing LED0 to toggle. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_rtc_ulfrco"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rtc/rtc_ulfrco/SimplicityStudio/STK3600_EFM32LG_rtc_ulfrco.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_rtc_ulfrco" description="This project demonstrates the use of the Real Time Counter in EM3. The RTC is set up and then the device goes into EM3. After 5 seconds the RTC interrupts waking the device and causing LED0 to toggle. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_rtc_ulfrco"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rtc/rtc_ulfrco/SimplicityStudio/STK3700_EFM32GG_rtc_ulfrco.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_rtc_ulfrco" description="This project demonstrates the use of the Real Time Counter in EM3. The RTC is set up and then the device goes into EM3. After 5 seconds the RTC interrupts waking the device and causing LED0 to toggle. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_rtc_ulfrco"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/rtc/rtc_ulfrco/SimplicityStudio/STK3800_EFM32WG_rtc_ulfrco.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/servo/adjust/SimplicityStudio/SLSTK3400A_EFM32HG_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/servo/adjust/SimplicityStudio/STK3200_EFM32ZG_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/servo/adjust/SimplicityStudio/STK3300_EFM32TG_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/servo/adjust/SimplicityStudio/STK3600_EFM32LG_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/servo/adjust/SimplicityStudio/STK3700_EFM32GG_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/servo/adjust/SimplicityStudio/STK3800_EFM32WG_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/servo/adjust/SimplicityStudio/STKXXX_EFM32G_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/servo/sweep/SimplicityStudio/SLSTK3400A_EFM32HG_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/servo/sweep/SimplicityStudio/STK3200_EFM32ZG_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/servo/sweep/SimplicityStudio/STK3300_EFM32TG_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/servo/sweep/SimplicityStudio/STK3600_EFM32LG_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/servo/sweep/SimplicityStudio/STK3700_EFM32GG_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/servo/sweep/SimplicityStudio/STK3800_EFM32WG_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/servo/sweep/SimplicityStudio/STKXXX_EFM32G_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_dma_edge_capture/SimplicityStudio/SLSTK3400A_EFM32HG_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_dma_edge_capture/SimplicityStudio/STK3200_EFM32ZG_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_dma_edge_capture/SimplicityStudio/STK3300_EFM32TG_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_dma_edge_capture/SimplicityStudio/STK3600_EFM32LG_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_dma_edge_capture/SimplicityStudio/STK3700_EFM32GG_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_dma_edge_capture/SimplicityStudio/STK3800_EFM32WG_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_dma_edge_capture/SimplicityStudio/STKXXX_EFM32G_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_frequency_generation/SimplicityStudio/SLSTK3400A_EFM32HG_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_frequency_generation/SimplicityStudio/STK3200_EFM32ZG_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_frequency_generation/SimplicityStudio/STK3300_EFM32TG_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_frequency_generation/SimplicityStudio/STK3600_EFM32LG_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_frequency_generation/SimplicityStudio/STK3700_EFM32GG_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_frequency_generation/SimplicityStudio/STK3800_EFM32WG_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_frequency_generation/SimplicityStudio/STKXXX_EFM32G_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_input_capture_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_input_capture_interrupt/SimplicityStudio/STK3200_EFM32ZG_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_input_capture_interrupt/SimplicityStudio/STK3300_EFM32TG_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_input_capture_interrupt/SimplicityStudio/STK3600_EFM32LG_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_input_capture_interrupt/SimplicityStudio/STK3700_EFM32GG_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_input_capture_interrupt/SimplicityStudio/STK3800_EFM32WG_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_input_capture_interrupt/SimplicityStudio/STKXXX_EFM32G_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_input_capture_polled/SimplicityStudio/SLSTK3400A_EFM32HG_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_input_capture_polled/SimplicityStudio/STK3200_EFM32ZG_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_input_capture_polled/SimplicityStudio/STK3300_EFM32TG_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_input_capture_polled/SimplicityStudio/STK3600_EFM32LG_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_input_capture_polled/SimplicityStudio/STK3700_EFM32GG_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_input_capture_polled/SimplicityStudio/STK3800_EFM32WG_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_input_capture_polled/SimplicityStudio/STKXXX_EFM32G_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_period_measurement_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_period_measurement_interrupt/SimplicityStudio/STK3200_EFM32ZG_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_period_measurement_interrupt/SimplicityStudio/STK3300_EFM32TG_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_period_measurement_interrupt/SimplicityStudio/STK3600_EFM32LG_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_period_measurement_interrupt/SimplicityStudio/STK3700_EFM32GG_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_period_measurement_interrupt/SimplicityStudio/STK3800_EFM32WG_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_period_measurement_interrupt/SimplicityStudio/STKXXX_EFM32G_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_period_measurement_polled/SimplicityStudio/SLSTK3400A_EFM32HG_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_period_measurement_polled/SimplicityStudio/STK3200_EFM32ZG_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_period_measurement_polled/SimplicityStudio/STK3300_EFM32TG_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_period_measurement_polled/SimplicityStudio/STK3600_EFM32LG_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_period_measurement_polled/SimplicityStudio/STK3700_EFM32GG_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_period_measurement_polled/SimplicityStudio/STK3800_EFM32WG_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_period_measurement_polled/SimplicityStudio/STKXXX_EFM32G_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pulse_capture/SimplicityStudio/SLSTK3400A_EFM32HG_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pulse_capture/SimplicityStudio/STK3200_EFM32ZG_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pulse_capture/SimplicityStudio/STK3300_EFM32TG_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pulse_capture/SimplicityStudio/STK3600_EFM32LG_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pulse_capture/SimplicityStudio/STK3700_EFM32GG_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pulse_capture/SimplicityStudio/STK3800_EFM32WG_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pulse_capture/SimplicityStudio/STKXXX_EFM32G_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pwm_dma/SimplicityStudio/SLSTK3400A_EFM32HG_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pwm_dma/SimplicityStudio/STK3200_EFM32ZG_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pwm_dma/SimplicityStudio/STK3300_EFM32TG_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pwm_dma/SimplicityStudio/STK3600_EFM32LG_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pwm_dma/SimplicityStudio/STK3700_EFM32GG_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pwm_dma/SimplicityStudio/STK3800_EFM32WG_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pwm_dma/SimplicityStudio/STKXXX_EFM32G_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pwm_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pwm_interrupt/SimplicityStudio/STK3200_EFM32ZG_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pwm_interrupt/SimplicityStudio/STK3300_EFM32TG_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pwm_interrupt/SimplicityStudio/STK3600_EFM32LG_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pwm_interrupt/SimplicityStudio/STK3700_EFM32GG_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pwm_interrupt/SimplicityStudio/STK3800_EFM32WG_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_pwm_interrupt/SimplicityStudio/STKXXX_EFM32G_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_edge_output_compare/SimplicityStudio/SLSTK3400A_EFM32HG_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_edge_output_compare/SimplicityStudio/STK3200_EFM32ZG_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_edge_output_compare/SimplicityStudio/STK3300_EFM32TG_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_edge_output_compare/SimplicityStudio/STK3600_EFM32LG_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_edge_output_compare/SimplicityStudio/STK3700_EFM32GG_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_edge_output_compare/SimplicityStudio/STK3800_EFM32WG_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_edge_output_compare/SimplicityStudio/STKXXX_EFM32G_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_dma/SimplicityStudio/SLSTK3400A_EFM32HG_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_dma/SimplicityStudio/STK3200_EFM32ZG_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_dma/SimplicityStudio/STK3300_EFM32TG_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_dma/SimplicityStudio/STK3600_EFM32LG_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_dma/SimplicityStudio/STK3700_EFM32GG_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_dma/SimplicityStudio/STK3800_EFM32WG_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_dma/SimplicityStudio/STKXXX_EFM32G_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/STK3200_EFM32ZG_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/STK3300_EFM32TG_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/STK3600_EFM32LG_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/STK3700_EFM32GG_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/STK3800_EFM32WG_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/STKXXX_EFM32G_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_polled/SimplicityStudio/SLSTK3400A_EFM32HG_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_polled/SimplicityStudio/STK3200_EFM32ZG_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_polled/SimplicityStudio/STK3300_EFM32TG_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_polled/SimplicityStudio/STK3600_EFM32LG_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_polled/SimplicityStudio/STK3700_EFM32GG_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_polled/SimplicityStudio/STK3800_EFM32WG_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/timer/timer_single_pulse_generation_polled/SimplicityStudio/STKXXX_EFM32G_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_async_interrupt" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/async_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_async_interrupt" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/async_interrupt/SimplicityStudio/STK3200_EFM32ZG_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_async_interrupt" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/async_interrupt/SimplicityStudio/STK3300_EFM32TG_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_async_interrupt" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/async_interrupt/SimplicityStudio/STK3600_EFM32LG_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_async_interrupt" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/async_interrupt/SimplicityStudio/STK3700_EFM32GG_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_async_interrupt" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/async_interrupt/SimplicityStudio/STK3800_EFM32WG_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_async_interrupt" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/async_interrupt/SimplicityStudio/STKXXX_EFM32G_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/async_polled/SimplicityStudio/SLSTK3400A_EFM32HG_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/async_polled/SimplicityStudio/STK3200_EFM32ZG_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/async_polled/SimplicityStudio/STK3600_EFM32LG_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/async_polled/SimplicityStudio/STK3700_EFM32GG_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/async_polled/SimplicityStudio/STK3800_EFM32WG_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/async_polled/SimplicityStudio/STKXXX_EFM32G_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_dma_master/SimplicityStudio/SLSTK3400A_EFM32HG_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_dma_master/SimplicityStudio/STK3200_EFM32ZG_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_dma_master/SimplicityStudio/STK3300_EFM32TG_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_dma_master/SimplicityStudio/STK3600_EFM32LG_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_dma_master/SimplicityStudio/STK3700_EFM32GG_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_dma_master/SimplicityStudio/STK3800_EFM32WG_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_dma_master/SimplicityStudio/STKXXX_EFM32G_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_dma_slave/SimplicityStudio/SLSTK3400A_EFM32HG_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_dma_slave/SimplicityStudio/STK3200_EFM32ZG_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_dma_slave/SimplicityStudio/STK3300_EFM32TG_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_dma_slave/SimplicityStudio/STK3600_EFM32LG_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_dma_slave/SimplicityStudio/STK3700_EFM32GG_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_dma_slave/SimplicityStudio/STK3800_EFM32WG_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_dma_slave/SimplicityStudio/STKXXX_EFM32G_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_dma_prs_gpio/SimplicityStudio/SLSTK3400A_EFM32HG_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_dma_prs_gpio/SimplicityStudio/STK3200_EFM32ZG_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_dma_prs_gpio/SimplicityStudio/STK3300_EFM32TG_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_dma_prs_gpio/SimplicityStudio/STK3600_EFM32LG_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_dma_prs_gpio/SimplicityStudio/STK3700_EFM32GG_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_dma_prs_gpio/SimplicityStudio/STK3800_EFM32WG_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_dma_prs_gpio/SimplicityStudio/STKXXX_EFM32G_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_interrupt/SimplicityStudio/STK3200_EFM32ZG_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_interrupt/SimplicityStudio/STK3300_EFM32TG_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_interrupt/SimplicityStudio/STK3600_EFM32LG_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_interrupt/SimplicityStudio/STK3700_EFM32GG_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_interrupt/SimplicityStudio/STK3800_EFM32WG_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_interrupt/SimplicityStudio/STKXXX_EFM32G_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_polled/SimplicityStudio/SLSTK3400A_EFM32HG_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_polled/SimplicityStudio/STK3200_EFM32ZG_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_polled/SimplicityStudio/STK3300_EFM32TG_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_polled/SimplicityStudio/STK3600_EFM32LG_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_polled/SimplicityStudio/STK3700_EFM32GG_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_polled/SimplicityStudio/STK3800_EFM32WG_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_master_polled/SimplicityStudio/STKXXX_EFM32G_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_slave_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_slave_interrupt/SimplicityStudio/STK3200_EFM32ZG_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_slave_interrupt/SimplicityStudio/STK3300_EFM32TG_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_slave_interrupt/SimplicityStudio/STK3600_EFM32LG_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_slave_interrupt/SimplicityStudio/STK3700_EFM32GG_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_slave_interrupt/SimplicityStudio/STK3800_EFM32WG_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_slave_interrupt/SimplicityStudio/STKXXX_EFM32G_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_slave_polled/SimplicityStudio/SLSTK3400A_EFM32HG_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_slave_polled/SimplicityStudio/STK3200_EFM32ZG_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_slave_polled/SimplicityStudio/STK3300_EFM32TG_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_slave_polled/SimplicityStudio/STK3600_EFM32LG_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_slave_polled/SimplicityStudio/STK3700_EFM32GG_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_slave_polled/SimplicityStudio/STK3800_EFM32WG_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usart/spi_slave_polled/SimplicityStudio/STKXXX_EFM32G_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_usbd_cdc_uart_bridge" description="This project uses the USB module to implement a USB CDC device (Communications Device Class) that uses the driver code in Drivers/cdc.c to act as a USB to UART bridge. Input that is received on the USB device's USART RX pin gets processed and then sent over USB to the USB host. Input that is received from the USB host is then processed and sent to the USB device's USART TX pin. In this case, the USB host is the computer and the USB device is the EFM32 board. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_usbd_cdc_uart_bridge"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USBD"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usbd/usbd_cdc_uart_bridge/SimplicityStudio/SLSTK3400A_EFM32HG_usbd_cdc_uart_bridge.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_usbd_cdc_uart_bridge" description="This project uses the USB module to implement a USB CDC device (Communications Device Class) that uses the driver code in Drivers/cdc.c to act as a USB to UART bridge. Input that is received on the USB device's USART RX pin gets processed and then sent over USB to the USB host. Input that is received from the USB host is then processed and sent to the USB device's USART TX pin. In this case, the USB host is the computer and the USB device is the EFM32 board. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_usbd_cdc_uart_bridge"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USBD"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usbd/usbd_cdc_uart_bridge/SimplicityStudio/STK3600_EFM32LG_usbd_cdc_uart_bridge.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_usbd_cdc_uart_bridge" description="This project uses the USB module to implement a USB CDC device (Communications Device Class) that uses the driver code in Drivers/cdc.c to act as a USB to UART bridge. Input that is received on the USB device's USART RX pin gets processed and then sent over USB to the USB host. Input that is received from the USB host is then processed and sent to the USB device's USART TX pin. In this case, the USB host is the computer and the USB device is the EFM32 board. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_usbd_cdc_uart_bridge"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USBD"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usbd/usbd_cdc_uart_bridge/SimplicityStudio/STK3700_EFM32GG_usbd_cdc_uart_bridge.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_usbd_cdc_uart_bridge" description="This project uses the USB module to implement a USB CDC device (Communications Device Class) that uses the driver code in Drivers/cdc.c to act as a USB to UART bridge. Input that is received on the USB device's USART RX pin gets processed and then sent over USB to the USB host. Input that is received from the USB host is then processed and sent to the USB device's USART TX pin. In this case, the USB host is the computer and the USB device is the EFM32 board. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_usbd_cdc_uart_bridge"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USBD"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usbd/usbd_cdc_uart_bridge/SimplicityStudio/STK3800_EFM32WG_usbd_cdc_uart_bridge.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_usbd_cdc_vcom_echo" description="This project uses the USB module to implement a USB CDC device (Communications Device Class) that acts as a VCOM port. This example uses the &quot;VCOM port&quot; to implement a basic echo application. Data that is received from the USB host is processed by the USB device and then sent back to the USB host. In this case, the USB host is the computer and the USB device is the EFM32 board. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_usbd_cdc_vcom_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USBD"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usbd/usbd_cdc_vcom_echo/SimplicityStudio/SLSTK3400A_EFM32HG_usbd_cdc_vcom_echo.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_usbd_cdc_vcom_echo" description="This project uses the USB module to implement a USB CDC device (Communications Device Class) that acts as a VCOM port. This example uses the &quot;VCOM port&quot; to implement a basic echo application. Data that is received from the USB host is processed by the USB device and then sent back to the USB host. In this case, the USB host is the computer and the USB device is the EFM32 board. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_usbd_cdc_vcom_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USBD"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usbd/usbd_cdc_vcom_echo/SimplicityStudio/STK3600_EFM32LG_usbd_cdc_vcom_echo.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_usbd_cdc_vcom_echo" description="This project uses the USB module to implement a USB CDC device (Communications Device Class) that acts as a VCOM port. This example uses the &quot;VCOM port&quot; to implement a basic echo application. Data that is received from the USB host is processed by the USB device and then sent back to the USB host. In this case, the USB host is the computer and the USB device is the EFM32 board. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_usbd_cdc_vcom_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USBD"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usbd/usbd_cdc_vcom_echo/SimplicityStudio/STK3700_EFM32GG_usbd_cdc_vcom_echo.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_usbd_cdc_vcom_echo" description="This project uses the USB module to implement a USB CDC device (Communications Device Class) that acts as a VCOM port. This example uses the &quot;VCOM port&quot; to implement a basic echo application. Data that is received from the USB host is processed by the USB device and then sent back to the USB host. In this case, the USB host is the computer and the USB device is the EFM32 board. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_usbd_cdc_vcom_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USBD"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/usbd/usbd_cdc_vcom_echo/SimplicityStudio/STK3800_EFM32WG_usbd_cdc_vcom_echo.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_vcmp_interrupt" description="This project demonstrates the VCMP to detect battery level thresholds in EM2.  When the source battery is below the MAX_VOLTAGE (3.0 V), LED0 is off.  When the battery is above MAX_VOLTAGE, LED0 is on.  Interrupts occur on falling edges to re-evaluate what value LED0 should have. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_vcmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VCMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vcmp/vcmp_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_vcmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_vcmp_interrupt" description="This project demonstrates the VCMP to detect battery level thresholds in EM2.  When the source battery is below the MAX_VOLTAGE (3.0 V), LED0 is off.  When the battery is above MAX_VOLTAGE, LED0 is on.  Interrupts occur on falling edges to re-evaluate what value LED0 should have. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_vcmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VCMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vcmp/vcmp_interrupt/SimplicityStudio/STK3200_EFM32ZG_vcmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_vcmp_interrupt" description="This project demonstrates the VCMP to detect battery level thresholds in EM2.  When the source battery is below the MAX_VOLTAGE (3.0 V), LED0 is off.  When the battery is above MAX_VOLTAGE, LED0 is on.  Interrupts occur on falling edges to re-evaluate what value LED0 should have. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_vcmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VCMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vcmp/vcmp_interrupt/SimplicityStudio/STK3300_EFM32TG_vcmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_vcmp_interrupt" description="This project demonstrates the VCMP to detect battery level thresholds in EM2.  When the source battery is below the MAX_VOLTAGE (3.0 V), LED0 is off.  When the battery is above MAX_VOLTAGE, LED0 is on.  Interrupts occur on falling edges to re-evaluate what value LED0 should have. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_vcmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VCMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vcmp/vcmp_interrupt/SimplicityStudio/STK3600_EFM32LG_vcmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_vcmp_interrupt" description="This project demonstrates the VCMP to detect battery level thresholds in EM2.  When the source battery is below the MAX_VOLTAGE (3.0 V), LED0 is off.  When the battery is above MAX_VOLTAGE, LED0 is on.  Interrupts occur on falling edges to re-evaluate what value LED0 should have. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_vcmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VCMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vcmp/vcmp_interrupt/SimplicityStudio/STK3700_EFM32GG_vcmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_vcmp_interrupt" description="This project demonstrates the VCMP to detect battery level thresholds in EM2.  When the source battery is below the MAX_VOLTAGE (3.0 V), LED0 is off.  When the battery is above MAX_VOLTAGE, LED0 is on.  Interrupts occur on falling edges to re-evaluate what value LED0 should have. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_vcmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VCMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vcmp/vcmp_interrupt/SimplicityStudio/STK3800_EFM32WG_vcmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_vcmp_interrupt" description="This project demonstrates the VCMP to detect battery level thresholds in EM2.  When the source battery is below the MAX_VOLTAGE (3.0 V), LED0 is off.  When the battery is above MAX_VOLTAGE, LED0 is on.  Interrupts occur on falling edges to re-evaluate what value LED0 should have. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_vcmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VCMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vcmp/vcmp_interrupt/SimplicityStudio/STKXXX_EFM32G_vcmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_vdac_continuous" description="This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_vdac_continuous"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_continuous/SimplicityStudio/STK3300_EFM32TG_vdac_continuous.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_vdac_continuous" description="This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_vdac_continuous"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_continuous/SimplicityStudio/STK3600_EFM32LG_vdac_continuous.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_vdac_continuous" description="This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_vdac_continuous"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_continuous/SimplicityStudio/STK3700_EFM32GG_vdac_continuous.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_vdac_continuous" description="This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_vdac_continuous"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_continuous/SimplicityStudio/STK3800_EFM32WG_vdac_continuous.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_vdac_continuous" description="This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_vdac_continuous"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_continuous/SimplicityStudio/STKXXX_EFM32G_vdac_continuous.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_vdac_differential" description="This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_vdac_differential"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_differential/SimplicityStudio/STK3300_EFM32TG_vdac_differential.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_vdac_differential" description="This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_vdac_differential"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_differential/SimplicityStudio/STK3600_EFM32LG_vdac_differential.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_vdac_differential" description="This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_vdac_differential"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_differential/SimplicityStudio/STK3700_EFM32GG_vdac_differential.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_vdac_differential" description="This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_vdac_differential"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_differential/SimplicityStudio/STK3800_EFM32WG_vdac_differential.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_vdac_differential" description="This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_vdac_differential"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_differential/SimplicityStudio/STKXXX_EFM32G_vdac_differential.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_vdac_sine_wave_synch" description="This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for series 0 boards and 31.25 kHz for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_vdac_sine_wave_synch"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_sine_wave_synch/SimplicityStudio/STK3300_EFM32TG_vdac_sine_wave_synch.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_vdac_sine_wave_synch" description="This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for series 0 boards and 31.25 kHz for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_vdac_sine_wave_synch"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_sine_wave_synch/SimplicityStudio/STK3600_EFM32LG_vdac_sine_wave_synch.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_vdac_sine_wave_synch" description="This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for series 0 boards and 31.25 kHz for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_vdac_sine_wave_synch"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_sine_wave_synch/SimplicityStudio/STK3700_EFM32GG_vdac_sine_wave_synch.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_vdac_sine_wave_synch" description="This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for series 0 boards and 31.25 kHz for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_vdac_sine_wave_synch"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_sine_wave_synch/SimplicityStudio/STK3800_EFM32WG_vdac_sine_wave_synch.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_vdac_sine_wave_synch" description="This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for series 0 boards and 31.25 kHz for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_vdac_sine_wave_synch"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_sine_wave_synch/SimplicityStudio/STKXXX_EFM32G_vdac_sine_wave_synch.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_vdac_single" description="This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_vdac_single"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_single/SimplicityStudio/STK3300_EFM32TG_vdac_single.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_vdac_single" description="This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_vdac_single"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_single/SimplicityStudio/STK3600_EFM32LG_vdac_single.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_vdac_single" description="This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_vdac_single"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_single/SimplicityStudio/STK3700_EFM32GG_vdac_single.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_vdac_single" description="This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_vdac_single"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_single/SimplicityStudio/STK3800_EFM32WG_vdac_single.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_vdac_single" description="This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_vdac_single"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_single/SimplicityStudio/STKXXX_EFM32G_vdac_single.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_vdac_timer_dma_waveform" description="This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_vdac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_timer_dma_waveform/SimplicityStudio/STK3300_EFM32TG_vdac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_vdac_timer_dma_waveform" description="This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_vdac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_timer_dma_waveform/SimplicityStudio/STK3600_EFM32LG_vdac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_vdac_timer_dma_waveform" description="This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_vdac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_timer_dma_waveform/SimplicityStudio/STK3700_EFM32GG_vdac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_vdac_timer_dma_waveform" description="This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_vdac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_timer_dma_waveform/SimplicityStudio/STK3800_EFM32WG_vdac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_vdac_timer_dma_waveform" description="This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_vdac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/vdac/vdac_timer_dma_waveform/SimplicityStudio/STKXXX_EFM32G_vdac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A_EFM32HG_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  an LED and a Push-button to indicate the state of the system. If the LED is flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, the LED is turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="defaultName" value="SLSTK3400A_EFM32HG_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/wdog/wdog_led_toggle/SimplicityStudio/SLSTK3400A_EFM32HG_wdog.slsproj"/>
  </descriptors>
  <descriptors label="STK3200_EFM32ZG_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  an LED and a Push-button to indicate the state of the system. If the LED is flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, the LED is turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="defaultName" value="STK3200_EFM32ZG_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/wdog/wdog_led_toggle/SimplicityStudio/STK3200_EFM32ZG_wdog.slsproj"/>
  </descriptors>
  <descriptors label="STK3300_EFM32TG_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  an LED and a Push-button to indicate the state of the system. If the LED is flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, the LED is turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd2100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg.*"/>
    <properties key="defaultName" value="STK3300_EFM32TG_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/wdog/wdog_led_toggle/SimplicityStudio/STK3300_EFM32TG_wdog.slsproj"/>
  </descriptors>
  <descriptors label="STK3600_EFM32LG_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  an LED and a Push-button to indicate the state of the system. If the LED is flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, the LED is turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="defaultName" value="STK3600_EFM32LG_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/wdog/wdog_led_toggle/SimplicityStudio/STK3600_EFM32LG_wdog.slsproj"/>
  </descriptors>
  <descriptors label="STK3700_EFM32GG_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  an LED and a Push-button to indicate the state of the system. If the LED is flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, the LED is turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="defaultName" value="STK3700_EFM32GG_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/wdog/wdog_led_toggle/SimplicityStudio/STK3700_EFM32GG_wdog.slsproj"/>
  </descriptors>
  <descriptors label="STK3800_EFM32WG_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  an LED and a Push-button to indicate the state of the system. If the LED is flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, the LED is turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="defaultName" value="STK3800_EFM32WG_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/wdog/wdog_led_toggle/SimplicityStudio/STK3800_EFM32WG_wdog.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX_EFM32G_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  an LED and a Push-button to indicate the state of the system. If the LED is flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, the LED is turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="defaultName" value="STKXXX_EFM32G_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series0/wdog/wdog_led_toggle/SimplicityStudio/STKXXX_EFM32G_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_interrupt/SimplicityStudio/BRD4169A_EFR32MG14P_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_acmp_interrupt" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with internal Vref of 1.25V. The program interrupts when the voltage on that pin drops below 1.25V, and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11B_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_pin_output/SimplicityStudio/BRD4100A_EFR32BG1P_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_pin_output/SimplicityStudio/BRD4103A_EFR32BG12P_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_pin_output/SimplicityStudio/BRD4104A_EFR32BG13P_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_pin_output/SimplicityStudio/BRD4151A_EFR32MG1P_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_pin_output/SimplicityStudio/BRD4159A_EFR32MG13P_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_pin_output/SimplicityStudio/BRD4161A_EFR32MG12P_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_pin_output/SimplicityStudio/BRD4169A_EFR32MG14P_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_pin_output/SimplicityStudio/BRD4250A_EFR32FG1P_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_pin_output/SimplicityStudio/BRD4253A_EFR32FG12P_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_pin_output/SimplicityStudio/BRD4256A_EFR32FG13P_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_pin_output/SimplicityStudio/BRD4257A_EFR32FG14P_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_pin_output/SimplicityStudio/SLSTK3301A_EFM32TG11B_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_pin_output/SimplicityStudio/SLSTK3401A_EFM32PG1B_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_pin_output/SimplicityStudio/SLSTK3402A_EFM32PG12B_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_acmp_pin_output" description="This project demonstrates a simple comparison of 2 inputs. An external input pin is compared with an internal Vref of 1.25V.  When the voltage on the input pin is above 1.25V, an output pin will be set high. When it is low, the output pin will be set low. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_pin_output/SimplicityStudio/SLSTK3701A_EFM32GG11B_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_polled/SimplicityStudio/BRD4100A_EFR32BG1P_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_polled/SimplicityStudio/BRD4103A_EFR32BG12P_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_polled/SimplicityStudio/BRD4104A_EFR32BG13P_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_polled/SimplicityStudio/BRD4151A_EFR32MG1P_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_polled/SimplicityStudio/BRD4159A_EFR32MG13P_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_polled/SimplicityStudio/BRD4161A_EFR32MG12P_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_polled/SimplicityStudio/BRD4169A_EFR32MG14P_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_polled/SimplicityStudio/BRD4250A_EFR32FG1P_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_polled/SimplicityStudio/BRD4253A_EFR32FG12P_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_polled/SimplicityStudio/BRD4256A_EFR32FG13P_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_polled/SimplicityStudio/BRD4257A_EFR32FG14P_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_polled/SimplicityStudio/SLSTK3301A_EFM32TG11B_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_polled/SimplicityStudio/SLSTK3401A_EFM32PG1B_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_acmp_polled" description="This project demonstrates a simple comparison of 2 inputs. An input pin is one input, which is compared with internal Vref of 1.25V. The program polls for a voltage greater than 1.25V on this input pin (see below for which pin). ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/acmp/acmp_polled/SimplicityStudio/SLSTK3701A_EFM32GG11B_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_adc_scan_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_adc_scan_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_diff_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_adc_scan_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_adc_scan_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_adc_scan_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_diff_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_adc_scan_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_adc_scan_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_adc_scan_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_diff_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_adc_scan_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_adc_scan_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_adc_scan_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_diff_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_adc_scan_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_adc_scan_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_adc_scan_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_diff_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_adc_scan_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_adc_scan_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_adc_scan_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_diff_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_adc_scan_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_adc_scan_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_adc_scan_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_diff_interrupt/SimplicityStudio/BRD4169A_EFR32MG14P_adc_scan_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_adc_scan_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_adc_scan_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_diff_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_adc_scan_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_adc_scan_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_adc_scan_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_diff_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_adc_scan_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_adc_scan_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_adc_scan_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_diff_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_adc_scan_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_adc_scan_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_adc_scan_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_diff_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_adc_scan_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_adc_scan_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_adc_scan_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_diff_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_scan_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_adc_scan_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_adc_scan_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_diff_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_adc_scan_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_adc_scan_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_adc_scan_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_diff_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_adc_scan_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_adc_scan_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take  differential-ended analog measurements across different channels.  ADC interrupts handle completed conversions and stores them in a software array. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_adc_scan_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_diff_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11B_adc_scan_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_adc_scan_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ADC interrupts handle  completed conversions and store the results in a software array. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_adc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_adc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_adc_scan_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ADC interrupts handle  completed conversions and store the results in a software array. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_adc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_adc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_adc_scan_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ADC interrupts handle  completed conversions and store the results in a software array. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_adc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_adc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_adc_scan_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ADC interrupts handle  completed conversions and store the results in a software array. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_adc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_adc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_adc_scan_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ADC interrupts handle  completed conversions and store the results in a software array. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_adc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_adc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_adc_scan_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ADC interrupts handle  completed conversions and store the results in a software array. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_adc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_adc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_adc_scan_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ADC interrupts handle  completed conversions and store the results in a software array. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_adc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_interrupt/SimplicityStudio/BRD4169A_EFR32MG14P_adc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_adc_scan_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ADC interrupts handle  completed conversions and store the results in a software array. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_adc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_adc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_adc_scan_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ADC interrupts handle  completed conversions and store the results in a software array. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_adc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_adc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_adc_scan_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ADC interrupts handle  completed conversions and store the results in a software array. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_adc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_adc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_adc_scan_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ADC interrupts handle  completed conversions and store the results in a software array. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_adc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_adc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_adc_scan_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ADC interrupts handle  completed conversions and store the results in a software array. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_adc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_adc_scan_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ADC interrupts handle  completed conversions and store the results in a software array. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_adc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_adc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_adc_scan_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ADC interrupts handle  completed conversions and store the results in a software array. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_adc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_adc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_adc_scan_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements across different channels. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ADC interrupts handle  completed conversions and store the results in a software array. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_adc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11B_adc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_adc_scan_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_adc_scan_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_adc_scan_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_adc_scan_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_adc_scan_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_adc_scan_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_adc_scan_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_adc_scan_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_adc_scan_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_adc_scan_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_adc_scan_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_adc_scan_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_adc_scan_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_adc_scan_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_adc_scan_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_adc_scan_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_adc_scan_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_adc_scan_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_adc_scan_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_adc_scan_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/BRD4169A_EFR32MG14P_adc_scan_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_adc_scan_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_adc_scan_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_adc_scan_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_adc_scan_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_adc_scan_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_adc_scan_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_adc_scan_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_adc_scan_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_adc_scan_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_adc_scan_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_adc_scan_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_adc_scan_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_adc_scan_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_adc_scan_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_scan_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_adc_scan_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_adc_scan_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_adc_scan_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_adc_scan_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_adc_scan_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_adc_scan_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_adc_scan_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with multiple single-ended inputs to take nonblocking measurements requested periodically by LETIMER0, and stores the results in an array. In this example, single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_adc_scan_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11B_adc_scan_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global variables. Single-ended inputs are selected from both APORTnX and Y buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/BRD4100A_EFR32BG1P_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global variables. Single-ended inputs are selected from both APORTnX and Y buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/BRD4103A_EFR32BG12P_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global variables. Single-ended inputs are selected from both APORTnX and Y buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/BRD4104A_EFR32BG13P_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global variables. Single-ended inputs are selected from both APORTnX and Y buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/BRD4151A_EFR32MG1P_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global variables. Single-ended inputs are selected from both APORTnX and Y buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/BRD4159A_EFR32MG13P_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global variables. Single-ended inputs are selected from both APORTnX and Y buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/BRD4161A_EFR32MG12P_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global variables. Single-ended inputs are selected from both APORTnX and Y buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/BRD4169A_EFR32MG14P_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global variables. Single-ended inputs are selected from both APORTnX and Y buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/BRD4250A_EFR32FG1P_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global variables. Single-ended inputs are selected from both APORTnX and Y buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/BRD4253A_EFR32FG12P_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global variables. Single-ended inputs are selected from both APORTnX and Y buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/BRD4256A_EFR32FG13P_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global variables. Single-ended inputs are selected from both APORTnX and Y buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/BRD4257A_EFR32FG14P_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global variables. Single-ended inputs are selected from both APORTnX and Y buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global variables. Single-ended inputs are selected from both APORTnX and Y buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/SLSTK3401A_EFM32PG1B_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global variables. Single-ended inputs are selected from both APORTnX and Y buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/SLSTK3402A_EFM32PG12B_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_adc_scan_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take multiple single- ended measurements.  These measurements are requested periodically by the LETIMER and routed through the prs. Completed conversions are handled by the LDMA, and the results are stored to global variables. Single-ended inputs are selected from both APORTnX and Y buses. For single-ended inputs  selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_adc_scan_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_letimer_prs_dma/SimplicityStudio/SLSTK3701A_EFM32GG11B_adc_scan_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. Single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/BRD4100A_EFR32BG1P_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. Single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/BRD4103A_EFR32BG12P_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. Single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/BRD4104A_EFR32BG13P_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. Single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/BRD4151A_EFR32MG1P_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. Single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/BRD4159A_EFR32MG13P_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. Single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/BRD4161A_EFR32MG12P_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. Single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/BRD4169A_EFR32MG14P_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. Single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/BRD4250A_EFR32FG1P_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. Single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/BRD4253A_EFR32FG12P_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. Single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/BRD4256A_EFR32FG13P_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. Single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/BRD4257A_EFR32FG14P_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. Single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. Single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/SLSTK3401A_EFM32PG1B_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. Single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/SLSTK3402A_EFM32PG12B_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_adc_scan_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements on multiple pins.  These measurements are requested by gpio signals and routed through the prs.  Completed conversions are handled by the DMA, and the results are stored in global variables. Single-ended inputs are selected from both APORTnX and APORTnY buses. For single-ended  inputs selected from the APORTnY bus, the ADC performs a negative single-ended conversion and automatically inverts the result. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_adc_scan_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_scan_prs_gpio_dma/SimplicityStudio/SLSTK3701A_EFM32GG11B_adc_scan_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_diff_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_diff_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_diff_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_diff_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_diff_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_diff_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_diff_interrupt/SimplicityStudio/BRD4169A_EFR32MG14P_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_diff_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_diff_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_diff_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_diff_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_diff_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_diff_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_diff_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_adc_single_diff_interrupt" description="This project demonstrates using the ADC0 peripheral to take differential-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_adc_single_diff_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_diff_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11B_adc_single_diff_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_interrupt/SimplicityStudio/BRD4169A_EFR32MG14P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_adc_single_interrupt" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  ADC interrupts handle completed conversions and stores them in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_adc_single_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11B_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_interrupt/SimplicityStudio/BRD4169A_EFR32MG14P_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_adc_single_letimer_interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input  to take nonblocking measurements requested periodically by the LETIMER. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_adc_single_letimer_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11B_adc_single_letimer_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/BRD4100A_EFR32BG1P_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/BRD4103A_EFR32BG12P_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/BRD4104A_EFR32BG13P_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/BRD4151A_EFR32MG1P_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/BRD4159A_EFR32MG13P_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/BRD4161A_EFR32MG12P_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/BRD4169A_EFR32MG14P_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/BRD4250A_EFR32FG1P_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/BRD4253A_EFR32FG12P_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/BRD4256A_EFR32FG13P_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/BRD4257A_EFR32FG14P_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/SLSTK3401A_EFM32PG1B_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/SLSTK3402A_EFM32PG12B_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_adc_single_letimer_prs_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended measurements.  These measurements are requested periodically by the  LETIMER and routed through the prs.  Completed conversions are handled by the LDMA, and the results are stored in internal variables. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_adc_single_letimer_prs_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_letimer_prs_dma/SimplicityStudio/SLSTK3701A_EFM32GG11B_adc_single_letimer_prs_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_polled/SimplicityStudio/BRD4100A_EFR32BG1P_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_polled/SimplicityStudio/BRD4103A_EFR32BG12P_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_polled/SimplicityStudio/BRD4104A_EFR32BG13P_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_polled/SimplicityStudio/BRD4151A_EFR32MG1P_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_polled/SimplicityStudio/BRD4159A_EFR32MG13P_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_polled/SimplicityStudio/BRD4161A_EFR32MG12P_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_polled/SimplicityStudio/BRD4169A_EFR32MG14P_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_polled/SimplicityStudio/BRD4250A_EFR32FG1P_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_polled/SimplicityStudio/BRD4253A_EFR32FG12P_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_polled/SimplicityStudio/BRD4256A_EFR32FG13P_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_polled/SimplicityStudio/BRD4257A_EFR32FG14P_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_polled/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_polled/SimplicityStudio/SLSTK3401A_EFM32PG1B_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_adc_single_polled" description="This project demonstrates using the ADC0 peripheral to take single-ended analog measurements.  The main program polls continuously for conversions, then stores the results in an internal variable. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_adc_single_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_polled/SimplicityStudio/SLSTK3701A_EFM32GG11B_adc_single_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/BRD4100A_EFR32BG1P_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/BRD4103A_EFR32BG12P_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/BRD4104A_EFR32BG13P_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/BRD4151A_EFR32MG1P_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/BRD4159A_EFR32MG13P_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/BRD4161A_EFR32MG12P_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/BRD4169A_EFR32MG14P_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/BRD4250A_EFR32FG1P_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/BRD4253A_EFR32FG12P_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/BRD4256A_EFR32FG13P_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/BRD4257A_EFR32FG14P_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/SLSTK3401A_EFM32PG1B_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/SLSTK3402A_EFM32PG12B_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_adc_single_prs_gpio_dma" description="This project demonstrates ADC0 peripheral in EM2 to take single-ended  measurements.  These measurements are requested by gpio signals and routed  through the prs.  Completed conversions are handled by the DMA, and the  results are stored in global variables. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_adc_single_prs_gpio_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/adc/adc_single_prs_gpio_dma/SimplicityStudio/SLSTK3701A_EFM32GG11B_adc_single_prs_gpio_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/BRD4100A_EFR32BG1_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/BRD4103A_EFR32BG12_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/BRD4104A_EFR32BG13_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/BRD4151A_EFR32MG1_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4158A_EFR32MG13_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4158a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4158A_EFR32MG13_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/BRD4158A_EFR32MG13_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4162A_EFR32MG12_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4162a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4162A_EFR32MG12_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/BRD4162A_EFR32MG12_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/BRD4250A_EFR32FG1_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/BRD4253A_EFR32FG12_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4255A_EFR32FG13_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4255a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4255A_EFR32FG13_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/BRD4255A_EFR32FG13_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/BRD4257A_EFR32FG14_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4300A_BGM111_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4300a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4300A_BGM111_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/BRD4300A_BGM111_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4301A_BGM113_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4301a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4301A_BGM113_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/BRD4301A_BGM113_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4302A_BGM121_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4302a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4302A_BGM121_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/BRD4302A_BGM121_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4306B_BGM13_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4306b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bgm13.*"/>
    <properties key="defaultName" value="BRD4306B_BGM13_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/BRD4306B_BGM13_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_hfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_hfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11_hfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/BRD4100A_EFR32BG1_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/BRD4103A_EFR32BG12_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/BRD4104A_EFR32BG13_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/BRD4151A_EFR32MG1_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4158A_EFR32MG13_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4158a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4158A_EFR32MG13_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/BRD4158A_EFR32MG13_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4162A_EFR32MG12_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4162a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4162A_EFR32MG12_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/BRD4162A_EFR32MG12_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/BRD4250A_EFR32FG1_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/BRD4253A_EFR32FG12_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4255A_EFR32FG13_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4255a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4255A_EFR32FG13_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/BRD4255A_EFR32FG13_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/BRD4257A_EFR32FG14_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4300A_BGM111_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4300a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4300A_BGM111_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/BRD4300A_BGM111_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4301A_BGM113_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4301a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4301A_BGM113_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/BRD4301A_BGM113_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4302A_BGM121_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4302a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4302A_BGM121_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/BRD4302A_BGM121_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4306B_BGM13_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4306b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bgm13.*"/>
    <properties key="defaultName" value="BRD4306B_BGM13_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/BRD4306B_BGM13_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/SLSTK3301A_EFM32TG11_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/SLSTK3401A_EFM32PG1_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/SLSTK3402A_EFM32PG12_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_hfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified HFRCO is output to a pin where it can be observed.  The CRYOTIMER is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_hfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/hfrco_cal_polled/SimplicityStudio/SLSTK3701A_EFM32GG11_hfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4100A_EFR32BG1_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4103A_EFR32BG12_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4104A_EFR32BG13_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4151A_EFR32MG1_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4158A_EFR32MG13_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd4158a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4158A_EFR32MG13_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4158A_EFR32MG13_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4162A_EFR32MG12_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd4162a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4162A_EFR32MG12_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4162A_EFR32MG12_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4250A_EFR32FG1_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4253A_EFR32FG12_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4255A_EFR32FG13_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd4255a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4255A_EFR32FG13_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4255A_EFR32FG13_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4257A_EFR32FG14_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4300A_BGM111_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd4300a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4300A_BGM111_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4300A_BGM111_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4301A_BGM113_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd4301a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4301A_BGM113_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4301A_BGM113_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4302A_BGM121_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd4302a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4302A_BGM121_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4302A_BGM121_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4306B_BGM13_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd4306b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bgm13.*"/>
    <properties key="defaultName" value="BRD4306B_BGM13_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4306B_BGM13_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/BRD4100A_EFR32BG1_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/BRD4103A_EFR32BG12_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/BRD4104A_EFR32BG13_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/BRD4151A_EFR32MG1_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4158A_EFR32MG13_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd4158a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4158A_EFR32MG13_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/BRD4158A_EFR32MG13_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4162A_EFR32MG12_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd4162a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4162A_EFR32MG12_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/BRD4162A_EFR32MG12_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/BRD4250A_EFR32FG1_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/BRD4253A_EFR32FG12_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4255A_EFR32FG13_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd4255a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4255A_EFR32FG13_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/BRD4255A_EFR32FG13_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/BRD4257A_EFR32FG14_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4300A_BGM111_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd4300a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4300A_BGM111_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/BRD4300A_BGM111_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4301A_BGM113_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd4301a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4301A_BGM113_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/BRD4301A_BGM113_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4302A_BGM121_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd4302a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4302A_BGM121_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/BRD4302A_BGM121_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4306B_BGM13_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd4306b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bgm13.*"/>
    <properties key="defaultName" value="BRD4306B_BGM13_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/BRD4306B_BGM13_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/SLSTK3301A_EFM32TG11_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/SLSTK3401A_EFM32PG1_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/SLSTK3402A_EFM32PG12_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_lfrco_cal_polled" description="This project demonstrates calibration of the LFRCO against the HFXO. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cmu/lfrco_cal_polled/SimplicityStudio/SLSTK3701A_EFM32GG11_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_dsp_lib_fft" description="This project demonstrates performing windowing and FFT on a time domain signal using the ARM CMSIS DSP_lib. A test 10kHz cosine is used for time domain data. The signal is first windowed by a hamming window function. This prevents artifacts in the FFT caused by discontinuity between the first and last  sample. The hamming window also reduces spectral leakage compared to lower  complexity windowing functions. The FFT is performed on the windowed signal, and the magnitude response is calculated and stored in a seperate buffer. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_dsp_lib_fft"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CORE"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/core/dsp_lib_fft/SimplicityStudio/BRD4100A_EFR32BG1P_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_dsp_lib_fft" description="This project demonstrates performing windowing and FFT on a time domain signal using the ARM CMSIS DSP_lib. A test 10kHz cosine is used for time domain data. The signal is first windowed by a hamming window function. This prevents artifacts in the FFT caused by discontinuity between the first and last  sample. The hamming window also reduces spectral leakage compared to lower  complexity windowing functions. The FFT is performed on the windowed signal, and the magnitude response is calculated and stored in a seperate buffer. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_dsp_lib_fft"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CORE"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/core/dsp_lib_fft/SimplicityStudio/BRD4103A_EFR32BG12P_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_dsp_lib_fft" description="This project demonstrates performing windowing and FFT on a time domain signal using the ARM CMSIS DSP_lib. A test 10kHz cosine is used for time domain data. The signal is first windowed by a hamming window function. This prevents artifacts in the FFT caused by discontinuity between the first and last  sample. The hamming window also reduces spectral leakage compared to lower  complexity windowing functions. The FFT is performed on the windowed signal, and the magnitude response is calculated and stored in a seperate buffer. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_dsp_lib_fft"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CORE"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/core/dsp_lib_fft/SimplicityStudio/BRD4151A_EFR32MG1P_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_dsp_lib_fft" description="This project demonstrates performing windowing and FFT on a time domain signal using the ARM CMSIS DSP_lib. A test 10kHz cosine is used for time domain data. The signal is first windowed by a hamming window function. This prevents artifacts in the FFT caused by discontinuity between the first and last  sample. The hamming window also reduces spectral leakage compared to lower  complexity windowing functions. The FFT is performed on the windowed signal, and the magnitude response is calculated and stored in a seperate buffer. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_dsp_lib_fft"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CORE"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/core/dsp_lib_fft/SimplicityStudio/BRD4161A_EFR32MG12P_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_dsp_lib_fft" description="This project demonstrates performing windowing and FFT on a time domain signal using the ARM CMSIS DSP_lib. A test 10kHz cosine is used for time domain data. The signal is first windowed by a hamming window function. This prevents artifacts in the FFT caused by discontinuity between the first and last  sample. The hamming window also reduces spectral leakage compared to lower  complexity windowing functions. The FFT is performed on the windowed signal, and the magnitude response is calculated and stored in a seperate buffer. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_dsp_lib_fft"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CORE"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/core/dsp_lib_fft/SimplicityStudio/BRD4250A_EFR32FG1P_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_dsp_lib_fft" description="This project demonstrates performing windowing and FFT on a time domain signal using the ARM CMSIS DSP_lib. A test 10kHz cosine is used for time domain data. The signal is first windowed by a hamming window function. This prevents artifacts in the FFT caused by discontinuity between the first and last  sample. The hamming window also reduces spectral leakage compared to lower  complexity windowing functions. The FFT is performed on the windowed signal, and the magnitude response is calculated and stored in a seperate buffer. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_dsp_lib_fft"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CORE"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/core/dsp_lib_fft/SimplicityStudio/BRD4253A_EFR32FG12P_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_dsp_lib_fft" description="This project demonstrates performing windowing and FFT on a time domain signal using the ARM CMSIS DSP_lib. A test 10kHz cosine is used for time domain data. The signal is first windowed by a hamming window function. This prevents artifacts in the FFT caused by discontinuity between the first and last  sample. The hamming window also reduces spectral leakage compared to lower  complexity windowing functions. The FFT is performed on the windowed signal, and the magnitude response is calculated and stored in a seperate buffer. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_dsp_lib_fft"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CORE"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/core/dsp_lib_fft/SimplicityStudio/SLSTK3401A_EFM32PG1B_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_dsp_lib_fft" description="This project demonstrates performing windowing and FFT on a time domain signal using the ARM CMSIS DSP_lib. A test 10kHz cosine is used for time domain data. The signal is first windowed by a hamming window function. This prevents artifacts in the FFT caused by discontinuity between the first and last  sample. The hamming window also reduces spectral leakage compared to lower  complexity windowing functions. The FFT is performed on the windowed signal, and the magnitude response is calculated and stored in a seperate buffer. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_dsp_lib_fft"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CORE"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/core/dsp_lib_fft/SimplicityStudio/SLSTK3402A_EFM32PG12B_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_dsp_lib_fft" description="This project demonstrates performing windowing and FFT on a time domain signal using the ARM CMSIS DSP_lib. A test 10kHz cosine is used for time domain data. The signal is first windowed by a hamming window function. This prevents artifacts in the FFT caused by discontinuity between the first and last  sample. The hamming window also reduces spectral leakage compared to lower  complexity windowing functions. The FFT is performed on the windowed signal, and the magnitude response is calculated and stored in a seperate buffer. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_dsp_lib_fft"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CORE"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/core/dsp_lib_fft/SimplicityStudio/SLSTK3701A_EFM32GG11B_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_cryotimer_lfxo_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_cryotimer_lfxo_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/BRD4100A_EFR32BG1P_cryotimer_lfxo_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_cryotimer_lfxo_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_cryotimer_lfxo_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/BRD4103A_EFR32BG12P_cryotimer_lfxo_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_cryotimer_lfxo_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_cryotimer_lfxo_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/BRD4104A_EFR32BG13P_cryotimer_lfxo_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_cryotimer_lfxo_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_cryotimer_lfxo_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/BRD4151A_EFR32MG1P_cryotimer_lfxo_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_cryotimer_lfxo_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_cryotimer_lfxo_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/BRD4159A_EFR32MG13P_cryotimer_lfxo_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_cryotimer_lfxo_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_cryotimer_lfxo_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/BRD4161A_EFR32MG12P_cryotimer_lfxo_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_cryotimer_lfxo_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_cryotimer_lfxo_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/BRD4169B_EFR32MG14P_cryotimer_lfxo_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_cryotimer_lfxo_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_cryotimer_lfxo_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/BRD4250A_EFR32FG1P_cryotimer_lfxo_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_cryotimer_lfxo_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_cryotimer_lfxo_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/BRD4253A_EFR32FG12P_cryotimer_lfxo_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_cryotimer_lfxo_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_cryotimer_lfxo_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/BRD4256A_EFR32FG13P_cryotimer_lfxo_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_cryotimer_lfxo_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_cryotimer_lfxo_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/BRD4257A_EFR32FG14P_cryotimer_lfxo_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_cryotimer_lfxo_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_cryotimer_lfxo_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/SLSTK3301A_EFM32TG11B_cryotimer_lfxo_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_cryotimer_lfxo_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_cryotimer_lfxo_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/SLSTK3401A_EFM32PG1B_cryotimer_lfxo_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_cryotimer_lfxo_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_cryotimer_lfxo_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/SLSTK3402A_EFM32PG12B_cryotimer_lfxo_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_cryotimer_lfxo_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the LFXO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_cryotimer_lfxo_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/SLSTK3701A_EFM32GG11B_cryotimer_lfxo_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_cryotimer_lfxo_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_cryotimer_lfxo_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/BRD4100A_EFR32BG1P_cryotimer_lfxo_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_cryotimer_lfxo_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_cryotimer_lfxo_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/BRD4103A_EFR32BG12P_cryotimer_lfxo_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_cryotimer_lfxo_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_cryotimer_lfxo_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/BRD4104A_EFR32BG13P_cryotimer_lfxo_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_cryotimer_lfxo_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_cryotimer_lfxo_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/BRD4151A_EFR32MG1P_cryotimer_lfxo_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_cryotimer_lfxo_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_cryotimer_lfxo_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/BRD4159A_EFR32MG13P_cryotimer_lfxo_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_cryotimer_lfxo_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_cryotimer_lfxo_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/BRD4161A_EFR32MG12P_cryotimer_lfxo_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_cryotimer_lfxo_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_cryotimer_lfxo_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/BRD4169B_EFR32MG14P_cryotimer_lfxo_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_cryotimer_lfxo_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_cryotimer_lfxo_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/BRD4250A_EFR32FG1P_cryotimer_lfxo_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_cryotimer_lfxo_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_cryotimer_lfxo_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/BRD4253A_EFR32FG12P_cryotimer_lfxo_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_cryotimer_lfxo_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_cryotimer_lfxo_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/BRD4256A_EFR32FG13P_cryotimer_lfxo_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_cryotimer_lfxo_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_cryotimer_lfxo_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/BRD4257A_EFR32FG14P_cryotimer_lfxo_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_cryotimer_lfxo_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_cryotimer_lfxo_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/SLSTK3301A_EFM32TG11B_cryotimer_lfxo_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_cryotimer_lfxo_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_cryotimer_lfxo_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/SLSTK3401A_EFM32PG1B_cryotimer_lfxo_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_cryotimer_lfxo_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_cryotimer_lfxo_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/SLSTK3402A_EFM32PG12B_cryotimer_lfxo_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_cryotimer_lfxo_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the LFXO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_cryotimer_lfxo_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_lfxo_ret_em4exit/SimplicityStudio/SLSTK3701A_EFM32GG11B_cryotimer_lfxo_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_cryotimer_ulfrco_em123" description="This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_cryotimer_ulfrco_em123"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4100A_EFR32BG1P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_cryotimer_ulfrco_em123" description="This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_cryotimer_ulfrco_em123"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4103A_EFR32BG12P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_cryotimer_ulfrco_em123" description="This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_cryotimer_ulfrco_em123"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4104A_EFR32BG13P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_cryotimer_ulfrco_em123" description="This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_cryotimer_ulfrco_em123"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4151A_EFR32MG1P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_cryotimer_ulfrco_em123" description="This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_cryotimer_ulfrco_em123"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4159A_EFR32MG13P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_cryotimer_ulfrco_em123" description="This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_cryotimer_ulfrco_em123"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4161A_EFR32MG12P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_cryotimer_ulfrco_em123" description="This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_cryotimer_ulfrco_em123"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4169B_EFR32MG14P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_cryotimer_ulfrco_em123" description="This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_cryotimer_ulfrco_em123"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4250A_EFR32FG1P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_cryotimer_ulfrco_em123" description="This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_cryotimer_ulfrco_em123"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4253A_EFR32FG12P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_cryotimer_ulfrco_em123" description="This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_cryotimer_ulfrco_em123"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4256A_EFR32FG13P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_cryotimer_ulfrco_em123" description="This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_cryotimer_ulfrco_em123"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4257A_EFR32FG14P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_cryotimer_ulfrco_em123" description="This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_cryotimer_ulfrco_em123"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/SLSTK3301A_EFM32TG11B_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_cryotimer_ulfrco_em123" description="This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_cryotimer_ulfrco_em123"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/SLSTK3401A_EFM32PG1B_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_cryotimer_ulfrco_em123" description="This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_cryotimer_ulfrco_em123"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/SLSTK3402A_EFM32PG12B_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_cryotimer_ulfrco_em123" description="This project shows how to use the Cryotimer with the ULFRCO in EM3. The project idles in EM3 while waiting for the interrupt handler to toggle LED0. An interrupt occurs every 2048 ULFRCO clock cycles (about 2.05 seconds) by default. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_cryotimer_ulfrco_em123"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/SLSTK3701A_EFM32GG11B_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_cryotimer_ulfrco_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_cryotimer_ulfrco_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/BRD4100A_EFR32BG1P_cryotimer_ulfrco_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_cryotimer_ulfrco_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_cryotimer_ulfrco_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/BRD4103A_EFR32BG12P_cryotimer_ulfrco_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_cryotimer_ulfrco_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_cryotimer_ulfrco_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/BRD4104A_EFR32BG13P_cryotimer_ulfrco_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_cryotimer_ulfrco_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_cryotimer_ulfrco_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/BRD4151A_EFR32MG1P_cryotimer_ulfrco_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_cryotimer_ulfrco_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_cryotimer_ulfrco_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/BRD4159A_EFR32MG13P_cryotimer_ulfrco_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_cryotimer_ulfrco_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_cryotimer_ulfrco_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/BRD4161A_EFR32MG12P_cryotimer_ulfrco_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_cryotimer_ulfrco_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_cryotimer_ulfrco_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/BRD4169B_EFR32MG14P_cryotimer_ulfrco_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_cryotimer_ulfrco_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_cryotimer_ulfrco_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/BRD4250A_EFR32FG1P_cryotimer_ulfrco_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_cryotimer_ulfrco_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_cryotimer_ulfrco_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/BRD4253A_EFR32FG12P_cryotimer_ulfrco_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_cryotimer_ulfrco_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_cryotimer_ulfrco_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/BRD4256A_EFR32FG13P_cryotimer_ulfrco_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_cryotimer_ulfrco_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_cryotimer_ulfrco_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/BRD4257A_EFR32FG14P_cryotimer_ulfrco_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_cryotimer_ulfrco_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_cryotimer_ulfrco_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/SLSTK3301A_EFM32TG11B_cryotimer_ulfrco_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_cryotimer_ulfrco_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_cryotimer_ulfrco_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/SLSTK3401A_EFM32PG1B_cryotimer_ulfrco_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_cryotimer_ulfrco_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_cryotimer_ulfrco_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/SLSTK3402A_EFM32PG12B_cryotimer_ulfrco_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_cryotimer_ulfrco_em4_no_ret" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and no GPIO retention. This project does so by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_cryotimer_ulfrco_em4_no_ret"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/SLSTK3701A_EFM32GG11B_cryotimer_ulfrco_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_cryotimer_ulfrco_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_cryotimer_ulfrco_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/BRD4100A_EFR32BG1P_cryotimer_ulfrco_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_cryotimer_ulfrco_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_cryotimer_ulfrco_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/BRD4103A_EFR32BG12P_cryotimer_ulfrco_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_cryotimer_ulfrco_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_cryotimer_ulfrco_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/BRD4104A_EFR32BG13P_cryotimer_ulfrco_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_cryotimer_ulfrco_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_cryotimer_ulfrco_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/BRD4151A_EFR32MG1P_cryotimer_ulfrco_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_cryotimer_ulfrco_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_cryotimer_ulfrco_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/BRD4159A_EFR32MG13P_cryotimer_ulfrco_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_cryotimer_ulfrco_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_cryotimer_ulfrco_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/BRD4161A_EFR32MG12P_cryotimer_ulfrco_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_cryotimer_ulfrco_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_cryotimer_ulfrco_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/BRD4169B_EFR32MG14P_cryotimer_ulfrco_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_cryotimer_ulfrco_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_cryotimer_ulfrco_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/BRD4250A_EFR32FG1P_cryotimer_ulfrco_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_cryotimer_ulfrco_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_cryotimer_ulfrco_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/BRD4253A_EFR32FG12P_cryotimer_ulfrco_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_cryotimer_ulfrco_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_cryotimer_ulfrco_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/BRD4256A_EFR32FG13P_cryotimer_ulfrco_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_cryotimer_ulfrco_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_cryotimer_ulfrco_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/BRD4257A_EFR32FG14P_cryotimer_ulfrco_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_cryotimer_ulfrco_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_cryotimer_ulfrco_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/SLSTK3301A_EFM32TG11B_cryotimer_ulfrco_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_cryotimer_ulfrco_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_cryotimer_ulfrco_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/SLSTK3401A_EFM32PG1B_cryotimer_ulfrco_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_cryotimer_ulfrco_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_cryotimer_ulfrco_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/SLSTK3402A_EFM32PG12B_cryotimer_ulfrco_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_cryotimer_ulfrco_ret_em4exit" description="This project shows how to use the Cryotimer in EM4 with the ULFRCO and GPIO retention where the retention is enabled upon entering EM4 and disabled upon  exiting EM4. This project shows the program execution by using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_cryotimer_ulfrco_ret_em4exit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_ulfrco_ret_em4exit/SimplicityStudio/SLSTK3701A_EFM32GG11B_cryotimer_ulfrco_ret_em4exit.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_cryotimer_wakeup_msc_erase" description="This project shows how to use the Cryotimer with the ULFRCO to wake up from EM4. This project also shows how to write/erase the USERDATA page. Results of this project are shown using LEDs. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_cryotimer_wakeup_msc_erase"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CRYOTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/cryotimer/cryotimer_wakeup_msc_erase/SimplicityStudio/SLSTK3402A_EFM32PG12B_cryotimer_wakeup_msc_erase.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_voltage_scaling" description="This project demonstrates the Voltage Scaling capabilities of the EMU.  When PB0 is pressed, the handler switches between VSCALE0 and VSCALE2.  Using the energy profiler, you can then observe the differences is current draw between these two voltage scaling values. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_voltage_scaling"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="EMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/emu/voltage_scaling/SimplicityStudio/BRD4103A_EFR32BG12P_voltage_scaling.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_voltage_scaling" description="This project demonstrates the Voltage Scaling capabilities of the EMU.  When PB0 is pressed, the handler switches between VSCALE0 and VSCALE2.  Using the energy profiler, you can then observe the differences is current draw between these two voltage scaling values. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_voltage_scaling"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="EMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/emu/voltage_scaling/SimplicityStudio/BRD4104A_EFR32BG13P_voltage_scaling.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_voltage_scaling" description="This project demonstrates the Voltage Scaling capabilities of the EMU.  When PB0 is pressed, the handler switches between VSCALE0 and VSCALE2.  Using the energy profiler, you can then observe the differences is current draw between these two voltage scaling values. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_voltage_scaling"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="EMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/emu/voltage_scaling/SimplicityStudio/BRD4159A_EFR32MG13P_voltage_scaling.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_voltage_scaling" description="This project demonstrates the Voltage Scaling capabilities of the EMU.  When PB0 is pressed, the handler switches between VSCALE0 and VSCALE2.  Using the energy profiler, you can then observe the differences is current draw between these two voltage scaling values. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_voltage_scaling"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="EMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/emu/voltage_scaling/SimplicityStudio/BRD4161A_EFR32MG12P_voltage_scaling.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_voltage_scaling" description="This project demonstrates the Voltage Scaling capabilities of the EMU.  When PB0 is pressed, the handler switches between VSCALE0 and VSCALE2.  Using the energy profiler, you can then observe the differences is current draw between these two voltage scaling values. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_voltage_scaling"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="EMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/emu/voltage_scaling/SimplicityStudio/BRD4169A_EFR32MG14P_voltage_scaling.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_voltage_scaling" description="This project demonstrates the Voltage Scaling capabilities of the EMU.  When PB0 is pressed, the handler switches between VSCALE0 and VSCALE2.  Using the energy profiler, you can then observe the differences is current draw between these two voltage scaling values. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_voltage_scaling"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="EMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/emu/voltage_scaling/SimplicityStudio/BRD4253A_EFR32FG12P_voltage_scaling.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_voltage_scaling" description="This project demonstrates the Voltage Scaling capabilities of the EMU.  When PB0 is pressed, the handler switches between VSCALE0 and VSCALE2.  Using the energy profiler, you can then observe the differences is current draw between these two voltage scaling values. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_voltage_scaling"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="EMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/emu/voltage_scaling/SimplicityStudio/BRD4256A_EFR32FG13P_voltage_scaling.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_voltage_scaling" description="This project demonstrates the Voltage Scaling capabilities of the EMU.  When PB0 is pressed, the handler switches between VSCALE0 and VSCALE2.  Using the energy profiler, you can then observe the differences is current draw between these two voltage scaling values. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_voltage_scaling"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="EMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/emu/voltage_scaling/SimplicityStudio/BRD4257A_EFR32FG14P_voltage_scaling.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_voltage_scaling" description="This project demonstrates the Voltage Scaling capabilities of the EMU.  When PB0 is pressed, the handler switches between VSCALE0 and VSCALE2.  Using the energy profiler, you can then observe the differences is current draw between these two voltage scaling values. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_voltage_scaling"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="EMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/emu/voltage_scaling/SimplicityStudio/SLSTK3301A_EFM32TG11B_voltage_scaling.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_voltage_scaling" description="This project demonstrates the Voltage Scaling capabilities of the EMU.  When PB0 is pressed, the handler switches between VSCALE0 and VSCALE2.  Using the energy profiler, you can then observe the differences is current draw between these two voltage scaling values. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_voltage_scaling"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="EMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/emu/voltage_scaling/SimplicityStudio/SLSTK3402A_EFM32PG12B_voltage_scaling.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_voltage_scaling" description="This project demonstrates the Voltage Scaling capabilities of the EMU.  When PB0 is pressed, the handler switches between VSCALE0 and VSCALE2.  Using the energy profiler, you can then observe the differences is current draw between these two voltage scaling values. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_voltage_scaling"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="EMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/emu/voltage_scaling/SimplicityStudio/SLSTK3701A_EFM32GG11B_voltage_scaling.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_gpcrc_dma" description="This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_gpcrc_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_dma/SimplicityStudio/BRD4100A_EFR32BG1P_gpcrc_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_gpcrc_dma" description="This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_gpcrc_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_dma/SimplicityStudio/BRD4103A_EFR32BG12P_gpcrc_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_gpcrc_dma" description="This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_gpcrc_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_dma/SimplicityStudio/BRD4104A_EFR32BG13P_gpcrc_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_gpcrc_dma" description="This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_gpcrc_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_dma/SimplicityStudio/BRD4151A_EFR32MG1P_gpcrc_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_gpcrc_dma" description="This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_gpcrc_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_dma/SimplicityStudio/BRD4159A_EFR32MG13P_gpcrc_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_gpcrc_dma" description="This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_gpcrc_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_dma/SimplicityStudio/BRD4161A_EFR32MG12P_gpcrc_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_gpcrc_dma" description="This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_gpcrc_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_dma/SimplicityStudio/BRD4169A_EFR32MG14P_gpcrc_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_gpcrc_dma" description="This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_gpcrc_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_dma/SimplicityStudio/BRD4250A_EFR32FG1P_gpcrc_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_gpcrc_dma" description="This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_gpcrc_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_dma/SimplicityStudio/BRD4253A_EFR32FG12P_gpcrc_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_gpcrc_dma" description="This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_gpcrc_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_dma/SimplicityStudio/BRD4256A_EFR32FG13P_gpcrc_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_gpcrc_dma" description="This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_gpcrc_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_dma/SimplicityStudio/BRD4257A_EFR32FG14P_gpcrc_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_gpcrc_dma" description="This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_gpcrc_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_gpcrc_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_gpcrc_dma" description="This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_gpcrc_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_dma/SimplicityStudio/SLSTK3401A_EFM32PG1B_gpcrc_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_gpcrc_dma" description="This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_gpcrc_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_dma/SimplicityStudio/SLSTK3402A_EFM32PG12B_gpcrc_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_gpcrc_dma" description="This project demonstrates the GPCRC used to check 32-bit data using the  IEEE 802.3 polynomial standard in EM1.  Data is fed into and read out of the GPCRC via the LDMA. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_gpcrc_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_dma/SimplicityStudio/SLSTK3701A_EFM32GG11B_gpcrc_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_gpcrc_software" description="This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_gpcrc_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_software/SimplicityStudio/BRD4100A_EFR32BG1P_gpcrc_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_gpcrc_software" description="This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_gpcrc_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_software/SimplicityStudio/BRD4103A_EFR32BG12P_gpcrc_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_gpcrc_software" description="This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_gpcrc_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_software/SimplicityStudio/BRD4104A_EFR32BG13P_gpcrc_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_gpcrc_software" description="This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_gpcrc_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_software/SimplicityStudio/BRD4151A_EFR32MG1P_gpcrc_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_gpcrc_software" description="This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_gpcrc_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_software/SimplicityStudio/BRD4159A_EFR32MG13P_gpcrc_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_gpcrc_software" description="This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_gpcrc_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_software/SimplicityStudio/BRD4161A_EFR32MG12P_gpcrc_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_gpcrc_software" description="This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_gpcrc_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_software/SimplicityStudio/BRD4169A_EFR32MG14P_gpcrc_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_gpcrc_software" description="This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_gpcrc_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_software/SimplicityStudio/BRD4250A_EFR32FG1P_gpcrc_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_gpcrc_software" description="This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_gpcrc_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_software/SimplicityStudio/BRD4253A_EFR32FG12P_gpcrc_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_gpcrc_software" description="This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_gpcrc_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_software/SimplicityStudio/BRD4256A_EFR32FG13P_gpcrc_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_gpcrc_software" description="This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_gpcrc_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_software/SimplicityStudio/BRD4257A_EFR32FG14P_gpcrc_software.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_gpcrc_software" description="This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_gpcrc_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_software/SimplicityStudio/SLSTK3301A_EFM32TG11B_gpcrc_software.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_gpcrc_software" description="This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_gpcrc_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_software/SimplicityStudio/SLSTK3401A_EFM32PG1B_gpcrc_software.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_gpcrc_software" description="This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_gpcrc_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_software/SimplicityStudio/SLSTK3402A_EFM32PG12B_gpcrc_software.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_gpcrc_software" description="This project demonstrates the GPCRC used to check an array of 32-bit data using the IEEE 802.3 polynomial standard. The GPCRC conversions are initiated by software. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_gpcrc_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPCRC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpcrc/gpcrc_software/SimplicityStudio/SLSTK3701A_EFM32GG11B_gpcrc_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapped to bit 2 in the wake up register. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/EM4_WakeUp/SimplicityStudio/BRD4100A_EFR32BG1P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapped to bit 2 in the wake up register. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/EM4_WakeUp/SimplicityStudio/BRD4103A_EFR32BG12P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapped to bit 2 in the wake up register. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/EM4_WakeUp/SimplicityStudio/BRD4104A_EFR32BG13P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapped to bit 2 in the wake up register. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/EM4_WakeUp/SimplicityStudio/BRD4151A_EFR32MG1P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapped to bit 2 in the wake up register. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/EM4_WakeUp/SimplicityStudio/BRD4159A_EFR32MG13P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapped to bit 2 in the wake up register. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/EM4_WakeUp/SimplicityStudio/BRD4161A_EFR32MG12P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapped to bit 2 in the wake up register. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/EM4_WakeUp/SimplicityStudio/BRD4169B_EFR32MG14P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapped to bit 2 in the wake up register. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/EM4_WakeUp/SimplicityStudio/BRD4250A_EFR32FG1P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapped to bit 2 in the wake up register. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/EM4_WakeUp/SimplicityStudio/BRD4253A_EFR32FG12P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapped to bit 2 in the wake up register. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/EM4_WakeUp/SimplicityStudio/BRD4256A_EFR32FG13P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapped to bit 2 in the wake up register. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/EM4_WakeUp/SimplicityStudio/BRD4257A_EFR32FG14P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapped to bit 2 in the wake up register. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/EM4_WakeUp/SimplicityStudio/SLSTK3301A_EFM32TG11_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapped to bit 2 in the wake up register. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/EM4_WakeUp/SimplicityStudio/SLSTK3401A_EFM32PG1B_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapped to bit 2 in the wake up register. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/EM4_WakeUp/SimplicityStudio/SLSTK3402A_EFM32PG12B_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_EM4_WakeUp" description="This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely. Note for GG11 and TG11, PB1 is mapped to bit 2 in the wake up register. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_EM4_WakeUp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/EM4_WakeUp/SimplicityStudio/SLSTK3701A_EFM32GG11_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_gpio_periph_bg1p" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_gpio_periph_bg1p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_periph/SimplicityStudio/BRD4100A_EFR32BG1P_gpio_periph_bg1p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_gpio_periph_bg12p" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_gpio_periph_bg12p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_periph/SimplicityStudio/BRD4103A_EFR32BG12P_gpio_periph_bg12p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_gpio_periph_bg13p" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_gpio_periph_bg13p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_periph/SimplicityStudio/BRD4104A_EFR32BG13P_gpio_periph_bg13p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_gpio_periph_mg1p" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_gpio_periph_mg1p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_periph/SimplicityStudio/BRD4151A_EFR32MG1P_gpio_periph_mg1p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_gpio_periph_mg13p" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_gpio_periph_mg13p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_periph/SimplicityStudio/BRD4159A_EFR32MG13P_gpio_periph_mg13p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_gpio_periph_mg12p" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_gpio_periph_mg12p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_periph/SimplicityStudio/BRD4161A_EFR32MG12P_gpio_periph_mg12p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_gpio_periph_mg14p" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_gpio_periph_mg14p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_periph/SimplicityStudio/BRD4169B_EFR32MG14P_gpio_periph_mg14p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_gpio_periph_fg1p" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_gpio_periph_fg1p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_periph/SimplicityStudio/BRD4250A_EFR32FG1P_gpio_periph_fg1p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_gpio_periph_fg12p" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_gpio_periph_fg12p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_periph/SimplicityStudio/BRD4253A_EFR32FG12P_gpio_periph_fg12p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_gpio_periph_fg13p" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_gpio_periph_fg13p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_periph/SimplicityStudio/BRD4256A_EFR32FG13P_gpio_periph_fg13p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_gpio_periph_fg14p" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_gpio_periph_fg14p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_periph/SimplicityStudio/BRD4257A_EFR32FG14P_gpio_periph_fg14p.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_gpio_periph_tg11b" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_gpio_periph_tg11b"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_periph/SimplicityStudio/SLSTK3301A_EFM32TG11B_gpio_periph_tg11b.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_gpio_periph_pg1b" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_gpio_periph_pg1b"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_periph/SimplicityStudio/SLSTK3401A_EFM32PG1B_gpio_periph_pg1b.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_gpio_periph_pg12b" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_gpio_periph_pg12b"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_periph/SimplicityStudio/SLSTK3402A_EFM32PG12B_gpio_periph_pg12b.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_gpio_periph_gg11b" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_gpio_periph_gg11b"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_periph/SimplicityStudio/SLSTK3701A_EFM32GG11B_gpio_periph_gg11b.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_gpio_prs_bg1p" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_gpio_prs_bg1p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_prs/SimplicityStudio/BRD4100A_EFR32BG1P_gpio_prs_bg1p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_gpio_prs_bg12p" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_gpio_prs_bg12p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_prs/SimplicityStudio/BRD4103A_EFR32BG12P_gpio_prs_bg12p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_gpio_prs_bg13p" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_gpio_prs_bg13p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_prs/SimplicityStudio/BRD4104A_EFR32BG13P_gpio_prs_bg13p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_gpio_prs_mg1p" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_gpio_prs_mg1p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_prs/SimplicityStudio/BRD4151A_EFR32MG1P_gpio_prs_mg1p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_gpio_prs_mg13p" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_gpio_prs_mg13p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_prs/SimplicityStudio/BRD4159A_EFR32MG13P_gpio_prs_mg13p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_gpio_prs_mg12p" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_gpio_prs_mg12p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_prs/SimplicityStudio/BRD4161A_EFR32MG12P_gpio_prs_mg12p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_gpio_prs_mg14p" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_gpio_prs_mg14p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_prs/SimplicityStudio/BRD4169B_EFR32MG14P_gpio_prs_mg14p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_gpio_prs_fg1p" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_gpio_prs_fg1p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_prs/SimplicityStudio/BRD4250A_EFR32FG1P_gpio_prs_fg1p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_gpio_prs_fg12p" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_gpio_prs_fg12p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_prs/SimplicityStudio/BRD4253A_EFR32FG12P_gpio_prs_fg12p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_gpio_prs_fg13p" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_gpio_prs_fg13p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_prs/SimplicityStudio/BRD4256A_EFR32FG13P_gpio_prs_fg13p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_gpio_prs_fg14p" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_gpio_prs_fg14p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_prs/SimplicityStudio/BRD4257A_EFR32FG14P_gpio_prs_fg14p.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_gpio_prs_tg11b" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_gpio_prs_tg11b"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_prs/SimplicityStudio/SLSTK3301A_EFM32TG11B_gpio_prs_tg11b.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_gpio_prs_pg1b" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_gpio_prs_pg1b"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_prs/SimplicityStudio/SLSTK3401A_EFM32PG1B_gpio_prs_pg1b.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_gpio_prs_pg12b" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_gpio_prs_pg12b"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_prs/SimplicityStudio/SLSTK3402A_EFM32PG12B_gpio_prs_pg12b.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_gpio_prs_gg11b" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_gpio_prs_gg11b"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_prs/SimplicityStudio/SLSTK3701A_EFM32GG11B_gpio_prs_gg11b.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_gpio_slew_rate_bg1p" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_gpio_slew_rate_bg1p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_slew_rate/SimplicityStudio/BRD4100A_EFR32BG1P_gpio_slew_rate_bg1p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_gpio_slew_rate_bg12p" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_gpio_slew_rate_bg12p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_slew_rate/SimplicityStudio/BRD4103A_EFR32BG12P_gpio_slew_rate_bg12p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_gpio_slew_rate_bg13p" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_gpio_slew_rate_bg13p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_slew_rate/SimplicityStudio/BRD4104A_EFR32BG13P_gpio_slew_rate_bg13p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_gpio_slew_rate_mg1p" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_gpio_slew_rate_mg1p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_slew_rate/SimplicityStudio/BRD4151A_EFR32MG1P_gpio_slew_rate_mg1p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_gpio_slew_rate_mg13p" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_gpio_slew_rate_mg13p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_slew_rate/SimplicityStudio/BRD4159A_EFR32MG13P_gpio_slew_rate_mg13p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_gpio_slew_rate_mg12p" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_gpio_slew_rate_mg12p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_slew_rate/SimplicityStudio/BRD4161A_EFR32MG12P_gpio_slew_rate_mg12p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_gpio_slew_rate_mg14p" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_gpio_slew_rate_mg14p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_slew_rate/SimplicityStudio/BRD4169B_EFR32MG14P_gpio_slew_rate_mg14p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_gpio_slew_rate_fg1p" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_gpio_slew_rate_fg1p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_slew_rate/SimplicityStudio/BRD4250A_EFR32FG1P_gpio_slew_rate_fg1p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_gpio_slew_rate_fg12p" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_gpio_slew_rate_fg12p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_slew_rate/SimplicityStudio/BRD4253A_EFR32FG12P_gpio_slew_rate_fg12p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_gpio_slew_rate_fg13p" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_gpio_slew_rate_fg13p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_slew_rate/SimplicityStudio/BRD4256A_EFR32FG13P_gpio_slew_rate_fg13p.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_gpio_slew_rate_fg14p" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_gpio_slew_rate_fg14p"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_slew_rate/SimplicityStudio/BRD4257A_EFR32FG14P_gpio_slew_rate_fg14p.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_gpio_slew_rate_tg11b" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_gpio_slew_rate_tg11b"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_slew_rate/SimplicityStudio/SLSTK3301A_EFM32TG11B_gpio_slew_rate_tg11b.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_gpio_slew_rate_pg1b" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_gpio_slew_rate_pg1b"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_slew_rate/SimplicityStudio/SLSTK3401A_EFM32PG1B_gpio_slew_rate_pg1b.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_gpio_slew_rate_pg12b" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_gpio_slew_rate_pg12b"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_slew_rate/SimplicityStudio/SLSTK3402A_EFM32PG12B_gpio_slew_rate_pg12b.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_gpio_slew_rate_gg11b" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing PB0. The drive strength setting is changed by pressing PB1. The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_gpio_slew_rate_gg11b"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/gpio_slew_rate/SimplicityStudio/SLSTK3701A_EFM32GG11B_gpio_slew_rate_gg11b.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_interrupt/SimplicityStudio/BRD4169B_EFR32MG14P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_switch_led_interrupt" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_switch_led_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_polled/SimplicityStudio/BRD4100A_EFR32BG1P_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_polled/SimplicityStudio/BRD4103A_EFR32BG12P_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_polled/SimplicityStudio/BRD4104A_EFR32BG13_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_polled/SimplicityStudio/BRD4151A_EFR32MG1P_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_polled/SimplicityStudio/BRD4159A_EFR32MG13_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_polled/SimplicityStudio/BRD4161A_EFR32MG12P_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_polled/SimplicityStudio/BRD4169B_EFR32MG14_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_polled/SimplicityStudio/BRD4250A_EFR32FG1P_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_polled/SimplicityStudio/BRD4253A_EFR32FG12P_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_polled/SimplicityStudio/BRD4256A_EFR32FG13_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_polled/SimplicityStudio/BRD4257A_EFR32FG14_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_polled/SimplicityStudio/SLSTK3301A_EFM32TG11_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_polled/SimplicityStudio/SLSTK3401A_EFM32PG1B_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_switch_led_polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_switch_led_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/gpio/switch_led_polled/SimplicityStudio/SLSTK3701A_EFM32GG11_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/i2c/i2c/SimplicityStudio/BRD4100A_EFR32BG1P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/i2c/i2c/SimplicityStudio/BRD4103A_EFR32BG12P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/i2c/i2c/SimplicityStudio/BRD4104A_EFR32BG13P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/i2c/i2c/SimplicityStudio/BRD4151A_EFR32MG1P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/i2c/i2c/SimplicityStudio/BRD4159A_EFR32MG13P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/i2c/i2c/SimplicityStudio/BRD4161A_EFR32MG12P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/i2c/i2c/SimplicityStudio/BRD4169B_EFR32MG14P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/i2c/i2c/SimplicityStudio/BRD4250A_EFR32FG1P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/i2c/i2c/SimplicityStudio/BRD4253A_EFR32FG12P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/i2c/i2c/SimplicityStudio/BRD4256A_EFR32FG13P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/i2c/i2c/SimplicityStudio/BRD4257A_EFR32FG14P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/i2c/i2c/SimplicityStudio/SLSTK3301A_EFM32TG11_i2c.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/i2c/i2c/SimplicityStudio/SLSTK3401A_EFM32PG1B_i2c.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/i2c/i2c/SimplicityStudio/SLSTK3402A_EFM32PG12B_i2c.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_i2c"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/i2c/i2c/SimplicityStudio/SLSTK3701A_EFM32GG11_i2c.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_i2s" description="This project demonstrates how to get raw microphone data using i2s and transferring it over USART via LDMA transfers. Only the left microphone   channel is used while the right microphone channel is just read into a dummy variable. This data can then be used for different purposes such as spectral analysis.  See the GG11 spectral analysis example for an example showing what the data can be used for. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_i2s"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2S"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/i2s/i2s/SimplicityStudio/SLSTK3701A_EFM32GG11_i2s.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_idac_output_constant" description="This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example used about 1.64 milliamps on average. Note: this energy measurement was done using Simplicity Studio's built-in energy profiler for the GG11 board with a Debug build configuration and no optimization flags (gcc -O0). ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_idac_output_constant"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_output_constant/SimplicityStudio/BRD4100A_EFR32BG1P_idac_output_constant.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_idac_output_constant" description="This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example used about 1.64 milliamps on average. Note: this energy measurement was done using Simplicity Studio's built-in energy profiler for the GG11 board with a Debug build configuration and no optimization flags (gcc -O0). ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_idac_output_constant"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_output_constant/SimplicityStudio/BRD4103A_EFR32BG12P_idac_output_constant.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_idac_output_constant" description="This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example used about 1.64 milliamps on average. Note: this energy measurement was done using Simplicity Studio's built-in energy profiler for the GG11 board with a Debug build configuration and no optimization flags (gcc -O0). ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_idac_output_constant"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_output_constant/SimplicityStudio/BRD4104A_EFR32BG13P_idac_output_constant.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_idac_output_constant" description="This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example used about 1.64 milliamps on average. Note: this energy measurement was done using Simplicity Studio's built-in energy profiler for the GG11 board with a Debug build configuration and no optimization flags (gcc -O0). ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_idac_output_constant"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_output_constant/SimplicityStudio/BRD4151A_EFR32MG1P_idac_output_constant.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_idac_output_constant" description="This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example used about 1.64 milliamps on average. Note: this energy measurement was done using Simplicity Studio's built-in energy profiler for the GG11 board with a Debug build configuration and no optimization flags (gcc -O0). ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_idac_output_constant"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_output_constant/SimplicityStudio/BRD4159A_EFR32MG13P_idac_output_constant.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_idac_output_constant" description="This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example used about 1.64 milliamps on average. Note: this energy measurement was done using Simplicity Studio's built-in energy profiler for the GG11 board with a Debug build configuration and no optimization flags (gcc -O0). ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_idac_output_constant"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_output_constant/SimplicityStudio/BRD4161A_EFR32MG12P_idac_output_constant.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_idac_output_constant" description="This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example used about 1.64 milliamps on average. Note: this energy measurement was done using Simplicity Studio's built-in energy profiler for the GG11 board with a Debug build configuration and no optimization flags (gcc -O0). ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_idac_output_constant"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_output_constant/SimplicityStudio/BRD4169B_EFR32MG14P_idac_output_constant.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_idac_output_constant" description="This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example used about 1.64 milliamps on average. Note: this energy measurement was done using Simplicity Studio's built-in energy profiler for the GG11 board with a Debug build configuration and no optimization flags (gcc -O0). ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_idac_output_constant"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_output_constant/SimplicityStudio/BRD4250A_EFR32FG1P_idac_output_constant.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_idac_output_constant" description="This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example used about 1.64 milliamps on average. Note: this energy measurement was done using Simplicity Studio's built-in energy profiler for the GG11 board with a Debug build configuration and no optimization flags (gcc -O0). ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_idac_output_constant"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_output_constant/SimplicityStudio/BRD4253A_EFR32FG12P_idac_output_constant.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_idac_output_constant" description="This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example used about 1.64 milliamps on average. Note: this energy measurement was done using Simplicity Studio's built-in energy profiler for the GG11 board with a Debug build configuration and no optimization flags (gcc -O0). ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_idac_output_constant"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_output_constant/SimplicityStudio/BRD4256A_EFR32FG13P_idac_output_constant.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_idac_output_constant" description="This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example used about 1.64 milliamps on average. Note: this energy measurement was done using Simplicity Studio's built-in energy profiler for the GG11 board with a Debug build configuration and no optimization flags (gcc -O0). ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_idac_output_constant"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_output_constant/SimplicityStudio/BRD4257A_EFR32FG14P_idac_output_constant.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_idac_output_constant" description="This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example used about 1.64 milliamps on average. Note: this energy measurement was done using Simplicity Studio's built-in energy profiler for the GG11 board with a Debug build configuration and no optimization flags (gcc -O0). ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_idac_output_constant"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_output_constant/SimplicityStudio/SLSTK3401A_EFM32PG1B_idac_output_constant.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_idac_output_constant" description="This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example used about 1.64 milliamps on average. Note: this energy measurement was done using Simplicity Studio's built-in energy profiler for the GG11 board with a Debug build configuration and no optimization flags (gcc -O0). ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_idac_output_constant"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_output_constant/SimplicityStudio/SLSTK3402A_EFM32PG12B_idac_output_constant.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_idac_output_constant" description="This example uses the IDAC to output 2 microamps to the pin specified in the pin mappings section below. The project operates in EM3. This example used about 21.2 microamps when in EM3. After commenting out the line of code that puts the board in EM3, this example used about 1.64 milliamps on average. Note: this energy measurement was done using Simplicity Studio's built-in energy profiler for the GG11 board with a Debug build configuration and no optimization flags (gcc -O0). ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_idac_output_constant"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_output_constant/SimplicityStudio/SLSTK3701A_EFM32GG11B_idac_output_constant.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_idac_timer_dma_waveform" description="This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_idac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_dma_waveform/SimplicityStudio/BRD4100A_EFR32BG1P_idac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_idac_timer_dma_waveform" description="This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_idac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_dma_waveform/SimplicityStudio/BRD4103A_EFR32BG12P_idac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_idac_timer_dma_waveform" description="This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_idac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_dma_waveform/SimplicityStudio/BRD4104A_EFR32BG13P_idac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_idac_timer_dma_waveform" description="This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_idac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_dma_waveform/SimplicityStudio/BRD4151A_EFR32MG1P_idac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_idac_timer_dma_waveform" description="This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_idac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_dma_waveform/SimplicityStudio/BRD4159A_EFR32MG13P_idac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_idac_timer_dma_waveform" description="This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_idac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_dma_waveform/SimplicityStudio/BRD4161A_EFR32MG12P_idac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_idac_timer_dma_waveform" description="This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_idac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_dma_waveform/SimplicityStudio/BRD4169B_EFR32MG14P_idac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_idac_timer_dma_waveform" description="This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_idac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_dma_waveform/SimplicityStudio/BRD4250A_EFR32FG1P_idac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_idac_timer_dma_waveform" description="This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_idac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_dma_waveform/SimplicityStudio/BRD4253A_EFR32FG12P_idac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_idac_timer_dma_waveform" description="This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_idac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_dma_waveform/SimplicityStudio/BRD4256A_EFR32FG13P_idac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_idac_timer_dma_waveform" description="This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_idac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_dma_waveform/SimplicityStudio/BRD4257A_EFR32FG14P_idac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_idac_timer_dma_waveform" description="This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_idac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_dma_waveform/SimplicityStudio/SLSTK3401A_EFM32PG1B_idac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_idac_timer_dma_waveform" description="This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_idac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_dma_waveform/SimplicityStudio/SLSTK3402A_EFM32PG12B_idac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_idac_timer_dma_waveform" description="This example shows how to use a timer and the DMA to output a sinewave using the IDAC. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_idac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_dma_waveform/SimplicityStudio/SLSTK3701A_EFM32GG11B_idac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_idac_timer_prs" description="This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in EM1 even though the IDAC works in EM3 because the timers are only capable of operating up to EM1. An example use case of this project is PRS triggered charge injection to control current output. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_idac_timer_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_prs/SimplicityStudio/BRD4100A_EFR32BG1P_idac_timer_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_idac_timer_prs" description="This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in EM1 even though the IDAC works in EM3 because the timers are only capable of operating up to EM1. An example use case of this project is PRS triggered charge injection to control current output. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_idac_timer_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_prs/SimplicityStudio/BRD4103A_EFR32BG12P_idac_timer_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_idac_timer_prs" description="This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in EM1 even though the IDAC works in EM3 because the timers are only capable of operating up to EM1. An example use case of this project is PRS triggered charge injection to control current output. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_idac_timer_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_prs/SimplicityStudio/BRD4104A_EFR32BG13P_idac_timer_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_idac_timer_prs" description="This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in EM1 even though the IDAC works in EM3 because the timers are only capable of operating up to EM1. An example use case of this project is PRS triggered charge injection to control current output. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_idac_timer_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_prs/SimplicityStudio/BRD4151A_EFR32MG1P_idac_timer_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_idac_timer_prs" description="This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in EM1 even though the IDAC works in EM3 because the timers are only capable of operating up to EM1. An example use case of this project is PRS triggered charge injection to control current output. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_idac_timer_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_prs/SimplicityStudio/BRD4159A_EFR32MG13P_idac_timer_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_idac_timer_prs" description="This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in EM1 even though the IDAC works in EM3 because the timers are only capable of operating up to EM1. An example use case of this project is PRS triggered charge injection to control current output. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_idac_timer_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_prs/SimplicityStudio/BRD4161A_EFR32MG12P_idac_timer_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_idac_timer_prs" description="This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in EM1 even though the IDAC works in EM3 because the timers are only capable of operating up to EM1. An example use case of this project is PRS triggered charge injection to control current output. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_idac_timer_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_prs/SimplicityStudio/BRD4169B_EFR32MG14P_idac_timer_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_idac_timer_prs" description="This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in EM1 even though the IDAC works in EM3 because the timers are only capable of operating up to EM1. An example use case of this project is PRS triggered charge injection to control current output. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_idac_timer_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_prs/SimplicityStudio/BRD4250A_EFR32FG1P_idac_timer_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_idac_timer_prs" description="This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in EM1 even though the IDAC works in EM3 because the timers are only capable of operating up to EM1. An example use case of this project is PRS triggered charge injection to control current output. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_idac_timer_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_prs/SimplicityStudio/BRD4253A_EFR32FG12P_idac_timer_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_idac_timer_prs" description="This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in EM1 even though the IDAC works in EM3 because the timers are only capable of operating up to EM1. An example use case of this project is PRS triggered charge injection to control current output. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_idac_timer_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_prs/SimplicityStudio/BRD4256A_EFR32FG13P_idac_timer_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_idac_timer_prs" description="This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in EM1 even though the IDAC works in EM3 because the timers are only capable of operating up to EM1. An example use case of this project is PRS triggered charge injection to control current output. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_idac_timer_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_prs/SimplicityStudio/BRD4257A_EFR32FG14P_idac_timer_prs.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_idac_timer_prs" description="This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in EM1 even though the IDAC works in EM3 because the timers are only capable of operating up to EM1. An example use case of this project is PRS triggered charge injection to control current output. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_idac_timer_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_prs/SimplicityStudio/SLSTK3401A_EFM32PG1B_idac_timer_prs.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_idac_timer_prs" description="This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in EM1 even though the IDAC works in EM3 because the timers are only capable of operating up to EM1. An example use case of this project is PRS triggered charge injection to control current output. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_idac_timer_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_prs/SimplicityStudio/SLSTK3402A_EFM32PG12B_idac_timer_prs.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_idac_timer_prs" description="This example shows how to use a timer to control the IDAC through the PRS. The IDAC is configured to enable its output based on the signal it receives from PRS channel 0. The timer generates a square waveform signal that it sends to the PRS. This project operates in EM1 even though the IDAC works in EM3 because the timers are only capable of operating up to EM1. An example use case of this project is PRS triggered charge injection to control current output. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_idac_timer_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/idac/idac_timer_prs/SimplicityStudio/SLSTK3701A_EFM32GG11B_idac_timer_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_ldma_2d_copy" description="In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_2d_copy/SimplicityStudio/BRD4100A_EFR32BG1P_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_ldma_2d_copy" description="In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_2d_copy/SimplicityStudio/BRD4103A_EFR32BG12P_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_ldma_2d_copy" description="In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_2d_copy/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_ldma_2d_copy" description="In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_2d_copy/SimplicityStudio/BRD4151A_EFR32MG1P_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_ldma_2d_copy" description="In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_2d_copy/SimplicityStudio/BRD4159A_EFR32MG13P_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_ldma_2d_copy" description="In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_2d_copy/SimplicityStudio/BRD4161A_EFR32MG12P_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_ldma_2d_copy" description="In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_2d_copy/SimplicityStudio/BRD4169A_EFR32MG14P_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_ldma_2d_copy" description="In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_2d_copy/SimplicityStudio/BRD4250A_EFR32FG1P_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_ldma_2d_copy" description="In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_2d_copy/SimplicityStudio/BRD4253A_EFR32FG12P_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_ldma_2d_copy" description="In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_2d_copy/SimplicityStudio/BRD4256A_EFR32FG13P_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_ldma_2d_copy" description="In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_2d_copy/SimplicityStudio/BRD4257A_EFR32FG14P_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_ldma_2d_copy" description="In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_2d_copy/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_ldma_2d_copy" description="In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_2d_copy/SimplicityStudio/SLSTK3401A_EFM32PG1B_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_ldma_2d_copy" description="In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_2d_copy/SimplicityStudio/SLSTK3402A_EFM32PG12B_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_ldma_2d_copy" description="In this example, the LDMA transfers a submatrix from one software  matrix to another.   The source buffer is numbered from 0 to  (BUFFER_2D_WIDTH * BUFFER_2D_HEIGHT - 1) in row major order.  Row major  order was chosen so that the debugger will show the matrix as expected. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_2d_copy/SimplicityStudio/SLSTK3701A_EFM32GG11B_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_ldma_interchannel_synchronization" description="In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/BRD4100A_EFR32BG1P_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_ldma_interchannel_synchronization" description="In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/BRD4103A_EFR32BG12P_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_ldma_interchannel_synchronization" description="In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_ldma_interchannel_synchronization" description="In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/BRD4151A_EFR32MG1P_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_ldma_interchannel_synchronization" description="In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/BRD4159A_EFR32MG13P_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_ldma_interchannel_synchronization" description="In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/BRD4161A_EFR32MG12P_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_ldma_interchannel_synchronization" description="In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/BRD4169A_EFR32MG14P_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_ldma_interchannel_synchronization" description="In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/BRD4250A_EFR32FG1P_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_ldma_interchannel_synchronization" description="In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/BRD4253A_EFR32FG12P_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_ldma_interchannel_synchronization" description="In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/BRD4256A_EFR32FG13P_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_ldma_interchannel_synchronization" description="In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/BRD4257A_EFR32FG14P_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_ldma_interchannel_synchronization" description="In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_ldma_interchannel_synchronization" description="In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/SLSTK3401A_EFM32PG1B_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_ldma_interchannel_synchronization" description="In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/SLSTK3402A_EFM32PG12B_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_ldma_interchannel_synchronization" description="In this example, the LDMA synchronizes across 2 Channels.  Each channel starts off on a different button press, and transfers  4-character strings from one software array to another. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_interchannel_synchronization/SimplicityStudio/SLSTK3701A_EFM32GG11B_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_ldma_linked_list" description="Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list/SimplicityStudio/BRD4100A_EFR32BG1P_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_ldma_linked_list" description="Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list/SimplicityStudio/BRD4103A_EFR32BG12P_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_ldma_linked_list" description="Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_ldma_linked_list" description="Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list/SimplicityStudio/BRD4151A_EFR32MG1P_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_ldma_linked_list" description="Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list/SimplicityStudio/BRD4159A_EFR32MG13P_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_ldma_linked_list" description="Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list/SimplicityStudio/BRD4161A_EFR32MG12P_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_ldma_linked_list" description="Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list/SimplicityStudio/BRD4169A_EFR32MG14P_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_ldma_linked_list" description="Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list/SimplicityStudio/BRD4250A_EFR32FG1P_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_ldma_linked_list" description="Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list/SimplicityStudio/BRD4253A_EFR32FG12P_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_ldma_linked_list" description="Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list/SimplicityStudio/BRD4256A_EFR32FG13P_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_ldma_linked_list" description="Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list/SimplicityStudio/BRD4257A_EFR32FG14P_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_ldma_linked_list" description="Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_ldma_linked_list" description="Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list/SimplicityStudio/SLSTK3401A_EFM32PG1B_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_ldma_linked_list" description="Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list/SimplicityStudio/SLSTK3402A_EFM32PG12B_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_ldma_linked_list" description="Software requests an LDMA transfer on a linked list of 4 descriptors,  which each move 32 halfwords of memory into a destination buffer.   There are interrupts triggered after the second and fourth descriptors. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list/SimplicityStudio/SLSTK3701A_EFM32GG11B_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_ldma_linked_list_looped" description="In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list_looped/SimplicityStudio/BRD4100A_EFR32BG1P_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_ldma_linked_list_looped" description="In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list_looped/SimplicityStudio/BRD4103A_EFR32BG12P_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_ldma_linked_list_looped" description="In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list_looped/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_ldma_linked_list_looped" description="In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list_looped/SimplicityStudio/BRD4151A_EFR32MG1P_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_ldma_linked_list_looped" description="In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list_looped/SimplicityStudio/BRD4159A_EFR32MG13P_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_ldma_linked_list_looped" description="In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list_looped/SimplicityStudio/BRD4161A_EFR32MG12P_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_ldma_linked_list_looped" description="In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list_looped/SimplicityStudio/BRD4169A_EFR32MG14P_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_ldma_linked_list_looped" description="In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list_looped/SimplicityStudio/BRD4250A_EFR32FG1P_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_ldma_linked_list_looped" description="In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list_looped/SimplicityStudio/BRD4253A_EFR32FG12P_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_ldma_linked_list_looped" description="In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list_looped/SimplicityStudio/BRD4256A_EFR32FG13P_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_ldma_linked_list_looped" description="In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list_looped/SimplicityStudio/BRD4257A_EFR32FG14P_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_ldma_linked_list_looped" description="In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list_looped/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_ldma_linked_list_looped" description="In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list_looped/SimplicityStudio/SLSTK3401A_EFM32PG1B_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_ldma_linked_list_looped" description="In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list_looped/SimplicityStudio/SLSTK3402A_EFM32PG12B_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_ldma_linked_list_looped" description="In this example, the LDMA transfers 4 character strings from one software array to another.  It switches between A and B four times, then transfers  C, like so: A, B, A, B, A, B, A, B, C ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_linked_list_looped/SimplicityStudio/SLSTK3701A_EFM32GG11B_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_ldma_ping_pong" description="Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the &quot;pingBuffer&quot; array, then to the &quot;pongBuffer&quot;, then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then requests the next transfer.   In this way, you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot;  transfered to pong, etc. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_ping_pong/SimplicityStudio/BRD4100A_EFR32BG1P_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_ldma_ping_pong" description="Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the &quot;pingBuffer&quot; array, then to the &quot;pongBuffer&quot;, then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then requests the next transfer.   In this way, you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot;  transfered to pong, etc. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_ping_pong/SimplicityStudio/BRD4103A_EFR32BG12P_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_ldma_ping_pong" description="Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the &quot;pingBuffer&quot; array, then to the &quot;pongBuffer&quot;, then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then requests the next transfer.   In this way, you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot;  transfered to pong, etc. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_ping_pong/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_ldma_ping_pong" description="Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the &quot;pingBuffer&quot; array, then to the &quot;pongBuffer&quot;, then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then requests the next transfer.   In this way, you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot;  transfered to pong, etc. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_ping_pong/SimplicityStudio/BRD4151A_EFR32MG1P_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_ldma_ping_pong" description="Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the &quot;pingBuffer&quot; array, then to the &quot;pongBuffer&quot;, then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then requests the next transfer.   In this way, you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot;  transfered to pong, etc. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_ping_pong/SimplicityStudio/BRD4159A_EFR32MG13P_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_ldma_ping_pong" description="Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the &quot;pingBuffer&quot; array, then to the &quot;pongBuffer&quot;, then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then requests the next transfer.   In this way, you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot;  transfered to pong, etc. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_ping_pong/SimplicityStudio/BRD4161A_EFR32MG12P_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_ldma_ping_pong" description="Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the &quot;pingBuffer&quot; array, then to the &quot;pongBuffer&quot;, then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then requests the next transfer.   In this way, you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot;  transfered to pong, etc. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_ping_pong/SimplicityStudio/BRD4169A_EFR32MG14P_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_ldma_ping_pong" description="Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the &quot;pingBuffer&quot; array, then to the &quot;pongBuffer&quot;, then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then requests the next transfer.   In this way, you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot;  transfered to pong, etc. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_ping_pong/SimplicityStudio/BRD4250A_EFR32FG1P_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_ldma_ping_pong" description="Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the &quot;pingBuffer&quot; array, then to the &quot;pongBuffer&quot;, then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then requests the next transfer.   In this way, you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot;  transfered to pong, etc. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_ping_pong/SimplicityStudio/BRD4253A_EFR32FG12P_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_ldma_ping_pong" description="Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the &quot;pingBuffer&quot; array, then to the &quot;pongBuffer&quot;, then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then requests the next transfer.   In this way, you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot;  transfered to pong, etc. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_ping_pong/SimplicityStudio/BRD4256A_EFR32FG13P_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_ldma_ping_pong" description="Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the &quot;pingBuffer&quot; array, then to the &quot;pongBuffer&quot;, then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then requests the next transfer.   In this way, you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot;  transfered to pong, etc. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_ping_pong/SimplicityStudio/BRD4257A_EFR32FG14P_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_ldma_ping_pong" description="Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the &quot;pingBuffer&quot; array, then to the &quot;pongBuffer&quot;, then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then requests the next transfer.   In this way, you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot;  transfered to pong, etc. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_ping_pong/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_ldma_ping_pong" description="Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the &quot;pingBuffer&quot; array, then to the &quot;pongBuffer&quot;, then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then requests the next transfer.   In this way, you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot;  transfered to pong, etc. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_ping_pong/SimplicityStudio/SLSTK3401A_EFM32PG1B_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_ldma_ping_pong" description="Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the &quot;pingBuffer&quot; array, then to the &quot;pongBuffer&quot;, then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then requests the next transfer.   In this way, you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot;  transfered to pong, etc. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_ping_pong/SimplicityStudio/SLSTK3402A_EFM32PG12B_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_ldma_ping_pong" description="Software requests LDMA ping-pong transfers.  A universal source array is  transfered first to the &quot;pingBuffer&quot; array, then to the &quot;pongBuffer&quot;, then back to ping, etc.  After each transfer, there is an interrupt that increments the elements of the source buffer, then requests the next transfer.   In this way, you should see &quot;11111111&quot; transfered to ping, then &quot;22222222&quot;  transfered to pong, etc. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_ping_pong/SimplicityStudio/SLSTK3701A_EFM32GG11B_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_ldma_scatter_gather" description="Software requests an LDMA transfer on a linked list of 4 descriptors to &quot;scatter&quot; one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_scatter_gather/SimplicityStudio/BRD4100A_EFR32BG1P_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_ldma_scatter_gather" description="Software requests an LDMA transfer on a linked list of 4 descriptors to &quot;scatter&quot; one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_scatter_gather/SimplicityStudio/BRD4103A_EFR32BG12P_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_ldma_scatter_gather" description="Software requests an LDMA transfer on a linked list of 4 descriptors to &quot;scatter&quot; one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_scatter_gather/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_ldma_scatter_gather" description="Software requests an LDMA transfer on a linked list of 4 descriptors to &quot;scatter&quot; one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_scatter_gather/SimplicityStudio/BRD4151A_EFR32MG1P_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_ldma_scatter_gather" description="Software requests an LDMA transfer on a linked list of 4 descriptors to &quot;scatter&quot; one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_scatter_gather/SimplicityStudio/BRD4159A_EFR32MG13P_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_ldma_scatter_gather" description="Software requests an LDMA transfer on a linked list of 4 descriptors to &quot;scatter&quot; one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_scatter_gather/SimplicityStudio/BRD4161A_EFR32MG12P_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_ldma_scatter_gather" description="Software requests an LDMA transfer on a linked list of 4 descriptors to &quot;scatter&quot; one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_scatter_gather/SimplicityStudio/BRD4169A_EFR32MG14P_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_ldma_scatter_gather" description="Software requests an LDMA transfer on a linked list of 4 descriptors to &quot;scatter&quot; one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_scatter_gather/SimplicityStudio/BRD4250A_EFR32FG1P_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_ldma_scatter_gather" description="Software requests an LDMA transfer on a linked list of 4 descriptors to &quot;scatter&quot; one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_scatter_gather/SimplicityStudio/BRD4253A_EFR32FG12P_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_ldma_scatter_gather" description="Software requests an LDMA transfer on a linked list of 4 descriptors to &quot;scatter&quot; one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_scatter_gather/SimplicityStudio/BRD4256A_EFR32FG13P_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_ldma_scatter_gather" description="Software requests an LDMA transfer on a linked list of 4 descriptors to &quot;scatter&quot; one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_scatter_gather/SimplicityStudio/BRD4257A_EFR32FG14P_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_ldma_scatter_gather" description="Software requests an LDMA transfer on a linked list of 4 descriptors to &quot;scatter&quot; one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_scatter_gather/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_ldma_scatter_gather" description="Software requests an LDMA transfer on a linked list of 4 descriptors to &quot;scatter&quot; one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_scatter_gather/SimplicityStudio/SLSTK3401A_EFM32PG1B_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_ldma_scatter_gather" description="Software requests an LDMA transfer on a linked list of 4 descriptors to &quot;scatter&quot; one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_scatter_gather/SimplicityStudio/SLSTK3402A_EFM32PG12B_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_ldma_scatter_gather" description="Software requests an LDMA transfer on a linked list of 4 descriptors to &quot;scatter&quot; one large array into 4 smaller arrays.  Each descriptor moves 8  halfwords of memory into a destination buffer.  An interrupt triggers after  the completion of the &quot;scatter&quot;. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_scatter_gather/SimplicityStudio/SLSTK3701A_EFM32GG11B_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_ldma_single_button" description="In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_button/SimplicityStudio/BRD4100A_EFR32BG1P_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_ldma_single_button" description="In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_button/SimplicityStudio/BRD4103A_EFR32BG12P_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_ldma_single_button" description="In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_button/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_ldma_single_button" description="In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_button/SimplicityStudio/BRD4151A_EFR32MG1P_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_ldma_single_button" description="In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_button/SimplicityStudio/BRD4159A_EFR32MG13P_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_ldma_single_button" description="In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_button/SimplicityStudio/BRD4161A_EFR32MG12P_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_ldma_single_button" description="In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_button/SimplicityStudio/BRD4169A_EFR32MG14P_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_ldma_single_button" description="In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_button/SimplicityStudio/BRD4250A_EFR32FG1P_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_ldma_single_button" description="In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_button/SimplicityStudio/BRD4253A_EFR32FG12P_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_ldma_single_button" description="In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_button/SimplicityStudio/BRD4256A_EFR32FG13P_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_ldma_single_button" description="In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_button/SimplicityStudio/BRD4257A_EFR32FG14P_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_ldma_single_button" description="In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_button/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_ldma_single_button" description="In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_button/SimplicityStudio/SLSTK3401A_EFM32PG1B_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_ldma_single_button" description="In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_button/SimplicityStudio/SLSTK3402A_EFM32PG12B_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_ldma_single_button" description="In this example, the LDMA transfers 128 halfwords (256 bytes) from one software array to another.  The transfer is requested by a button press on Push Button 1. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_button/SimplicityStudio/SLSTK3701A_EFM32GG11B_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_ldma_single_looped" description="In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_looped/SimplicityStudio/BRD4100A_EFR32BG1P_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_ldma_single_looped" description="In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_looped/SimplicityStudio/BRD4103A_EFR32BG12P_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_ldma_single_looped" description="In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_looped/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_ldma_single_looped" description="In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_looped/SimplicityStudio/BRD4151A_EFR32MG1P_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_ldma_single_looped" description="In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_looped/SimplicityStudio/BRD4159A_EFR32MG13P_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_ldma_single_looped" description="In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_looped/SimplicityStudio/BRD4161A_EFR32MG12P_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_ldma_single_looped" description="In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_looped/SimplicityStudio/BRD4169A_EFR32MG14P_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_ldma_single_looped" description="In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_looped/SimplicityStudio/BRD4250A_EFR32FG1P_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_ldma_single_looped" description="In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_looped/SimplicityStudio/BRD4253A_EFR32FG12P_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_ldma_single_looped" description="In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_looped/SimplicityStudio/BRD4256A_EFR32FG13P_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_ldma_single_looped" description="In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_looped/SimplicityStudio/BRD4257A_EFR32FG14P_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_ldma_single_looped" description="In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_looped/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_ldma_single_looped" description="In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_looped/SimplicityStudio/SLSTK3401A_EFM32PG1B_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_ldma_single_looped" description="In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_looped/SimplicityStudio/SLSTK3402A_EFM32PG12B_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_ldma_single_looped" description="In this example, the LDMA transfers 16 words from one software  array to another in 4 sets of 4 words.  The transfer is requested  by software at the end of the LDMA initialization. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_looped/SimplicityStudio/SLSTK3701A_EFM32GG11B_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_ldma_single_software" description="In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_ldma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_software/SimplicityStudio/BRD4100A_EFR32BG1P_ldma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_ldma_single_software" description="In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_ldma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_software/SimplicityStudio/BRD4103A_EFR32BG12P_ldma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_ldma_single_software" description="In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_ldma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_software/SimplicityStudio/BRD4104A_EFR32BG13P_ldma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_ldma_single_software" description="In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_ldma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_software/SimplicityStudio/BRD4151A_EFR32MG1P_ldma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_ldma_single_software" description="In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_ldma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_software/SimplicityStudio/BRD4159A_EFR32MG13P_ldma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_ldma_single_software" description="In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_ldma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_software/SimplicityStudio/BRD4161A_EFR32MG12P_ldma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_ldma_single_software" description="In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_ldma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_software/SimplicityStudio/BRD4169A_EFR32MG14P_ldma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_ldma_single_software" description="In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_ldma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_software/SimplicityStudio/BRD4250A_EFR32FG1P_ldma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_ldma_single_software" description="In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_ldma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_software/SimplicityStudio/BRD4253A_EFR32FG12P_ldma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_ldma_single_software" description="In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_ldma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_software/SimplicityStudio/BRD4256A_EFR32FG13P_ldma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_ldma_single_software" description="In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_ldma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_software/SimplicityStudio/BRD4257A_EFR32FG14P_ldma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_ldma_single_software" description="In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_ldma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_software/SimplicityStudio/SLSTK3301A_EFM32TG11B_ldma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_ldma_single_software" description="In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_ldma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_software/SimplicityStudio/SLSTK3401A_EFM32PG1B_ldma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_ldma_single_software" description="In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_ldma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_software/SimplicityStudio/SLSTK3402A_EFM32PG12B_ldma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_ldma_single_software" description="In this example, the LDMA transfers 127 halfwords (256 bytes) from one software array to another.  The transfer is requested by software. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_ldma_single_software"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/ldma/ldma_single_software/SimplicityStudio/SLSTK3701A_EFM32GG11B_ldma_single_software.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_lesense_multi_channel_ACMP" description="This project demonstrates the usage of lesense to sample multiple channels using ACMP. The project defines four lesense channels and each of these channels is linked to one of the ACMP channel based on the pin configuration shown in the datasheet. Each channel will be able to detect a sensor's level change, and will trigger an interrupt whenever it detects a positive edge on the sensor's input level. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_lesense_multi_channel_ACMP"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LESENSE"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/lesense/lesense_multi_channel_ACMP/SimplicityStudio/SLSTK3301A_EFM32TG11_lesense_multi_channel_ACMP.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_lesense_multi_channel_ACMP" description="This project demonstrates the usage of lesense to sample multiple channels using ACMP. The project defines four lesense channels and each of these channels is linked to one of the ACMP channel based on the pin configuration shown in the datasheet. Each channel will be able to detect a sensor's level change, and will trigger an interrupt whenever it detects a positive edge on the sensor's input level. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_lesense_multi_channel_ACMP"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LESENSE"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/lesense/lesense_multi_channel_ACMP/SimplicityStudio/SLSTK3701A_EFM32GG11_lesense_multi_channel_ACMP.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/one_shot_output_compare/SimplicityStudio/BRD4100A_EFR32BG1P_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/one_shot_output_compare/SimplicityStudio/BRD4103A_EFR32BG12P_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/one_shot_output_compare/SimplicityStudio/BRD4104A_EFR32BG13P_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/one_shot_output_compare/SimplicityStudio/BRD4151A_EFR32MG1P_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/one_shot_output_compare/SimplicityStudio/BRD4159A_EFR32MG13P_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/one_shot_output_compare/SimplicityStudio/BRD4161A_EFR32MG12P_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/one_shot_output_compare/SimplicityStudio/BRD4169A_EFR32MG14P_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/one_shot_output_compare/SimplicityStudio/BRD4250A_EFR32FG1P_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/one_shot_output_compare/SimplicityStudio/BRD4253A_EFR32FG12P_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/one_shot_output_compare/SimplicityStudio/BRD4256A_EFR32FG13P_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/one_shot_output_compare/SimplicityStudio/BRD4257A_EFR32FG14P_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/one_shot_output_compare/SimplicityStudio/SLSTK3301A_EFM32TG11B_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/one_shot_output_compare/SimplicityStudio/SLSTK3401A_EFM32PG1B_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/one_shot_output_compare/SimplicityStudio/SLSTK3402A_EFM32PG12B_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one  second, while staying in a low energy mode, will set either an Exp  Header Pin or LED0 high. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/one_shot_output_compare/SimplicityStudio/SLSTK3701A_EFM32GG11B_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_train/SimplicityStudio/BRD4100A_EFR32BG1P_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_train/SimplicityStudio/BRD4103A_EFR32BG12P_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_train/SimplicityStudio/BRD4104A_EFR32BG13P_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_train/SimplicityStudio/BRD4151A_EFR32MG1P_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_train/SimplicityStudio/BRD4159A_EFR32MG13P_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_train/SimplicityStudio/BRD4161A_EFR32MG12P_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_train/SimplicityStudio/BRD4169A_EFR32MG14P_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_train/SimplicityStudio/BRD4250A_EFR32FG1P_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_train/SimplicityStudio/BRD4253A_EFR32FG12P_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_train/SimplicityStudio/BRD4256A_EFR32FG13P_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_train/SimplicityStudio/BRD4257A_EFR32FG14P_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_train/SimplicityStudio/SLSTK3301A_EFM32TG11B_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_train/SimplicityStudio/SLSTK3401A_EFM32PG1B_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_train/SimplicityStudio/SLSTK3402A_EFM32PG12B_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1 kHz frequency. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_train/SimplicityStudio/SLSTK3701A_EFM32GG11B_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_width_modulation/SimplicityStudio/BRD4100A_EFR32BG1P_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_width_modulation/SimplicityStudio/BRD4103A_EFR32BG12P_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_width_modulation/SimplicityStudio/BRD4104A_EFR32BG13P_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_width_modulation/SimplicityStudio/BRD4151A_EFR32MG1P_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_width_modulation/SimplicityStudio/BRD4159A_EFR32MG13P_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_width_modulation/SimplicityStudio/BRD4161A_EFR32MG12P_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_width_modulation/SimplicityStudio/BRD4169A_EFR32MG14P_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_width_modulation/SimplicityStudio/BRD4250A_EFR32FG1P_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_width_modulation/SimplicityStudio/BRD4253A_EFR32FG12P_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_width_modulation/SimplicityStudio/BRD4256A_EFR32FG13P_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_width_modulation/SimplicityStudio/BRD4257A_EFR32FG14P_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_width_modulation/SimplicityStudio/SLSTK3301A_EFM32TG11B_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_width_modulation/SimplicityStudio/SLSTK3401A_EFM32PG1B_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_width_modulation/SimplicityStudio/SLSTK3402A_EFM32PG12B_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the timer for PWM with a set 30 percent  duty cycle at 1 Hz frequency. The waveform is output on either an  Expansion Header Pin or LED0 depending on the board. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/letimer/pulse_width_modulation/SimplicityStudio/SLSTK3701A_EFM32GG11B_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_dma/SimplicityStudio/BRD4100A_EFR32BG1P_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_dma/SimplicityStudio/BRD4103A_EFR32BG12P_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_dma/SimplicityStudio/BRD4104A_EFR32BG13P_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_dma/SimplicityStudio/BRD4151A_EFR32MG1P_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_dma/SimplicityStudio/BRD4159A_EFR32MG13P_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_dma/SimplicityStudio/BRD4161A_EFR32MG12P_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_dma/SimplicityStudio/BRD4169B_EFR32MG14P_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_dma/SimplicityStudio/BRD4250A_EFR32FG1P_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_dma/SimplicityStudio/BRD4253A_EFR32FG12P_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_dma/SimplicityStudio/BRD4256A_EFR32FG13P_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_dma/SimplicityStudio/BRD4257A_EFR32FG14P_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_dma/SimplicityStudio/SLSTK3401A_EFM32PG1B_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_dma/SimplicityStudio/SLSTK3402A_EFM32PG12B_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_leuart_dma" description="This example uses the LEUART to receive serial input and then echo it back using the DMA/LDMA (Linked DMA is for series 1 devices only). The devices stays in EM2 the entire time since the DMA/LDMA module can still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_leuart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_dma/SimplicityStudio/SLSTK3701A_EFM32GG11B_leuart_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_echo/SimplicityStudio/BRD4100A_EFR32BG1P_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_echo/SimplicityStudio/BRD4103A_EFR32BG12P_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_echo/SimplicityStudio/BRD4104A_EFR32BG13P_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_echo/SimplicityStudio/BRD4151A_EFR32MG1P_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_echo/SimplicityStudio/BRD4159A_EFR32MG13P_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_echo/SimplicityStudio/BRD4161A_EFR32MG12P_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_echo/SimplicityStudio/BRD4169B_EFR32MG14P_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_echo/SimplicityStudio/BRD4250A_EFR32FG1P_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_echo/SimplicityStudio/BRD4253A_EFR32FG12P_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_echo/SimplicityStudio/BRD4256A_EFR32FG13P_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_echo/SimplicityStudio/BRD4257A_EFR32FG14P_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_echo/SimplicityStudio/SLSTK3301A_EFM32TG11B_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_echo/SimplicityStudio/SLSTK3401A_EFM32PG1B_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_echo/SimplicityStudio/SLSTK3402A_EFM32PG12B_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_leuart_echo" description="This example uses the LEUART (low energy UART) to receive serial input and then echo it back. The board waits in EM2 to preserve energy while waiting for input. This example used about 10.4 microamps when in EM2 and about 100 microamps when  the interrupt woke up the CPU to transmit/receive data. After commenting out the  line of code that puts the board in EM2, this example used about 1.85 milliamps  on average. Note: this energy measurement was done using Simplicity Studio's  built-in energy profiler for the GG11 board with a Debug build configuration and  no optimization flags (gcc -O0).  ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_leuart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_echo/SimplicityStudio/SLSTK3701A_EFM32GG11B_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_half_duplex/SimplicityStudio/BRD4100A_EFR32BG1P_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_half_duplex/SimplicityStudio/BRD4103A_EFR32BG12P_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_half_duplex/SimplicityStudio/BRD4104A_EFR32BG13P_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_half_duplex/SimplicityStudio/BRD4151A_EFR32MG1P_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_half_duplex/SimplicityStudio/BRD4159A_EFR32MG13P_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_half_duplex/SimplicityStudio/BRD4161A_EFR32MG12P_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_half_duplex/SimplicityStudio/BRD4169B_EFR32MG14P_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_half_duplex/SimplicityStudio/BRD4250A_EFR32FG1P_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_half_duplex/SimplicityStudio/BRD4253A_EFR32FG12P_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_half_duplex/SimplicityStudio/BRD4256A_EFR32FG13P_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_half_duplex/SimplicityStudio/BRD4257A_EFR32FG14P_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_half_duplex/SimplicityStudio/SLSTK3301A_EFM32TG11B_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_half_duplex/SimplicityStudio/SLSTK3401A_EFM32PG1B_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_half_duplex/SimplicityStudio/SLSTK3402A_EFM32PG12B_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_leuart_half_duplex" description="This example uses the LEUART0 module (low energy UART) to do half-duplex communication with the LEUART0 module on another board using the single data-link configuration described in the reference manual. This means that half-duplex is done by using only one wire to communicate between LEUARTs. In this example, we ensure that only one LEUART is transmitting at a time by starting one LEUART with transmitter enabled and receiver disabled, while the other LEUART has its receiver enabled and transmitter disabled. Each LEUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_leuart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LEUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/leuart/leuart_half_duplex/SimplicityStudio/SLSTK3701A_EFM32GG11B_leuart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/debug_lock/SimplicityStudio/BRD4100A_EFR32BG1P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/debug_lock/SimplicityStudio/BRD4103A_EFR32BG12P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/debug_lock/SimplicityStudio/BRD4104A_EFR32BG13P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/debug_lock/SimplicityStudio/BRD4151A_EFR32MG1P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/debug_lock/SimplicityStudio/BRD4159A_EFR32MG13P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/debug_lock/SimplicityStudio/BRD4161A_EFR32MG12P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/debug_lock/SimplicityStudio/BRD4169B_EFR32MG14P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/debug_lock/SimplicityStudio/BRD4250A_EFR32FG1P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/debug_lock/SimplicityStudio/BRD4253A_EFR32FG12P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/debug_lock/SimplicityStudio/BRD4256A_EFR32FG13P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/debug_lock/SimplicityStudio/BRD4257A_EFR32FG14P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/debug_lock/SimplicityStudio/SLSTK3301A_EFM32TG11_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/debug_lock/SimplicityStudio/SLSTK3401A_EFM32PG1B_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/debug_lock/SimplicityStudio/SLSTK3402A_EFM32PG12B_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_debug_lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_debug_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/debug_lock/SimplicityStudio/SLSTK3701A_EFM32GG11_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/msc_rw/SimplicityStudio/BRD4100A_EFR32BG1P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/msc_rw/SimplicityStudio/BRD4103A_EFR32BG12P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/msc_rw/SimplicityStudio/BRD4104A_EFR32BG13P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/msc_rw/SimplicityStudio/BRD4151A_EFR32MG1P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/msc_rw/SimplicityStudio/BRD4159A_EFR32MG13P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/msc_rw/SimplicityStudio/BRD4161A_EFR32MG12P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169BA_EFR32MG14P_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd4169ba"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169BA_EFR32MG14P_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/msc_rw/SimplicityStudio/BRD4169BA_EFR32MG14P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/msc_rw/SimplicityStudio/BRD4250A_EFR32FG1P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/msc_rw/SimplicityStudio/BRD4253A_EFR32FG12P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/msc_rw/SimplicityStudio/BRD4256A_EFR32FG13P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/msc_rw/SimplicityStudio/BRD4257A_EFR32FG14P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/msc_rw/SimplicityStudio/SLSTK3301A_EFM32TG11_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/msc_rw/SimplicityStudio/SLSTK3401A_EFM32PG1B_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/msc_rw/SimplicityStudio/SLSTK3402A_EFM32PG12B_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/msc/msc_rw/SimplicityStudio/SLSTK3701A_EFM32GG11_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_opamp_cascaded_inverting" description="This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_opamp_cascaded_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_inverting/SimplicityStudio/BRD4103A_EFR32BG12P_opamp_cascaded_inverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_opamp_cascaded_inverting" description="This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_opamp_cascaded_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_inverting/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_cascaded_inverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_opamp_cascaded_inverting" description="This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_opamp_cascaded_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_inverting/SimplicityStudio/BRD4159A_EFR32MG13P_opamp_cascaded_inverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_opamp_cascaded_inverting" description="This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_opamp_cascaded_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_inverting/SimplicityStudio/BRD4161A_EFR32MG12P_opamp_cascaded_inverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_opamp_cascaded_inverting" description="This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_opamp_cascaded_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_inverting/SimplicityStudio/BRD4169B_EFR32MG14P_opamp_cascaded_inverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_opamp_cascaded_inverting" description="This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_opamp_cascaded_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_inverting/SimplicityStudio/BRD4253A_EFR32FG12P_opamp_cascaded_inverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_opamp_cascaded_inverting" description="This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_opamp_cascaded_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_inverting/SimplicityStudio/BRD4256A_EFR32FG13P_opamp_cascaded_inverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_opamp_cascaded_inverting" description="This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_opamp_cascaded_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_inverting/SimplicityStudio/BRD4257A_EFR32FG14P_opamp_cascaded_inverting.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_opamp_cascaded_inverting" description="This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_opamp_cascaded_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_inverting/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_cascaded_inverting.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_opamp_cascaded_inverting" description="This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_opamp_cascaded_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_inverting/SimplicityStudio/SLSTK3402A_EFM32PG12B_opamp_cascaded_inverting.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_opamp_cascaded_inverting" description="This project operates in EM3 and configures opamps 0, 1, 2 as cascaded inverting amplifiers whose gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_opamp_cascaded_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_inverting/SimplicityStudio/SLSTK3701A_EFM32GG11B_opamp_cascaded_inverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_opamp_cascaded_noninverting" description="This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_opamp_cascaded_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_noninverting/SimplicityStudio/BRD4103A_EFR32BG12P_opamp_cascaded_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_opamp_cascaded_noninverting" description="This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_opamp_cascaded_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_noninverting/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_cascaded_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_opamp_cascaded_noninverting" description="This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_opamp_cascaded_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_noninverting/SimplicityStudio/BRD4159A_EFR32MG13P_opamp_cascaded_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_opamp_cascaded_noninverting" description="This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_opamp_cascaded_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_noninverting/SimplicityStudio/BRD4161A_EFR32MG12P_opamp_cascaded_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_opamp_cascaded_noninverting" description="This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_opamp_cascaded_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_noninverting/SimplicityStudio/BRD4169B_EFR32MG14P_opamp_cascaded_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_opamp_cascaded_noninverting" description="This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_opamp_cascaded_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_noninverting/SimplicityStudio/BRD4253A_EFR32FG12P_opamp_cascaded_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_opamp_cascaded_noninverting" description="This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_opamp_cascaded_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_noninverting/SimplicityStudio/BRD4256A_EFR32FG13P_opamp_cascaded_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_opamp_cascaded_noninverting" description="This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_opamp_cascaded_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_noninverting/SimplicityStudio/BRD4257A_EFR32FG14P_opamp_cascaded_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_opamp_cascaded_noninverting" description="This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_opamp_cascaded_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_noninverting/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_cascaded_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_opamp_cascaded_noninverting" description="This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_opamp_cascaded_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_noninverting/SimplicityStudio/SLSTK3402A_EFM32PG12B_opamp_cascaded_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_opamp_cascaded_noninverting" description="This project operates in EM3 and configures opamp 0, 1, 2 as cascading  non-inverting amplifiers gains are given by the following equations: ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_opamp_cascaded_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_cascaded_noninverting/SimplicityStudio/SLSTK3701A_EFM32GG11B_opamp_cascaded_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_opamp_dac_to_opamp" description="This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also configures the DAC to output on Channel 0. The user should use a wire to connect the output of the DAC to the positive input node of the opamp. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_opamp_dac_to_opamp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_dac_to_opamp/SimplicityStudio/BRD4103A_EFR32BG12P_opamp_dac_to_opamp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_opamp_dac_to_opamp" description="This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also configures the DAC to output on Channel 0. The user should use a wire to connect the output of the DAC to the positive input node of the opamp. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_opamp_dac_to_opamp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_dac_to_opamp/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_dac_to_opamp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_opamp_dac_to_opamp" description="This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also configures the DAC to output on Channel 0. The user should use a wire to connect the output of the DAC to the positive input node of the opamp. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_opamp_dac_to_opamp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_dac_to_opamp/SimplicityStudio/BRD4159A_EFR32MG13P_opamp_dac_to_opamp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_opamp_dac_to_opamp" description="This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also configures the DAC to output on Channel 0. The user should use a wire to connect the output of the DAC to the positive input node of the opamp. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_opamp_dac_to_opamp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_dac_to_opamp/SimplicityStudio/BRD4161A_EFR32MG12P_opamp_dac_to_opamp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_opamp_dac_to_opamp" description="This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also configures the DAC to output on Channel 0. The user should use a wire to connect the output of the DAC to the positive input node of the opamp. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_opamp_dac_to_opamp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_dac_to_opamp/SimplicityStudio/BRD4169B_EFR32MG14P_opamp_dac_to_opamp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_opamp_dac_to_opamp" description="This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also configures the DAC to output on Channel 0. The user should use a wire to connect the output of the DAC to the positive input node of the opamp. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_opamp_dac_to_opamp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_dac_to_opamp/SimplicityStudio/BRD4253A_EFR32FG12P_opamp_dac_to_opamp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_opamp_dac_to_opamp" description="This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also configures the DAC to output on Channel 0. The user should use a wire to connect the output of the DAC to the positive input node of the opamp. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_opamp_dac_to_opamp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_dac_to_opamp/SimplicityStudio/BRD4256A_EFR32FG13P_opamp_dac_to_opamp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_opamp_dac_to_opamp" description="This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also configures the DAC to output on Channel 0. The user should use a wire to connect the output of the DAC to the positive input node of the opamp. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_opamp_dac_to_opamp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_dac_to_opamp/SimplicityStudio/BRD4257A_EFR32FG14P_opamp_dac_to_opamp.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_opamp_dac_to_opamp" description="This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also configures the DAC to output on Channel 0. The user should use a wire to connect the output of the DAC to the positive input node of the opamp. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_opamp_dac_to_opamp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_dac_to_opamp/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_dac_to_opamp.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_opamp_dac_to_opamp" description="This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also configures the DAC to output on Channel 0. The user should use a wire to connect the output of the DAC to the positive input node of the opamp. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_opamp_dac_to_opamp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_dac_to_opamp/SimplicityStudio/SLSTK3402A_EFM32PG12B_opamp_dac_to_opamp.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_opamp_dac_to_opamp" description="This project configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in Vout = Vin * 2. This project also configures the DAC to output on Channel 0. The user should use a wire to connect the output of the DAC to the positive input node of the opamp. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_opamp_dac_to_opamp"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_dac_to_opamp/SimplicityStudio/SLSTK3701A_EFM32GG11B_opamp_dac_to_opamp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_opamp_differential_three" description="This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_opamp_differential_three"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_three/SimplicityStudio/BRD4103A_EFR32BG12P_opamp_differential_three.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_opamp_differential_three" description="This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_opamp_differential_three"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_three/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_differential_three.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_opamp_differential_three" description="This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_opamp_differential_three"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_three/SimplicityStudio/BRD4159A_EFR32MG13P_opamp_differential_three.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_opamp_differential_three" description="This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_opamp_differential_three"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_three/SimplicityStudio/BRD4161A_EFR32MG12P_opamp_differential_three.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_opamp_differential_three" description="This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_opamp_differential_three"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_three/SimplicityStudio/BRD4253A_EFR32FG12P_opamp_differential_three.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_opamp_differential_three" description="This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_opamp_differential_three"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_three/SimplicityStudio/BRD4256A_EFR32FG13P_opamp_differential_three.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_opamp_differential_three" description="This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_opamp_differential_three"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_three/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_differential_three.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_opamp_differential_three" description="This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_opamp_differential_three"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_three/SimplicityStudio/SLSTK3402A_EFM32PG12B_opamp_differential_three.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_opamp_differential_three" description="This project operates in EM3 and configures opamp 0 as a voltage follower,  opamp 1 as a voltage follower, and opamp 2 as a non-inverting opamp to produce  a differential amplifier with three opamps. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_opamp_differential_three"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_three/SimplicityStudio/SLSTK3701A_EFM32GG11B_opamp_differential_three.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_opamp_differential_two" description="This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_opamp_differential_two"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_two/SimplicityStudio/BRD4103A_EFR32BG12P_opamp_differential_two.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_opamp_differential_two" description="This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_opamp_differential_two"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_two/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_differential_two.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_opamp_differential_two" description="This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_opamp_differential_two"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_two/SimplicityStudio/BRD4159A_EFR32MG13P_opamp_differential_two.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_opamp_differential_two" description="This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_opamp_differential_two"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_two/SimplicityStudio/BRD4161A_EFR32MG12P_opamp_differential_two.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_opamp_differential_two" description="This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_opamp_differential_two"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_two/SimplicityStudio/BRD4169B_EFR32MG14P_opamp_differential_two.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_opamp_differential_two" description="This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_opamp_differential_two"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_two/SimplicityStudio/BRD4253A_EFR32FG12P_opamp_differential_two.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_opamp_differential_two" description="This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_opamp_differential_two"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_two/SimplicityStudio/BRD4256A_EFR32FG13P_opamp_differential_two.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_opamp_differential_two" description="This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_opamp_differential_two"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_two/SimplicityStudio/BRD4257A_EFR32FG14P_opamp_differential_two.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_opamp_differential_two" description="This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_opamp_differential_two"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_two/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_differential_two.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_opamp_differential_two" description="This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_opamp_differential_two"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_two/SimplicityStudio/SLSTK3402A_EFM32PG12B_opamp_differential_two.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_opamp_differential_two" description="This project operates in EM3 and configures opamp 0 as a voltage follower and opamp 1 as a non-inverting opamp. The equation for Vdiff is shown below: ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_opamp_differential_two"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_differential_two/SimplicityStudio/SLSTK3701A_EFM32GG11B_opamp_differential_two.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_opamp_inverting" description="This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_opamp_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_inverting/SimplicityStudio/BRD4103A_EFR32BG12P_opamp_inverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_opamp_inverting" description="This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_opamp_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_inverting/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_inverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_opamp_inverting" description="This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_opamp_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_inverting/SimplicityStudio/BRD4159A_EFR32MG13P_opamp_inverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_opamp_inverting" description="This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_opamp_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_inverting/SimplicityStudio/BRD4161A_EFR32MG12P_opamp_inverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_opamp_inverting" description="This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_opamp_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_inverting/SimplicityStudio/BRD4169B_EFR32MG14P_opamp_inverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_opamp_inverting" description="This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_opamp_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_inverting/SimplicityStudio/BRD4253A_EFR32FG12P_opamp_inverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_opamp_inverting" description="This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_opamp_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_inverting/SimplicityStudio/BRD4256A_EFR32FG13P_opamp_inverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_opamp_inverting" description="This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_opamp_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_inverting/SimplicityStudio/BRD4257A_EFR32FG14P_opamp_inverting.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_opamp_inverting" description="This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_opamp_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_inverting/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_inverting.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_opamp_inverting" description="This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_opamp_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_inverting/SimplicityStudio/SLSTK3402A_EFM32PG12B_opamp_inverting.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_opamp_inverting" description="This project operates in EM3 and configures an opamp as an inverting amplifier whose gain is given by the following equation: ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_opamp_inverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_inverting/SimplicityStudio/SLSTK3701A_EFM32GG11B_opamp_inverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_opamp_noninverting" description="This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_opamp_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_noninverting/SimplicityStudio/BRD4103A_EFR32BG12P_opamp_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_opamp_noninverting" description="This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_opamp_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_noninverting/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_opamp_noninverting" description="This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_opamp_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_noninverting/SimplicityStudio/BRD4159A_EFR32MG13P_opamp_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_opamp_noninverting" description="This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_opamp_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_noninverting/SimplicityStudio/BRD4161A_EFR32MG12P_opamp_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_opamp_noninverting" description="This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_opamp_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_noninverting/SimplicityStudio/BRD4169B_EFR32MG14P_opamp_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_opamp_noninverting" description="This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_opamp_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_noninverting/SimplicityStudio/BRD4253A_EFR32FG12P_opamp_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_opamp_noninverting" description="This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_opamp_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_noninverting/SimplicityStudio/BRD4256A_EFR32FG13P_opamp_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_opamp_noninverting" description="This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_opamp_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_noninverting/SimplicityStudio/BRD4257A_EFR32FG14P_opamp_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_opamp_noninverting" description="This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_opamp_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_noninverting/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_opamp_noninverting" description="This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_opamp_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_noninverting/SimplicityStudio/SLSTK3402A_EFM32PG12B_opamp_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_opamp_noninverting" description="This project operates in EM3 and configures opamp 2 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1).  By default, this project selects the R2/R1 resistor ladder ratio to be  R2 = 0.33 * R1. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_opamp_noninverting"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_noninverting/SimplicityStudio/SLSTK3701A_EFM32GG11B_opamp_noninverting.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_opamp_to_adc" description="This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also configures the ADC to receive input on the same pin the opamp is outputting to so that the user can enter debug mode to check the ADC conversion of the opamp output. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_opamp_to_adc"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_to_adc/SimplicityStudio/BRD4103A_EFR32BG12P_opamp_to_adc.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_opamp_to_adc" description="This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also configures the ADC to receive input on the same pin the opamp is outputting to so that the user can enter debug mode to check the ADC conversion of the opamp output. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_opamp_to_adc"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_to_adc/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_to_adc.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_opamp_to_adc" description="This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also configures the ADC to receive input on the same pin the opamp is outputting to so that the user can enter debug mode to check the ADC conversion of the opamp output. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_opamp_to_adc"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_to_adc/SimplicityStudio/BRD4159A_EFR32MG13P_opamp_to_adc.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_opamp_to_adc" description="This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also configures the ADC to receive input on the same pin the opamp is outputting to so that the user can enter debug mode to check the ADC conversion of the opamp output. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_opamp_to_adc"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_to_adc/SimplicityStudio/BRD4161A_EFR32MG12P_opamp_to_adc.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_opamp_to_adc" description="This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also configures the ADC to receive input on the same pin the opamp is outputting to so that the user can enter debug mode to check the ADC conversion of the opamp output. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_opamp_to_adc"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_to_adc/SimplicityStudio/BRD4169B_EFR32MG14P_opamp_to_adc.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_opamp_to_adc" description="This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also configures the ADC to receive input on the same pin the opamp is outputting to so that the user can enter debug mode to check the ADC conversion of the opamp output. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_opamp_to_adc"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_to_adc/SimplicityStudio/BRD4253A_EFR32FG12P_opamp_to_adc.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_opamp_to_adc" description="This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also configures the ADC to receive input on the same pin the opamp is outputting to so that the user can enter debug mode to check the ADC conversion of the opamp output. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_opamp_to_adc"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_to_adc/SimplicityStudio/BRD4256A_EFR32FG13P_opamp_to_adc.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_opamp_to_adc" description="This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also configures the ADC to receive input on the same pin the opamp is outputting to so that the user can enter debug mode to check the ADC conversion of the opamp output. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_opamp_to_adc"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_to_adc/SimplicityStudio/BRD4257A_EFR32FG14P_opamp_to_adc.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_opamp_to_adc" description="This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also configures the ADC to receive input on the same pin the opamp is outputting to so that the user can enter debug mode to check the ADC conversion of the opamp output. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_opamp_to_adc"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_to_adc/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_to_adc.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_opamp_to_adc" description="This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also configures the ADC to receive input on the same pin the opamp is outputting to so that the user can enter debug mode to check the ADC conversion of the opamp output. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_opamp_to_adc"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_to_adc/SimplicityStudio/SLSTK3402A_EFM32PG12B_opamp_to_adc.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_opamp_to_adc" description="This project configures opamp 1 as a non-inverting amplifier whose gain is given by the following equation: Vout = Vin * (1 + R2/R1). By default, this project selects the R2/R1 resistor ladder ratio to be R2 = R1. This results in  Vout = Vin * 2. This project also configures the ADC to receive input on the same pin the opamp is outputting to so that the user can enter debug mode to check the ADC conversion of the opamp output. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_opamp_to_adc"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_to_adc/SimplicityStudio/SLSTK3701A_EFM32GG11B_opamp_to_adc.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_opamp_unity_gain" description="This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and drive higher loads. This project operates in EM3. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_opamp_unity_gain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_unity_gain/SimplicityStudio/BRD4103A_EFR32BG12P_opamp_unity_gain.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_opamp_unity_gain" description="This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and drive higher loads. This project operates in EM3. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_opamp_unity_gain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_unity_gain/SimplicityStudio/BRD4104A_EFR32BG13P_opamp_unity_gain.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_opamp_unity_gain" description="This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and drive higher loads. This project operates in EM3. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_opamp_unity_gain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_unity_gain/SimplicityStudio/BRD4159A_EFR32MG13P_opamp_unity_gain.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_opamp_unity_gain" description="This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and drive higher loads. This project operates in EM3. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_opamp_unity_gain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_unity_gain/SimplicityStudio/BRD4161A_EFR32MG12P_opamp_unity_gain.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_opamp_unity_gain" description="This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and drive higher loads. This project operates in EM3. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_opamp_unity_gain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_unity_gain/SimplicityStudio/BRD4169B_EFR32MG14P_opamp_unity_gain.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_opamp_unity_gain" description="This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and drive higher loads. This project operates in EM3. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_opamp_unity_gain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_unity_gain/SimplicityStudio/BRD4253A_EFR32FG12P_opamp_unity_gain.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_opamp_unity_gain" description="This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and drive higher loads. This project operates in EM3. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_opamp_unity_gain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_unity_gain/SimplicityStudio/BRD4256A_EFR32FG13P_opamp_unity_gain.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_opamp_unity_gain" description="This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and drive higher loads. This project operates in EM3. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_opamp_unity_gain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_unity_gain/SimplicityStudio/BRD4257A_EFR32FG14P_opamp_unity_gain.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_opamp_unity_gain" description="This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and drive higher loads. This project operates in EM3. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_opamp_unity_gain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_unity_gain/SimplicityStudio/SLSTK3301A_EFM32TG11B_opamp_unity_gain.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_opamp_unity_gain" description="This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and drive higher loads. This project operates in EM3. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_opamp_unity_gain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_unity_gain/SimplicityStudio/SLSTK3402A_EFM32PG12B_opamp_unity_gain.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_opamp_unity_gain" description="This project configures an opamp as a voltage follower with unity gain. The  output is routed back to the inverting input and the output voltage is equal to  the input voltage in value. This configuration is commonly used as a buffer to  increase drive strength and drive higher loads. This project operates in EM3. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_opamp_unity_gain"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="OPAMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/opamp/opamp_unity_gain/SimplicityStudio/SLSTK3701A_EFM32GG11B_opamp_unity_gain.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/BRD4100A_EFR32BG1P_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/BRD4103A_EFR32BG12P_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/BRD4104A_EFR32BG13P_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/BRD4151A_EFR32MG1P_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/BRD4159A_EFR32MG13P_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/BRD4161A_EFR32MG12P_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/BRD4169B_EFR32MG14P_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/BRD4250A_EFR32FG1P_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/BRD4253A_EFR32FG12P_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/BRD4256A_EFR32FG13P_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/BRD4257A_EFR32FG14P_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/SLSTK3301A_EFM32TG11_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/SLSTK3401A_EFM32PG1B_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/SLSTK3402A_EFM32PG12B_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_pcnt_extclk_quadrature" description="This project demonstrates the external quadrature mode of the pulse counter peripheral. The program will request an interrupt whenever the quadrature decoder detects a change in direction. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_pcnt_extclk_quadrature"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_qudarature/SimplicityStudio/SLSTK3701A_EFM32GG11_pcnt_extclk_quadrature.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/BRD4100A_EFR32BG1P_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/BRD4103A_EFR32BG12P_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/BRD4104A_EFR32BG13P_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/BRD4151A_EFR32MG1P_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/BRD4159A_EFR32MG13P_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/BRD4161A_EFR32MG12P_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/BRD4169B_EFR32MG14P_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/BRD4250A_EFR32FG1P_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/BRD4253A_EFR32FG12P_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/BRD4256A_EFR32FG13P_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/BRD4257A_EFR32FG14P_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/SLSTK3301A_EFM32TG11_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/SLSTK3401A_EFM32PG1B_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/SLSTK3402A_EFM32PG12B_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_pcnt_extclk_single_overflow" description="This project demonstrates the single external clock input oversampling mode of the pulse counter with interrupts. In this example, Push Button PB0 is the clock source and each clock cycle is generated by the press  and release of the button. The program generates an interrupt whenever the  pulse counter detects the number of pulses that went above a threshold set by user. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_pcnt_extclk_single_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_overflow/SimplicityStudio/SLSTK3701A_EFM32GG11_pcnt_extclk_single_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/BRD4100A_EFR32BG1P_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/BRD4103A_EFR32BG12P_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/BRD4104A_EFR32BG13P_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/BRD4151A_EFR32MG1P_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/BRD4159A_EFR32MG13P_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/BRD4161A_EFR32MG12P_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/BRD4169B_EFR32MG14P_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/BRD4250A_EFR32FG1P_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/BRD4253A_EFR32FG12P_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/BRD4256A_EFR32FG13P_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/BRD4257A_EFR32FG14P_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/SLSTK3301A_EFM32TG11_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/SLSTK3401A_EFM32PG1B_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/SLSTK3402A_EFM32PG12B_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_pcnt_extclk_single_underflow" description="This project demonstrates the external clock single input mode of the pulse counter with interrupts. BTN0 is used as the pulse counter clock in this example. The program requests an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_pcnt_extclk_single_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_extclk_single_underflow/SimplicityStudio/SLSTK3701A_EFM32GG11_pcnt_extclk_single_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/BRD4100A_EFR32BG1P_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/BRD4103A_EFR32BG12P_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/BRD4104A_EFR32BG13P_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/BRD4151A_EFR32MG1P_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/BRD4159A_EFR32MG13P_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/BRD4161A_EFR32MG12P_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/BRD4169B_EFR32MG14P_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/BRD4250A_EFR32FG1P_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/BRD4253A_EFR32FG12P_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/BRD4256A_EFR32FG13P_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/BRD4257A_EFR32FG14P_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/SLSTK3301A_EFM32TG11_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/SLSTK3401A_EFM32PG1B_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/SLSTK3402A_EFM32PG12B_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_pcnt_single_oversampling_overflow" description="This project demonstrates the single input oversampling mode using the LFA clock with interrupts. The program generates an interrupt  whenever the pulse counter detects the number of pulses that went above a certain threshold. The threshold is defined by the user. In this example, Push Button PB0 is used as the pulse counter input source. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_pcnt_single_oversampling_overflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_overflow/SimplicityStudio/SLSTK3701A_EFM32GG11_pcnt_single_oversampling_overflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/BRD4100A_EFR32BG1P_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/BRD4103A_EFR32BG12P_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/BRD4104A_EFR32BG13P_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/BRD4151A_EFR32MG1P_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/BRD4159A_EFR32MG13P_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/BRD4161A_EFR32MG12P_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/BRD4169B_EFR32MG14P_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/BRD4250A_EFR32FG1P_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/BRD4253A_EFR32FG12P_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/BRD4256A_EFR32FG13P_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/BRD4257A_EFR32FG14P_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/SLSTK3301A_EFM32TG11_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/SLSTK3401A_EFM32PG1B_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/SLSTK3402A_EFM32PG12B_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_pcnt_single_oversampling_underflow" description="This project demonstrates the single input oversampling mode of the pulse counter with interrupts. LFA clock is used as the pulse counter clock in this example. The program generates an interrupt whenever the pulse counter goes below zero. In this example, each press of Push Button PB0 will decrease the counter value by 1. The initial value of the counter and the reload value from the top register is set by the user. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_pcnt_single_oversampling_underflow"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_single_oversampling_underflow/SimplicityStudio/SLSTK3701A_EFM32GG11_pcnt_single_oversampling_underflow.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_pcnt_trigger_compare_clear_prs" description="This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter less than  or equal to the top value. Note the top value is set to 5 in this example. This feature is only for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_pcnt_trigger_compare_clear_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/BRD4100A_EFR32BG1P_pcnt_trigger_compare_clear_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_pcnt_trigger_compare_clear_prs" description="This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter less than  or equal to the top value. Note the top value is set to 5 in this example. This feature is only for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_pcnt_trigger_compare_clear_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/BRD4103A_EFR32BG12P_pcnt_trigger_compare_clear_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_pcnt_trigger_compare_clear_prs" description="This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter less than  or equal to the top value. Note the top value is set to 5 in this example. This feature is only for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_pcnt_trigger_compare_clear_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/BRD4104A_EFR32BG13P_pcnt_trigger_compare_clear_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_pcnt_trigger_compare_clear_prs" description="This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter less than  or equal to the top value. Note the top value is set to 5 in this example. This feature is only for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_pcnt_trigger_compare_clear_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/BRD4151A_EFR32MG1P_pcnt_trigger_compare_clear_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_pcnt_trigger_compare_clear_prs" description="This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter less than  or equal to the top value. Note the top value is set to 5 in this example. This feature is only for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_pcnt_trigger_compare_clear_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/BRD4159A_EFR32MG13P_pcnt_trigger_compare_clear_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_pcnt_trigger_compare_clear_prs" description="This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter less than  or equal to the top value. Note the top value is set to 5 in this example. This feature is only for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_pcnt_trigger_compare_clear_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/BRD4161A_EFR32MG12P_pcnt_trigger_compare_clear_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_pcnt_trigger_compare_clear_prs" description="This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter less than  or equal to the top value. Note the top value is set to 5 in this example. This feature is only for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_pcnt_trigger_compare_clear_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/BRD4169B_EFR32MG14P_pcnt_trigger_compare_clear_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_pcnt_trigger_compare_clear_prs" description="This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter less than  or equal to the top value. Note the top value is set to 5 in this example. This feature is only for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_pcnt_trigger_compare_clear_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/BRD4250A_EFR32FG1P_pcnt_trigger_compare_clear_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_pcnt_trigger_compare_clear_prs" description="This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter less than  or equal to the top value. Note the top value is set to 5 in this example. This feature is only for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_pcnt_trigger_compare_clear_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/BRD4253A_EFR32FG12P_pcnt_trigger_compare_clear_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_pcnt_trigger_compare_clear_prs" description="This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter less than  or equal to the top value. Note the top value is set to 5 in this example. This feature is only for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_pcnt_trigger_compare_clear_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/BRD4256A_EFR32FG13P_pcnt_trigger_compare_clear_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_pcnt_trigger_compare_clear_prs" description="This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter less than  or equal to the top value. Note the top value is set to 5 in this example. This feature is only for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_pcnt_trigger_compare_clear_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/BRD4257A_EFR32FG14P_pcnt_trigger_compare_clear_prs.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_pcnt_trigger_compare_clear_prs" description="This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter less than  or equal to the top value. Note the top value is set to 5 in this example. This feature is only for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_pcnt_trigger_compare_clear_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/SLSTK3301A_EFM32TG11_pcnt_trigger_compare_clear_prs.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_pcnt_trigger_compare_clear_prs" description="This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter less than  or equal to the top value. Note the top value is set to 5 in this example. This feature is only for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_pcnt_trigger_compare_clear_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/SLSTK3401A_EFM32PG1B_pcnt_trigger_compare_clear_prs.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_pcnt_trigger_compare_clear_prs" description="This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter less than  or equal to the top value. Note the top value is set to 5 in this example. This feature is only for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_pcnt_trigger_compare_clear_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/SLSTK3402A_EFM32PG12B_pcnt_trigger_compare_clear_prs.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_pcnt_trigger_compare_clear_prs" description="This project demonstrates the trigger compare and clear functionality of the pulse counter using interrupts. The program requests an interrupt  whenever the pulse counter clock (PRS in this example) triggers a compare and clear command and the result is the counter less than  or equal to the top value. Note the top value is set to 5 in this example. This feature is only for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_pcnt_trigger_compare_clear_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PCNT"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/pcnt/pcnt_trigger_compare_clear_prs/SimplicityStudio/SLSTK3701A_EFM32GG11_pcnt_trigger_compare_clear_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT option to make Channel 0 AND with Channel 1, or you can use the OR_PREV option to make Channel 1 OR with Channel 0. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/prs/logic_unit/SimplicityStudio/BRD4100A_EFR32BG1P_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT option to make Channel 0 AND with Channel 1, or you can use the OR_PREV option to make Channel 1 OR with Channel 0. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/prs/logic_unit/SimplicityStudio/BRD4103A_EFR32BG12P_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT option to make Channel 0 AND with Channel 1, or you can use the OR_PREV option to make Channel 1 OR with Channel 0. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/prs/logic_unit/SimplicityStudio/BRD4104A_EFR32BG13P_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT option to make Channel 0 AND with Channel 1, or you can use the OR_PREV option to make Channel 1 OR with Channel 0. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/prs/logic_unit/SimplicityStudio/BRD4151A_EFR32MG1P_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT option to make Channel 0 AND with Channel 1, or you can use the OR_PREV option to make Channel 1 OR with Channel 0. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/prs/logic_unit/SimplicityStudio/BRD4159A_EFR32MG13P_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT option to make Channel 0 AND with Channel 1, or you can use the OR_PREV option to make Channel 1 OR with Channel 0. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/prs/logic_unit/SimplicityStudio/BRD4161A_EFR32MG12P_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT option to make Channel 0 AND with Channel 1, or you can use the OR_PREV option to make Channel 1 OR with Channel 0. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/prs/logic_unit/SimplicityStudio/BRD4169A_EFR32MG14P_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT option to make Channel 0 AND with Channel 1, or you can use the OR_PREV option to make Channel 1 OR with Channel 0. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/prs/logic_unit/SimplicityStudio/BRD4250A_EFR32FG1P_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT option to make Channel 0 AND with Channel 1, or you can use the OR_PREV option to make Channel 1 OR with Channel 0. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/prs/logic_unit/SimplicityStudio/BRD4253A_EFR32FG12P_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT option to make Channel 0 AND with Channel 1, or you can use the OR_PREV option to make Channel 1 OR with Channel 0. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/prs/logic_unit/SimplicityStudio/BRD4256A_EFR32FG13P_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT option to make Channel 0 AND with Channel 1, or you can use the OR_PREV option to make Channel 1 OR with Channel 0. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/prs/logic_unit/SimplicityStudio/BRD4257A_EFR32FG14P_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT option to make Channel 0 AND with Channel 1, or you can use the OR_PREV option to make Channel 1 OR with Channel 0. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/prs/logic_unit/SimplicityStudio/SLSTK3301A_EFM32TG11B_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT option to make Channel 0 AND with Channel 1, or you can use the OR_PREV option to make Channel 1 OR with Channel 0. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/prs/logic_unit/SimplicityStudio/SLSTK3401A_EFM32PG1B_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT option to make Channel 0 AND with Channel 1, or you can use the OR_PREV option to make Channel 1 OR with Channel 0. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/prs/logic_unit/SimplicityStudio/SLSTK3402A_EFM32PG12B_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are routed to output pins (usually LEDs, but not always.  We'll  refer to these pins as OUT0 and OUT1).  There are two configurations for this example: You can use the AND_NEXT option to make Channel 0 AND with Channel 1, or you can use the OR_PREV option to make Channel 1 OR with Channel 0. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/prs/logic_unit/SimplicityStudio/SLSTK3701A_EFM32GG11B_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_get_reset_cause/SimplicityStudio/BRD4100A_EFR32BG1P_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_get_reset_cause/SimplicityStudio/BRD4103A_EFR32BG12P_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_get_reset_cause/SimplicityStudio/BRD4104A_EFR32BG13P_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_get_reset_cause/SimplicityStudio/BRD4151A_EFR32MG1P_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_get_reset_cause/SimplicityStudio/BRD4159A_EFR32MG13P_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_get_reset_cause/SimplicityStudio/BRD4161A_EFR32MG12P_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_get_reset_cause/SimplicityStudio/BRD4169B_EFR32MG14P_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_get_reset_cause/SimplicityStudio/BRD4250A_EFR32FG1P_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_get_reset_cause/SimplicityStudio/BRD4253A_EFR32FG12P_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_get_reset_cause/SimplicityStudio/BRD4256A_EFR32FG13P_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_get_reset_cause/SimplicityStudio/BRD4257A_EFR32FG14P_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_get_reset_cause/SimplicityStudio/SLSTK3301A_EFM32TG11_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_get_reset_cause/SimplicityStudio/SLSTK3401A_EFM32PG1B_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_get_reset_cause/SimplicityStudio/SLSTK3402A_EFM32PG12B_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_rmu_get_reset_cause" description="This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used to initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source.  ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_rmu_get_reset_cause"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_get_reset_cause/SimplicityStudio/SLSTK3701A_EFM32GG11_rmu_get_reset_cause.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_rmu_pin_reset_extended" description="This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged.  ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_rmu_pin_reset_extended"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_pin_reset_extended/SimplicityStudio/BRD4100A_EFR32BG1P_rmu_pin_reset_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_rmu_pin_reset_extended" description="This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged.  ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_rmu_pin_reset_extended"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_pin_reset_extended/SimplicityStudio/BRD4103A_EFR32BG12P_rmu_pin_reset_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_rmu_pin_reset_extended" description="This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged.  ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_rmu_pin_reset_extended"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_pin_reset_extended/SimplicityStudio/BRD4104A_EFR32BG13P_rmu_pin_reset_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_rmu_pin_reset_extended" description="This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged.  ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_rmu_pin_reset_extended"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_pin_reset_extended/SimplicityStudio/BRD4151A_EFR32MG1P_rmu_pin_reset_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_rmu_pin_reset_extended" description="This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged.  ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_rmu_pin_reset_extended"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_pin_reset_extended/SimplicityStudio/BRD4159A_EFR32MG13P_rmu_pin_reset_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_rmu_pin_reset_extended" description="This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged.  ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_rmu_pin_reset_extended"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_pin_reset_extended/SimplicityStudio/BRD4161A_EFR32MG12P_rmu_pin_reset_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_rmu_pin_reset_extended" description="This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged.  ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_rmu_pin_reset_extended"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_pin_reset_extended/SimplicityStudio/BRD4169B_EFR32MG14P_rmu_pin_reset_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_rmu_pin_reset_extended" description="This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged.  ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_rmu_pin_reset_extended"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_pin_reset_extended/SimplicityStudio/BRD4250A_EFR32FG1P_rmu_pin_reset_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_rmu_pin_reset_extended" description="This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged.  ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_rmu_pin_reset_extended"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_pin_reset_extended/SimplicityStudio/BRD4253A_EFR32FG12P_rmu_pin_reset_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_rmu_pin_reset_extended" description="This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged.  ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_rmu_pin_reset_extended"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_pin_reset_extended/SimplicityStudio/BRD4256A_EFR32FG13P_rmu_pin_reset_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_rmu_pin_reset_extended" description="This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged.  ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_rmu_pin_reset_extended"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_pin_reset_extended/SimplicityStudio/BRD4257A_EFR32FG14P_rmu_pin_reset_extended.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_rmu_pin_reset_extended" description="This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged.  ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_rmu_pin_reset_extended"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_pin_reset_extended/SimplicityStudio/SLSTK3301A_EFM32TG11_rmu_pin_reset_extended.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_rmu_pin_reset_extended" description="This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged.  ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_rmu_pin_reset_extended"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_pin_reset_extended/SimplicityStudio/SLSTK3401A_EFM32PG1B_rmu_pin_reset_extended.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_rmu_pin_reset_extended" description="This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged.  ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_rmu_pin_reset_extended"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_pin_reset_extended/SimplicityStudio/SLSTK3402A_EFM32PG12B_rmu_pin_reset_extended.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_rmu_pin_reset_extended" description="This project showcases the Extended reset capability of the series 1 starter kits. In the extended reset mode, after a soft reset,  everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged.  ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_rmu_pin_reset_extended"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_pin_reset_extended/SimplicityStudio/SLSTK3701A_EFM32GG11_rmu_pin_reset_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_rmu_wdog_limited" description="This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_rmu_wdog_limited"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_wdog_limited/SimplicityStudio/BRD4100A_EFR32BG1P_rmu_wdog_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_rmu_wdog_limited" description="This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_rmu_wdog_limited"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_wdog_limited/SimplicityStudio/BRD4103A_EFR32BG12P_rmu_wdog_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_rmu_wdog_limited" description="This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_rmu_wdog_limited"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_wdog_limited/SimplicityStudio/BRD4104A_EFR32BG13P_rmu_wdog_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_rmu_wdog_limited" description="This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_rmu_wdog_limited"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_wdog_limited/SimplicityStudio/BRD4151A_EFR32MG1P_rmu_wdog_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_rmu_wdog_limited" description="This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_rmu_wdog_limited"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_wdog_limited/SimplicityStudio/BRD4159A_EFR32MG13P_rmu_wdog_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_rmu_wdog_limited" description="This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_rmu_wdog_limited"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_wdog_limited/SimplicityStudio/BRD4161A_EFR32MG12P_rmu_wdog_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_rmu_wdog_limited" description="This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_rmu_wdog_limited"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_wdog_limited/SimplicityStudio/BRD4169B_EFR32MG14P_rmu_wdog_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_rmu_wdog_limited" description="This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_rmu_wdog_limited"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_wdog_limited/SimplicityStudio/BRD4250A_EFR32FG1P_rmu_wdog_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_rmu_wdog_limited" description="This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_rmu_wdog_limited"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_wdog_limited/SimplicityStudio/BRD4253A_EFR32FG12P_rmu_wdog_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_rmu_wdog_limited" description="This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_rmu_wdog_limited"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_wdog_limited/SimplicityStudio/BRD4256A_EFR32FG13P_rmu_wdog_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_rmu_wdog_limited" description="This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_rmu_wdog_limited"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_wdog_limited/SimplicityStudio/BRD4257A_EFR32FG14P_rmu_wdog_limited.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_rmu_wdog_limited" description="This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_rmu_wdog_limited"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_wdog_limited/SimplicityStudio/SLSTK3301A_EFM32TG11_rmu_wdog_limited.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_rmu_wdog_limited" description="This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_rmu_wdog_limited"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_wdog_limited/SimplicityStudio/SLSTK3401A_EFM32PG1B_rmu_wdog_limited.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_rmu_wdog_limited" description="This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_rmu_wdog_limited"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_wdog_limited/SimplicityStudio/SLSTK3402A_EFM32PG12B_rmu_wdog_limited.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_rmu_wdog_limited" description="This project showcases the Limited Reset capability of series 1 starter kits. In the Limited Reset mode, after a soft reset, everything is reset with the exception of Cryotimer, Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_rmu_wdog_limited"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rmu/rmu_wdog_limited/SimplicityStudio/SLSTK3701A_EFM32GG11_rmu_wdog_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_rtcc_alarm_set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_rtcc_alarm_set"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4100A_EFR32BG1P_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_rtcc_alarm_set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_rtcc_alarm_set"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4103A_EFR32BG12P_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_rtcc_alarm_set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_rtcc_alarm_set"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4104A_EFR32BG13_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_rtcc_alarm_set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_rtcc_alarm_set"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4151A_EFR32MG1P_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13_rtcc_alarm_set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13_rtcc_alarm_set"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4159A_EFR32MG13_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_rtcc_alarm_set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_rtcc_alarm_set"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4161A_EFR32MG12P_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14_rtcc_alarm_set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14_rtcc_alarm_set"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4169B_EFR32MG14_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_rtcc_alarm_set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_rtcc_alarm_set"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4250A_EFR32FG1P_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_rtcc_alarm_set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_rtcc_alarm_set"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4253A_EFR32FG12P_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13_rtcc_alarm_set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13_rtcc_alarm_set"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4256A_EFR32FG13_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_rtcc_alarm_set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_rtcc_alarm_set"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4257A_EFR32FG14_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_rtcc_alarm_set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_rtcc_alarm_set"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_alarm_set/SimplicityStudio/SLSTK3301A_EFM32TG11_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_rtcc_alarm_set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_rtcc_alarm_set"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_alarm_set/SimplicityStudio/SLSTK3401A_EFM32PG1B_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_rtcc_alarm_set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_rtcc_alarm_set"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_alarm_set/SimplicityStudio/SLSTK3402A_EFM32PG12B_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_rtcc_alarm_set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_rtcc_alarm_set"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_alarm_set/SimplicityStudio/SLSTK3701A_EFM32GG11_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_rtcc_wake_em4" description="This project demonstrates use of the RTCC to wake from EM4. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_rtcc_wake_em4"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_em4_wake/SimplicityStudio/BRD4103A_EFR32BG12P_rtcc_wake_em4.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_rtcc_wake_em4" description="This project demonstrates use of the RTCC to wake from EM4. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_rtcc_wake_em4"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_em4_wake/SimplicityStudio/BRD4104A_EFR32BG13_rtcc_wake_em4.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13_rtcc_wake_em4" description="This project demonstrates use of the RTCC to wake from EM4. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13_rtcc_wake_em4"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_em4_wake/SimplicityStudio/BRD4159A_EFR32MG13_rtcc_wake_em4.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_rtcc_wake_em4" description="This project demonstrates use of the RTCC to wake from EM4. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_rtcc_wake_em4"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_em4_wake/SimplicityStudio/BRD4161A_EFR32MG12P_rtcc_wake_em4.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14_rtcc_wake_em4" description="This project demonstrates use of the RTCC to wake from EM4. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14_rtcc_wake_em4"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_em4_wake/SimplicityStudio/BRD4169B_EFR32MG14_rtcc_wake_em4.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_rtcc_wake_em4" description="This project demonstrates use of the RTCC to wake from EM4. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_rtcc_wake_em4"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_em4_wake/SimplicityStudio/BRD4253A_EFR32FG12P_rtcc_wake_em4.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13_rtcc_wake_em4" description="This project demonstrates use of the RTCC to wake from EM4. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13_rtcc_wake_em4"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_em4_wake/SimplicityStudio/BRD4256A_EFR32FG13_rtcc_wake_em4.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_rtcc_wake_em4" description="This project demonstrates use of the RTCC to wake from EM4. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_rtcc_wake_em4"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_em4_wake/SimplicityStudio/BRD4257A_EFR32FG14_rtcc_wake_em4.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_rtcc_wake_em4" description="This project demonstrates use of the RTCC to wake from EM4. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_rtcc_wake_em4"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_em4_wake/SimplicityStudio/SLSTK3301A_EFM32TG11_rtcc_wake_em4.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_rtcc_wake_em4" description="This project demonstrates use of the RTCC to wake from EM4. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_rtcc_wake_em4"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_em4_wake/SimplicityStudio/SLSTK3402A_EFM32PG12B_rtcc_wake_em4.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_rtcc_wake_em4" description="This project demonstrates use of the RTCC to wake from EM4. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_rtcc_wake_em4"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_em4_wake/SimplicityStudio/SLSTK3701A_EFM32GG11_rtcc_wake_em4.slsproj"/>
  </descriptors>
  <descriptors label="SLTB009A_EFM32GG12_rtcc_wake_em4" description="This project demonstrates use of the RTCC to wake from EM4. ">
    <properties key="core.boardCompatibility" value="brd2207a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg12.*"/>
    <properties key="defaultName" value="SLTB009A_EFM32GG12_rtcc_wake_em4"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/rtcc/rtcc_em4_wake/SimplicityStudio/SLTB009A_EFM32GG12_rtcc_wake_em4.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/adjust/SimplicityStudio/BRD4100A_EFR32BG1P_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/adjust/SimplicityStudio/BRD4103A_EFR32BG12P_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/adjust/SimplicityStudio/BRD4104A_EFR32BG13P_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/adjust/SimplicityStudio/BRD4151A_EFR32MG1P_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/adjust/SimplicityStudio/BRD4159A_EFR32MG13P_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/adjust/SimplicityStudio/BRD4161A_EFR32MG12P_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/adjust/SimplicityStudio/BRD4169B_EFR32MG14P_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/adjust/SimplicityStudio/BRD4250A_EFR32FG1P_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/adjust/SimplicityStudio/BRD4253A_EFR32FG12P_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/adjust/SimplicityStudio/BRD4256A_EFR32FG13P_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/adjust/SimplicityStudio/BRD4257A_EFR32FG14P_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/adjust/SimplicityStudio/SLSTK3301A_EFM32TG11B_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/adjust/SimplicityStudio/SLSTK3401A_EFM32PG1B_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/adjust/SimplicityStudio/SLSTK3402A_EFM32PG12B_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_servo_adjust" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. Depending on the board, one GPIO button will  increment the duty cycle and the other will decrement the duty cycle in 1% increments.  TIMER is initialized for PWM on Compare/Capture channel 0 which is routed to  the GPIO Pin specified below. In PWM mode, overflow events set the output pin,  while compare events clear the pin. Thus the overflow value is set to output  the desired signal frequency, while the CCV is set to control the duty cycle.  The duty cycle is altered by writing to the CCVB register, which safely updates  the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_servo_adjust"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/adjust/SimplicityStudio/SLSTK3701A_EFM32GG11B_servo_adjust.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/sweep/SimplicityStudio/BRD4100A_EFR32BG1P_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/sweep/SimplicityStudio/BRD4103A_EFR32BG12P_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/sweep/SimplicityStudio/BRD4104A_EFR32BG13P_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/sweep/SimplicityStudio/BRD4151A_EFR32MG1P_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/sweep/SimplicityStudio/BRD4159A_EFR32MG13P_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/sweep/SimplicityStudio/BRD4161A_EFR32MG12P_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/sweep/SimplicityStudio/BRD4169B_EFR32MG14P_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/sweep/SimplicityStudio/BRD4250A_EFR32FG1P_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/sweep/SimplicityStudio/BRD4253A_EFR32FG12P_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/sweep/SimplicityStudio/BRD4256A_EFR32FG13P_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/sweep/SimplicityStudio/BRD4257A_EFR32FG14P_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/sweep/SimplicityStudio/SLSTK3301A_EFM32TG11B_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/sweep/SimplicityStudio/SLSTK3401A_EFM32PG1B_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/sweep/SimplicityStudio/SLSTK3402A_EFM32PG12B_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_servo_sweep" description="This project demonstrates controlling a servo using pulse width modulation  generated by the TIMER module. The PWM duty sweeps between 0 and 20% to  show the servo sweeping through angles. TIMER is initialized for PWM on  Compare/Capture channel 0 which is routed to the GPIO Pin specified below.  In PWM mode, overflow events set the output pin, while compare events clear  the pin. Thus the overflow value is set to output the desired signal frequency,  while the CCV is set to control the duty cycle. The duty cycle is altered by  writing to the CCVB register, which safely updates the compare value on the  next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_servo_sweep"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="SERVO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/servo/sweep/SimplicityStudio/SLSTK3701A_EFM32GG11B_servo_sweep.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_dma_edge_capture/SimplicityStudio/BRD4100A_EFR32BG1P_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_dma_edge_capture/SimplicityStudio/BRD4103A_EFR32BG12P_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_dma_edge_capture/SimplicityStudio/BRD4104A_EFR32BG13P_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_dma_edge_capture/SimplicityStudio/BRD4151A_EFR32MG1P_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_dma_edge_capture/SimplicityStudio/BRD4159A_EFR32MG13P_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_dma_edge_capture/SimplicityStudio/BRD4161A_EFR32MG12P_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_dma_edge_capture/SimplicityStudio/BRD4169B_EFR32MG14P_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_dma_edge_capture/SimplicityStudio/BRD4250A_EFR32FG1P_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_dma_edge_capture/SimplicityStudio/BRD4253A_EFR32FG12P_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_dma_edge_capture/SimplicityStudio/BRD4256A_EFR32FG13P_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_dma_edge_capture/SimplicityStudio/BRD4257A_EFR32FG14P_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_dma_edge_capture/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_dma_edge_capture/SimplicityStudio/SLSTK3401A_EFM32PG1B_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_dma_edge_capture/SimplicityStudio/SLSTK3402A_EFM32PG12B_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_timer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by TIMER1 CC0 are transferred to a fixed length buffer by the DMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_dma_edge_capture/SimplicityStudio/SLSTK3701A_EFM32GG11B_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_frequency_generation/SimplicityStudio/BRD4100A_EFR32BG1P_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_frequency_generation/SimplicityStudio/BRD4103A_EFR32BG12P_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_frequency_generation/SimplicityStudio/BRD4104A_EFR32BG13P_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_frequency_generation/SimplicityStudio/BRD4151A_EFR32MG1P_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_frequency_generation/SimplicityStudio/BRD4159A_EFR32MG13P_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_frequency_generation/SimplicityStudio/BRD4161A_EFR32MG12P_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_frequency_generation/SimplicityStudio/BRD4169B_EFR32MG14P_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_frequency_generation/SimplicityStudio/BRD4250A_EFR32FG1P_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_frequency_generation/SimplicityStudio/BRD4253A_EFR32FG12P_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_frequency_generation/SimplicityStudio/BRD4256A_EFR32FG13P_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_frequency_generation/SimplicityStudio/BRD4257A_EFR32FG14P_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_frequency_generation/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_frequency_generation/SimplicityStudio/SLSTK3401A_EFM32PG1B_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_frequency_generation/SimplicityStudio/SLSTK3402A_EFM32PG12B_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to a GPIO pin. The TOP value register is set such that on each  overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_frequency_generation/SimplicityStudio/SLSTK3701A_EFM32GG11B_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_interrupt/SimplicityStudio/BRD4169B_EFR32MG14P_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11B_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_polled/SimplicityStudio/BRD4100A_EFR32BG1P_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_polled/SimplicityStudio/BRD4103A_EFR32BG12P_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_polled/SimplicityStudio/BRD4104A_EFR32BG13P_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_polled/SimplicityStudio/BRD4151A_EFR32MG1P_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_polled/SimplicityStudio/BRD4159A_EFR32MG13P_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_polled/SimplicityStudio/BRD4161A_EFR32MG12P_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_polled/SimplicityStudio/BRD4169B_EFR32MG14P_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_polled/SimplicityStudio/BRD4250A_EFR32FG1P_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_polled/SimplicityStudio/BRD4253A_EFR32FG12P_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_polled/SimplicityStudio/BRD4256A_EFR32FG13P_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_polled/SimplicityStudio/BRD4257A_EFR32FG14P_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_polled/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_polled/SimplicityStudio/SLSTK3401A_EFM32PG1B_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_timer_input_capture_polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_timer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_input_capture_polled/SimplicityStudio/SLSTK3701A_EFM32GG11B_timer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_interrupt/SimplicityStudio/BRD4169B_EFR32MG14P_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11B_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_polled/SimplicityStudio/BRD4100A_EFR32BG1P_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_polled/SimplicityStudio/BRD4103A_EFR32BG12P_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_polled/SimplicityStudio/BRD4104A_EFR32BG13P_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_polled/SimplicityStudio/BRD4151A_EFR32MG1P_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_polled/SimplicityStudio/BRD4159A_EFR32MG13P_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_polled/SimplicityStudio/BRD4161A_EFR32MG12P_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_polled/SimplicityStudio/BRD4169B_EFR32MG14P_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_polled/SimplicityStudio/BRD4250A_EFR32FG1P_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_polled/SimplicityStudio/BRD4253A_EFR32FG12P_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_polled/SimplicityStudio/BRD4256A_EFR32FG13P_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_polled/SimplicityStudio/BRD4257A_EFR32FG14P_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_polled/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_polled/SimplicityStudio/SLSTK3401A_EFM32PG1B_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_period_measurement_polled/SimplicityStudio/SLSTK3701A_EFM32GG11B_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pulse_capture/SimplicityStudio/BRD4100A_EFR32BG1P_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pulse_capture/SimplicityStudio/BRD4103A_EFR32BG12P_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pulse_capture/SimplicityStudio/BRD4104A_EFR32BG13P_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pulse_capture/SimplicityStudio/BRD4151A_EFR32MG1P_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pulse_capture/SimplicityStudio/BRD4159A_EFR32MG13P_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pulse_capture/SimplicityStudio/BRD4161A_EFR32MG12P_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pulse_capture/SimplicityStudio/BRD4169B_EFR32MG14P_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pulse_capture/SimplicityStudio/BRD4250A_EFR32FG1P_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pulse_capture/SimplicityStudio/BRD4253A_EFR32FG12P_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pulse_capture/SimplicityStudio/BRD4256A_EFR32FG13P_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pulse_capture/SimplicityStudio/BRD4257A_EFR32FG14P_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pulse_capture/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pulse_capture/SimplicityStudio/SLSTK3401A_EFM32PG1B_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pulse_capture/SimplicityStudio/SLSTK3402A_EFM32PG12B_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pulse_capture/SimplicityStudio/SLSTK3701A_EFM32GG11B_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_dma/SimplicityStudio/BRD4100A_EFR32BG1P_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_dma/SimplicityStudio/BRD4103A_EFR32BG12P_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_dma/SimplicityStudio/BRD4104A_EFR32BG13P_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_dma/SimplicityStudio/BRD4151A_EFR32MG1P_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_dma/SimplicityStudio/BRD4159A_EFR32MG13P_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_dma/SimplicityStudio/BRD4161A_EFR32MG12P_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_dma/SimplicityStudio/BRD4169B_EFR32MG14P_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_dma/SimplicityStudio/BRD4250A_EFR32FG1P_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_dma/SimplicityStudio/BRD4253A_EFR32FG12P_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_dma/SimplicityStudio/BRD4256A_EFR32FG13P_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_dma/SimplicityStudio/BRD4257A_EFR32FG14P_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_dma/SimplicityStudio/SLSTK3401A_EFM32PG1B_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_dma/SimplicityStudio/SLSTK3402A_EFM32PG12B_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0/1 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_dma/SimplicityStudio/SLSTK3701A_EFM32GG11B_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_interrupt/SimplicityStudio/BRD4169B_EFR32MG14P_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_pwm_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11B_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_edge_output_compare/SimplicityStudio/BRD4100A_EFR32BG1P_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_edge_output_compare/SimplicityStudio/BRD4103A_EFR32BG12P_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_edge_output_compare/SimplicityStudio/BRD4104A_EFR32BG13P_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_edge_output_compare/SimplicityStudio/BRD4151A_EFR32MG1P_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_edge_output_compare/SimplicityStudio/BRD4159A_EFR32MG13P_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_edge_output_compare/SimplicityStudio/BRD4161A_EFR32MG12P_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_edge_output_compare/SimplicityStudio/BRD4169B_EFR32MG14P_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_edge_output_compare/SimplicityStudio/BRD4250A_EFR32FG1P_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_edge_output_compare/SimplicityStudio/BRD4253A_EFR32FG12P_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_edge_output_compare/SimplicityStudio/BRD4256A_EFR32FG13P_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_edge_output_compare/SimplicityStudio/BRD4257A_EFR32FG14P_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_edge_output_compare/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_edge_output_compare/SimplicityStudio/SLSTK3401A_EFM32PG1B_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_edge_output_compare/SimplicityStudio/SLSTK3402A_EFM32PG12B_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_edge_output_compare/SimplicityStudio/SLSTK3701A_EFM32GG11B_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/BRD4100A_EFR32BG1P_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/BRD4103A_EFR32BG12P_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/BRD4104A_EFR32BG13P_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/BRD4151A_EFR32MG1P_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/BRD4159A_EFR32MG13P_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/BRD4161A_EFR32MG12P_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/BRD4169B_EFR32MG14P_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/BRD4250A_EFR32FG1P_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/BRD4253A_EFR32FG12P_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/BRD4256A_EFR32FG13P_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/BRD4257A_EFR32FG14P_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/SLSTK3401A_EFM32PG1B_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/SLSTK3402A_EFM32PG12B_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the DMA/LDMA. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_dma/SimplicityStudio/SLSTK3701A_EFM32GG11B_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/BRD4169B_EFR32MG14P_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11B_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/BRD4100A_EFR32BG1P_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/BRD4103A_EFR32BG12P_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/BRD4104A_EFR32BG13P_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/BRD4151A_EFR32MG1P_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/BRD4159A_EFR32MG13P_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/BRD4161A_EFR32MG12P_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/BRD4169B_EFR32MG14P_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/BRD4250A_EFR32FG1P_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/BRD4253A_EFR32FG12P_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/BRD4256A_EFR32FG13P_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/BRD4257A_EFR32FG14P_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/SLSTK3301A_EFM32TG11B_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/SLSTK3401A_EFM32PG1B_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/timer/timer_single_pulse_generation_polled/SimplicityStudio/SLSTK3701A_EFM32GG11B_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_interrupt/SimplicityStudio/BRD4104A_EFR32BG13_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_interrupt/SimplicityStudio/BRD4159A_EFR32MG13_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_interrupt/SimplicityStudio/BRD4169B_EFR32MG14_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_interrupt/SimplicityStudio/BRD4256A_EFR32FG13_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_interrupt/SimplicityStudio/BRD4257A_EFR32FG14_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  Depending on the device, USART0, USART1, or USART4 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_polled/SimplicityStudio/BRD4100A_EFR32BG1P_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_polled/SimplicityStudio/BRD4103A_EFR32BG12P_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_polled/SimplicityStudio/BRD4104A_EFR32BG13_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_polled/SimplicityStudio/BRD4151A_EFR32MG1P_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_polled/SimplicityStudio/BRD4159A_EFR32MG13_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_polled/SimplicityStudio/BRD4161A_EFR32MG12P_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_polled/SimplicityStudio/BRD4169B_EFR32MG14_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_polled/SimplicityStudio/BRD4250A_EFR32FG1P_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_polled/SimplicityStudio/BRD4253A_EFR32FG12P_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_polled/SimplicityStudio/BRD4256A_EFR32FG13_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_polled/SimplicityStudio/BRD4257A_EFR32FG14_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_polled/SimplicityStudio/SLSTK3301A_EFM32TG11_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_polled/SimplicityStudio/SLSTK3401A_EFM32PG1B_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_async_polled" description="This example echoes back lines sent to it over the virtual com port by the user using a baudrate of 115200. Once a new line or 80 characters are received, the RxBuffer is echoed back.  ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/async_polled/SimplicityStudio/SLSTK3701A_EFM32GG11_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFM32BG1_gpio_prs_ldma_usart" description="This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFM32BG1_gpio_prs_ldma_usart"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/gpio_prs_ldma_usart/SimplicityStudio/BRD4100A_EFM32BG1_gpio_prs_ldma_usart.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12_gpio_prs_ldma_usart" description="This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12_gpio_prs_ldma_usart"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/gpio_prs_ldma_usart/SimplicityStudio/BRD4103A_EFR32BG12_gpio_prs_ldma_usart.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_gpio_prs_ldma_usart" description="This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_gpio_prs_ldma_usart"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/gpio_prs_ldma_usart/SimplicityStudio/BRD4104A_EFR32BG13_gpio_prs_ldma_usart.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_gpio_prs_ldma_usart" description="This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_gpio_prs_ldma_usart"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/gpio_prs_ldma_usart/SimplicityStudio/BRD4151A_EFR32MG1P_gpio_prs_ldma_usart.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13_gpio_prs_ldma_usart" description="This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13_gpio_prs_ldma_usart"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/gpio_prs_ldma_usart/SimplicityStudio/BRD4159A_EFR32MG13_gpio_prs_ldma_usart.slsproj"/>
  </descriptors>
  <descriptors label="BRD4164A_EFM32MG12_gpio_prs_ldma_usart" description="This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4164a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4164A_EFM32MG12_gpio_prs_ldma_usart"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/gpio_prs_ldma_usart/SimplicityStudio/BRD4164A_EFM32MG12_gpio_prs_ldma_usart.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14_gpio_prs_ldma_usart" description="This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14_gpio_prs_ldma_usart"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/gpio_prs_ldma_usart/SimplicityStudio/BRD4169B_EFR32MG14_gpio_prs_ldma_usart.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFM32FG1_gpio_prs_ldma_usart" description="This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFM32FG1_gpio_prs_ldma_usart"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/gpio_prs_ldma_usart/SimplicityStudio/BRD4250A_EFM32FG1_gpio_prs_ldma_usart.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12_gpio_prs_ldma_usart" description="This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12_gpio_prs_ldma_usart"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/gpio_prs_ldma_usart/SimplicityStudio/BRD4253A_EFR32FG12_gpio_prs_ldma_usart.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13_gpio_prs_ldma_usart" description="This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13_gpio_prs_ldma_usart"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/gpio_prs_ldma_usart/SimplicityStudio/BRD4256A_EFR32FG13_gpio_prs_ldma_usart.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_gpio_prs_ldma_usart" description="This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_gpio_prs_ldma_usart"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/gpio_prs_ldma_usart/SimplicityStudio/BRD4257A_EFR32FG14_gpio_prs_ldma_usart.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_gpio_prs_ldma_usart" description="This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_gpio_prs_ldma_usart"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/gpio_prs_ldma_usart/SimplicityStudio/SLSTK3301A_EFM32TG11_gpio_prs_ldma_usart.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1_gpio_prs_ldma_usart" description="This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1_gpio_prs_ldma_usart"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/gpio_prs_ldma_usart/SimplicityStudio/SLSTK3401A_EFM32PG1_gpio_prs_ldma_usart.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12_gpio_prs_ldma_usart" description="This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12_gpio_prs_ldma_usart"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/gpio_prs_ldma_usart/SimplicityStudio/SLSTK3402A_EFM32PG12_gpio_prs_ldma_usart.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_gpio_prs_ldma_usart" description="This example demonstrates using LDMA with PRS where USART packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_gpio_prs_ldma_usart"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/gpio_prs_ldma_usart/SimplicityStudio/SLSTK3701A_EFM32GG11_gpio_prs_ldma_usart.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_master/SimplicityStudio/BRD4100A_EFR32BG1P_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_master/SimplicityStudio/BRD4103A_EFR32BG12_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_master/SimplicityStudio/BRD4104A_EFR32BG13_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_master/SimplicityStudio/BRD4151A_EFR32MG1P_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_master/SimplicityStudio/BRD4159A_EFR32MG13_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4164A_EFR32MG12_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4164a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4164A_EFR32MG12_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_master/SimplicityStudio/BRD4164A_EFR32MG12_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_master/SimplicityStudio/BRD4169B_EFR32MG14_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_master/SimplicityStudio/BRD4250A_EFR32FG1P_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_master/SimplicityStudio/BRD4253A_EFR32FG12_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_master/SimplicityStudio/BRD4256A_EFR32FG13_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_master/SimplicityStudio/BRD4257A_EFR32FG14_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_master/SimplicityStudio/SLSTK3301A_EFM32TG11_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_master/SimplicityStudio/SLSTK3401A_EFM32PG1B_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_master/SimplicityStudio/SLSTK3402A_EFM32PG12_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_spi_master_dma" description="This example demonstrates using DMA with SPI as the master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_master/SimplicityStudio/SLSTK3701A_EFM32GG11_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_slave/SimplicityStudio/BRD4100A_EFR32BG1P_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_slave/SimplicityStudio/BRD4103A_EFR32BG12_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_slave/SimplicityStudio/BRD4104A_EFR32BG13_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_slave/SimplicityStudio/BRD4151A_EFR32MG1P_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_slave/SimplicityStudio/BRD4159A_EFR32MG13_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4164A_EFR32MG12_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4164a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4164A_EFR32MG12_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_slave/SimplicityStudio/BRD4164A_EFR32MG12_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_slave/SimplicityStudio/BRD4169B_EFR32MG14_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_slave/SimplicityStudio/BRD4250A_EFR32FG1P_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_slave/SimplicityStudio/BRD4253A_EFR32FG12P_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_slave/SimplicityStudio/BRD4256A_EFR32FG13P_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_slave/SimplicityStudio/BRD4257A_EFR32FG14P_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_slave/SimplicityStudio/SLSTK3301A_EFM32TG11_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_slave/SimplicityStudio/SLSTK3401A_EFM32PG1B_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_slave/SimplicityStudio/SLSTK3402A_EFM32PG12_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_spi_slave_dma" description="This example demonstrates using DMA with SPI as a slave. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_dma_slave/SimplicityStudio/SLSTK3701A_EFM32GG11_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/BRD4100A_EFR32BG1P_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/BRD4103A_EFR32BG12_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/BRD4104A_EFR32BG13_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/BRD4151A_EFR32MG1P_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/BRD4159A_EFR32MG13_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="BRD4164A_EFR32MG12_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4164a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4164A_EFR32MG12_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/BRD4164A_EFR32MG12_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/BRD4169B_EFR32MG14_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/BRD4250A_EFR32FG1P_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/BRD4253A_EFR32FG12_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/BRD4256A_EFR32FG13_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/BRD4257A_EFR32FG14_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/SLSTK3301A_EFM32TG11_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/SLSTK3401A_EFM32PG1B_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/SLSTK3402A_EFM32PG12_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_spi_master_dma_prs_gpio" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered every push of Push Button 0. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_spi_master_dma_prs_gpio"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_dma_prs_gpio/SimplicityStudio/SLSTK3701A_EFM32GG11_spi_master_dma_prs_gpio.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4100A_EFR32BG1_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4103A_EFR32BG12_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4104A_EFR32BG13_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4151A_EFR32MG1_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4158A_EFR32MG13_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4158a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4158A_EFR32MG13_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4158A_EFR32MG13_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4159A_EFR32MG13_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4162A_EFR32MG12_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4162a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4162A_EFR32MG12_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4162A_EFR32MG12_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4164A_EFR32MG12_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4164a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4164A_EFR32MG12_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4164A_EFR32MG12_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4169B_EFR32MG14_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4250A_EFR32FG1_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4253A_EFR32FG12_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4255A_EFR32FG13_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4255a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4255A_EFR32FG13_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4255A_EFR32FG13_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4256A_EFR32FG13_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4257A_EFR32FG14_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4300A_BGM111_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4300a"/>
    <properties key="core.partCompatibility" value=".*bgm111a256v2.*"/>
    <properties key="defaultName" value="BRD4300A_BGM111_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4300A_BGM111_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4302A_BGM121_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4302a"/>
    <properties key="core.partCompatibility" value=".*bgm121a256v2.*"/>
    <properties key="defaultName" value="BRD4302A_BGM121_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4302A_BGM121_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4306B_BGM13_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4306b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bgm13.*"/>
    <properties key="defaultName" value="BRD4306B_BGM13_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/BRD4306B_BGM13_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_polled/SimplicityStudio/BRD4100A_EFR32BG1P_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_polled/SimplicityStudio/BRD4103A_EFR32BG12_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_polled/SimplicityStudio/BRD4104A_EFR32BG13_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_polled/SimplicityStudio/BRD4151A_EFR32MG1P_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_polled/SimplicityStudio/BRD4159A_EFR32MG13_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4164A_EFR32MG12_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4164a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4164A_EFR32MG12_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_polled/SimplicityStudio/BRD4164A_EFR32MG12_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_polled/SimplicityStudio/BRD4169B_EFR32MG14_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_polled/SimplicityStudio/BRD4250A_EFR32FG1P_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_polled/SimplicityStudio/BRD4253A_EFR32FG12_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_polled/SimplicityStudio/BRD4256A_EFR32FG13_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_polled/SimplicityStudio/BRD4257A_EFR32FG14_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_polled/SimplicityStudio/SLSTK3301A_EFM32TG11_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_polled/SimplicityStudio/SLSTK3401A_EFM32PG1B_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_polled/SimplicityStudio/SLSTK3402A_EFM32PG12_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_spi_master_polled" description="This example demonstrates USART as a SPI master. 10 bytes, 0x00 - 0x09, are transmitted on MOSI. 10 bytes are received on MISO. Expected values are 0xA0 - 0xA9. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_master_polled/SimplicityStudio/SLSTK3701A_EFM32GG11_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4100A_EFR32BG1_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4103A_EFR32BG12_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4104A_EFR32BG13_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4151A_EFR32MG1_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4158A_EFR32MG13_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4158a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4158A_EFR32MG13_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4158A_EFR32MG13_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4159A_EFR32MG13_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4162A_EFR32MG12_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4162a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4162A_EFR32MG12_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4162A_EFR32MG12_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4164A_EFR32MG12_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4164a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4164A_EFR32MG12_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4164A_EFR32MG12_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4169B_EFR32MG14_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4250A_EFR32FG1_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4253A_EFR32FG12_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4255A_EFR32FG13_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4255a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4255A_EFR32FG13_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4255A_EFR32FG13_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4256A_EFR32FG13_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4257A_EFR32FG14_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4300A_BGM111_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4300a"/>
    <properties key="core.partCompatibility" value=".*bgm111a256v2.*"/>
    <properties key="defaultName" value="BRD4300A_BGM111_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4300A_BGM111_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4302A_BGM121_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4302a"/>
    <properties key="core.partCompatibility" value=".*bgm121a256v2.*"/>
    <properties key="defaultName" value="BRD4302A_BGM121_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4302A_BGM121_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4306B_BGM13_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4306b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bgm13.*"/>
    <properties key="defaultName" value="BRD4306B_BGM13_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/BRD4306B_BGM13_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_polled/SimplicityStudio/BRD4100A_EFR32BG1P_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_polled/SimplicityStudio/BRD4103A_EFR32BG12_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_polled/SimplicityStudio/BRD4104A_EFR32BG13_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_polled/SimplicityStudio/BRD4151A_EFR32MG1P_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_polled/SimplicityStudio/BRD4159A_EFR32MG13_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4164A_EFR32MG12_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd4164a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4164A_EFR32MG12_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_polled/SimplicityStudio/BRD4164A_EFR32MG12_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_polled/SimplicityStudio/BRD4169B_EFR32MG14_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_polled/SimplicityStudio/BRD4250A_EFR32FG1P_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_polled/SimplicityStudio/BRD4253A_EFR32FG12P_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_polled/SimplicityStudio/BRD4256A_EFR32FG13P_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_polled/SimplicityStudio/BRD4257A_EFR32FG14P_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_polled/SimplicityStudio/SLSTK3301A_EFM32TG11_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_polled/SimplicityStudio/SLSTK3401A_EFM32PG1B_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_polled/SimplicityStudio/SLSTK3402A_EFM32PG12_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_spi_slave_polled" description="This example demonstrates USART as a SPI slave. Data received on the MOSI pin is processed by polling. The TXDATA register is loaded right after receiving data  to send data to the master each SPI frame on the MISO pin. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_slave_polled/SimplicityStudio/SLSTK3701A_EFM32GG11_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_spi_master_dma_prs_letimer" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that triggers a packet to be sent from the master to the slave. Upon receiving, the slave will send a packet back to the master which will be handled by a DMA transfer from the RX data register to the RxBuffer whenever the RXDATAV flag goes high.  ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_spi_master_dma_prs_letimer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/BRD4100A_EFR32BG1P_spi_master_dma_prs_letimer.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12_spi_master_dma_prs_letimer" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that triggers a packet to be sent from the master to the slave. Upon receiving, the slave will send a packet back to the master which will be handled by a DMA transfer from the RX data register to the RxBuffer whenever the RXDATAV flag goes high.  ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12_spi_master_dma_prs_letimer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/BRD4103A_EFR32BG12_spi_master_dma_prs_letimer.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_spi_master_dma_prs_letimer" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that triggers a packet to be sent from the master to the slave. Upon receiving, the slave will send a packet back to the master which will be handled by a DMA transfer from the RX data register to the RxBuffer whenever the RXDATAV flag goes high.  ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_spi_master_dma_prs_letimer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/BRD4104A_EFR32BG13_spi_master_dma_prs_letimer.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_spi_master_dma_prs_letimer" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that triggers a packet to be sent from the master to the slave. Upon receiving, the slave will send a packet back to the master which will be handled by a DMA transfer from the RX data register to the RxBuffer whenever the RXDATAV flag goes high.  ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_spi_master_dma_prs_letimer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/BRD4151A_EFR32MG1P_spi_master_dma_prs_letimer.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13_spi_master_dma_prs_letimer" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that triggers a packet to be sent from the master to the slave. Upon receiving, the slave will send a packet back to the master which will be handled by a DMA transfer from the RX data register to the RxBuffer whenever the RXDATAV flag goes high.  ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13_spi_master_dma_prs_letimer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/BRD4159A_EFR32MG13_spi_master_dma_prs_letimer.slsproj"/>
  </descriptors>
  <descriptors label="BRD4164A_EFR32MG12_spi_master_dma_prs_letimer" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that triggers a packet to be sent from the master to the slave. Upon receiving, the slave will send a packet back to the master which will be handled by a DMA transfer from the RX data register to the RxBuffer whenever the RXDATAV flag goes high.  ">
    <properties key="core.boardCompatibility" value="brd4164a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4164A_EFR32MG12_spi_master_dma_prs_letimer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/BRD4164A_EFR32MG12_spi_master_dma_prs_letimer.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14_spi_master_dma_prs_letimer" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that triggers a packet to be sent from the master to the slave. Upon receiving, the slave will send a packet back to the master which will be handled by a DMA transfer from the RX data register to the RxBuffer whenever the RXDATAV flag goes high.  ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14_spi_master_dma_prs_letimer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/BRD4169B_EFR32MG14_spi_master_dma_prs_letimer.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_spi_master_dma_prs_letimer" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that triggers a packet to be sent from the master to the slave. Upon receiving, the slave will send a packet back to the master which will be handled by a DMA transfer from the RX data register to the RxBuffer whenever the RXDATAV flag goes high.  ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_spi_master_dma_prs_letimer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/BRD4250A_EFR32FG1P_spi_master_dma_prs_letimer.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12_spi_master_dma_prs_letimer" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that triggers a packet to be sent from the master to the slave. Upon receiving, the slave will send a packet back to the master which will be handled by a DMA transfer from the RX data register to the RxBuffer whenever the RXDATAV flag goes high.  ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12_spi_master_dma_prs_letimer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/BRD4253A_EFR32FG12_spi_master_dma_prs_letimer.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13_spi_master_dma_prs_letimer" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that triggers a packet to be sent from the master to the slave. Upon receiving, the slave will send a packet back to the master which will be handled by a DMA transfer from the RX data register to the RxBuffer whenever the RXDATAV flag goes high.  ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13_spi_master_dma_prs_letimer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/BRD4256A_EFR32FG13_spi_master_dma_prs_letimer.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_spi_master_dma_prs_letimer" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that triggers a packet to be sent from the master to the slave. Upon receiving, the slave will send a packet back to the master which will be handled by a DMA transfer from the RX data register to the RxBuffer whenever the RXDATAV flag goes high.  ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_spi_master_dma_prs_letimer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/BRD4257A_EFR32FG14_spi_master_dma_prs_letimer.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_spi_master_dma_prs_letimer" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that triggers a packet to be sent from the master to the slave. Upon receiving, the slave will send a packet back to the master which will be handled by a DMA transfer from the RX data register to the RxBuffer whenever the RXDATAV flag goes high.  ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_spi_master_dma_prs_letimer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/SLSTK3301A_EFM32TG11_spi_master_dma_prs_letimer.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_spi_master_dma_prs_letimer" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that triggers a packet to be sent from the master to the slave. Upon receiving, the slave will send a packet back to the master which will be handled by a DMA transfer from the RX data register to the RxBuffer whenever the RXDATAV flag goes high.  ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_spi_master_dma_prs_letimer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/SLSTK3401A_EFM32PG1B_spi_master_dma_prs_letimer.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12_spi_master_dma_prs_letimer" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that triggers a packet to be sent from the master to the slave. Upon receiving, the slave will send a packet back to the master which will be handled by a DMA transfer from the RX data register to the RxBuffer whenever the RXDATAV flag goes high.  ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12_spi_master_dma_prs_letimer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/SLSTK3402A_EFM32PG12_spi_master_dma_prs_letimer.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_spi_master_dma_prs_letimer" description="This example demonstrates using DMA with SPI as the master where  packet transfers are triggered using the letimer. The letimer is initialized to pulse for a set number of times equal to the length of TxBuffer and after each pulse a prs signal is generated that triggers a packet to be sent from the master to the slave. Upon receiving, the slave will send a packet back to the master which will be handled by a DMA transfer from the RX data register to the RxBuffer whenever the RXDATAV flag goes high.  ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_spi_master_dma_prs_letimer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usart/spi_transfer_dma_prs_letimer/SimplicityStudio/SLSTK3701A_EFM32GG11_spi_master_dma_prs_letimer.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_usbd_cdc_uart_bridge" description="This project uses the USB module to implement a USB CDC device (Communications Device Class) that uses the driver code in Drivers/cdc.c to act as a USB to UART bridge. Input that is received on the USB device's USART RX pin gets processed and then sent over USB to the USB host. Input that is received from the USB host is then processed and sent to the USB device's USART TX pin. In this case, the USB host is the computer and the USB device is the EFM32 board. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_usbd_cdc_uart_bridge"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USBD"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usbd/usbd_cdc_uart_bridge/SimplicityStudio/SLSTK3701A_EFM32GG11B_usbd_cdc_uart_bridge.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_usbd_cdc_vcom_echo" description="This project uses the USB module to implement a USB CDC device (Communications Device Class) that acts as a VCOM port. This example uses the &quot;VCOM port&quot; to implement a basic echo application. Data that is received from the USB host is processed by the USB device and then sent back to the USB host. In this case, the USB host is the computer and the USB device is the EFM32 board. This project operates in EM1. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_usbd_cdc_vcom_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USBD"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/usbd/usbd_cdc_vcom_echo/SimplicityStudio/SLSTK3701A_EFM32GG11B_usbd_cdc_vcom_echo.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_vdac_continuous" description="This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_vdac_continuous"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_continuous/SimplicityStudio/BRD4103A_EFR32BG12P_vdac_continuous.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_vdac_continuous" description="This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_vdac_continuous"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_continuous/SimplicityStudio/BRD4104A_EFR32BG13P_vdac_continuous.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_vdac_continuous" description="This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_vdac_continuous"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_continuous/SimplicityStudio/BRD4159A_EFR32MG13P_vdac_continuous.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_vdac_continuous" description="This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_vdac_continuous"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_continuous/SimplicityStudio/BRD4161A_EFR32MG12P_vdac_continuous.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_vdac_continuous" description="This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_vdac_continuous"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_continuous/SimplicityStudio/BRD4169B_EFR32MG14P_vdac_continuous.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_vdac_continuous" description="This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_vdac_continuous"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_continuous/SimplicityStudio/BRD4253A_EFR32FG12P_vdac_continuous.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_vdac_continuous" description="This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_vdac_continuous"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_continuous/SimplicityStudio/BRD4256A_EFR32FG13P_vdac_continuous.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_vdac_continuous" description="This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_vdac_continuous"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_continuous/SimplicityStudio/BRD4257A_EFR32FG14P_vdac_continuous.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_vdac_continuous" description="This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_vdac_continuous"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_continuous/SimplicityStudio/SLSTK3301A_EFM32TG11B_vdac_continuous.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_vdac_continuous" description="This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_vdac_continuous"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_continuous/SimplicityStudio/SLSTK3402A_EFM32PG12B_vdac_continuous.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_vdac_continuous" description="This project uses the VDAC in continuous mode with single-ended output to output 0.5V to a pin in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_vdac_continuous"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_continuous/SimplicityStudio/SLSTK3701A_EFM32GG11B_vdac_continuous.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_vdac_differential" description="This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_vdac_differential"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_differential/SimplicityStudio/BRD4103A_EFR32BG12P_vdac_differential.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_vdac_differential" description="This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_vdac_differential"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_differential/SimplicityStudio/BRD4104A_EFR32BG13P_vdac_differential.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_vdac_differential" description="This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_vdac_differential"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_differential/SimplicityStudio/BRD4159A_EFR32MG13P_vdac_differential.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_vdac_differential" description="This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_vdac_differential"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_differential/SimplicityStudio/BRD4161A_EFR32MG12P_vdac_differential.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_vdac_differential" description="This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_vdac_differential"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_differential/SimplicityStudio/BRD4169B_EFR32MG14P_vdac_differential.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_vdac_differential" description="This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_vdac_differential"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_differential/SimplicityStudio/BRD4253A_EFR32FG12P_vdac_differential.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_vdac_differential" description="This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_vdac_differential"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_differential/SimplicityStudio/BRD4256A_EFR32FG13P_vdac_differential.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_vdac_differential" description="This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_vdac_differential"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_differential/SimplicityStudio/BRD4257A_EFR32FG14P_vdac_differential.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_vdac_differential" description="This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_vdac_differential"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_differential/SimplicityStudio/SLSTK3301A_EFM32TG11B_vdac_differential.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_vdac_differential" description="This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_vdac_differential"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_differential/SimplicityStudio/SLSTK3402A_EFM32PG12B_vdac_differential.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_vdac_differential" description="This project uses the VDAC in continuous mode with differential output to output a difference of 0.5V between two pins in EM3. The VDAC operates independently from the core. Since the VDAC is operating in continuous mode, the output voltage will be stable even if the output is loaded. The fact that the VDAC is continuously working will be reflected by the power consumption. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_vdac_differential"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_differential/SimplicityStudio/SLSTK3701A_EFM32GG11B_vdac_differential.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_vdac_sine_wave_synch" description="This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for series 0 boards and 31.25 kHz for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_vdac_sine_wave_synch"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_sine_wave_synch/SimplicityStudio/BRD4103A_EFR32BG12P_vdac_sine_wave_synch.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_vdac_sine_wave_synch" description="This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for series 0 boards and 31.25 kHz for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_vdac_sine_wave_synch"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_sine_wave_synch/SimplicityStudio/BRD4104A_EFR32BG13P_vdac_sine_wave_synch.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_vdac_sine_wave_synch" description="This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for series 0 boards and 31.25 kHz for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_vdac_sine_wave_synch"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_sine_wave_synch/SimplicityStudio/BRD4159A_EFR32MG13P_vdac_sine_wave_synch.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_vdac_sine_wave_synch" description="This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for series 0 boards and 31.25 kHz for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_vdac_sine_wave_synch"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_sine_wave_synch/SimplicityStudio/BRD4161A_EFR32MG12P_vdac_sine_wave_synch.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_vdac_sine_wave_synch" description="This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for series 0 boards and 31.25 kHz for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_vdac_sine_wave_synch"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_sine_wave_synch/SimplicityStudio/BRD4169B_EFR32MG14P_vdac_sine_wave_synch.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_vdac_sine_wave_synch" description="This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for series 0 boards and 31.25 kHz for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_vdac_sine_wave_synch"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_sine_wave_synch/SimplicityStudio/BRD4253A_EFR32FG12P_vdac_sine_wave_synch.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_vdac_sine_wave_synch" description="This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for series 0 boards and 31.25 kHz for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_vdac_sine_wave_synch"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_sine_wave_synch/SimplicityStudio/BRD4256A_EFR32FG13P_vdac_sine_wave_synch.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_vdac_sine_wave_synch" description="This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for series 0 boards and 31.25 kHz for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_vdac_sine_wave_synch"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_sine_wave_synch/SimplicityStudio/BRD4257A_EFR32FG14P_vdac_sine_wave_synch.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_vdac_sine_wave_synch" description="This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for series 0 boards and 31.25 kHz for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_vdac_sine_wave_synch"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_sine_wave_synch/SimplicityStudio/SLSTK3301A_EFM32TG11B_vdac_sine_wave_synch.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_vdac_sine_wave_synch" description="This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for series 0 boards and 31.25 kHz for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_vdac_sine_wave_synch"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_sine_wave_synch/SimplicityStudio/SLSTK3402A_EFM32PG12B_vdac_sine_wave_synch.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_vdac_sine_wave_synch" description="This project uses the DAC and the internal sine wave generator to produce a 16-point sine wave at a frequency of f_sinewave Hz centered at the reference voltage divided by 2. This project operates in EM1. By default, this program outputs a sinewave at 27.343 kHz for series 0 boards and 31.25 kHz for series 1 boards. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_vdac_sine_wave_synch"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_sine_wave_synch/SimplicityStudio/SLSTK3701A_EFM32GG11B_vdac_sine_wave_synch.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_vdac_single" description="This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_vdac_single"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_single/SimplicityStudio/BRD4103A_EFR32BG12P_vdac_single.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_vdac_single" description="This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_vdac_single"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_single/SimplicityStudio/BRD4104A_EFR32BG13P_vdac_single.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_vdac_single" description="This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_vdac_single"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_single/SimplicityStudio/BRD4159A_EFR32MG13P_vdac_single.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_vdac_single" description="This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_vdac_single"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_single/SimplicityStudio/BRD4161A_EFR32MG12P_vdac_single.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_vdac_single" description="This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_vdac_single"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_single/SimplicityStudio/BRD4169B_EFR32MG14P_vdac_single.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_vdac_single" description="This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_vdac_single"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_single/SimplicityStudio/BRD4253A_EFR32FG12P_vdac_single.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_vdac_single" description="This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_vdac_single"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_single/SimplicityStudio/BRD4256A_EFR32FG13P_vdac_single.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_vdac_single" description="This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_vdac_single"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_single/SimplicityStudio/BRD4257A_EFR32FG14P_vdac_single.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_vdac_single" description="This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_vdac_single"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_single/SimplicityStudio/SLSTK3301A_EFM32TG11B_vdac_single.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_vdac_single" description="This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_vdac_single"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_single/SimplicityStudio/SLSTK3402A_EFM32PG12B_vdac_single.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_vdac_single" description="This project uses the VDAC in sample/off mode with single-ended output to output 0.5V to a pin in EM3. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_vdac_single"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_single/SimplicityStudio/SLSTK3701A_EFM32GG11B_vdac_single.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_vdac_timer_dma_waveform" description="This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_vdac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_timer_dma_waveform/SimplicityStudio/BRD4103A_EFR32BG12P_vdac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_vdac_timer_dma_waveform" description="This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_vdac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_timer_dma_waveform/SimplicityStudio/BRD4104A_EFR32BG13P_vdac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_vdac_timer_dma_waveform" description="This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_vdac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_timer_dma_waveform/SimplicityStudio/BRD4159A_EFR32MG13P_vdac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_vdac_timer_dma_waveform" description="This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_vdac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_timer_dma_waveform/SimplicityStudio/BRD4161A_EFR32MG12P_vdac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_vdac_timer_dma_waveform" description="This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_vdac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_timer_dma_waveform/SimplicityStudio/BRD4169B_EFR32MG14P_vdac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_vdac_timer_dma_waveform" description="This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_vdac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_timer_dma_waveform/SimplicityStudio/BRD4253A_EFR32FG12P_vdac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_vdac_timer_dma_waveform" description="This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_vdac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_timer_dma_waveform/SimplicityStudio/BRD4256A_EFR32FG13P_vdac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_vdac_timer_dma_waveform" description="This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_vdac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_timer_dma_waveform/SimplicityStudio/BRD4257A_EFR32FG14P_vdac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_vdac_timer_dma_waveform" description="This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_vdac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_timer_dma_waveform/SimplicityStudio/SLSTK3301A_EFM32TG11B_vdac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_vdac_timer_dma_waveform" description="This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_vdac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_timer_dma_waveform/SimplicityStudio/SLSTK3402A_EFM32PG12B_vdac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_vdac_timer_dma_waveform" description="This project uses the DAC/VDAC and TIMER0 to output a 32 point sine wave at a particular frequency (10 kHz by default). This project operates in EM1 because the timer can't operate in EM2/EM3. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_vdac_timer_dma_waveform"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VDAC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vdac/vdac_timer_dma_waveform/SimplicityStudio/SLSTK3701A_EFM32GG11B_vdac_timer_dma_waveform.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_emu_vmon_em4_wakeup" description="This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_emu_vmon_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_em4_wakeup/SimplicityStudio/BRD4100A_EFR32BG1P_emu_vmon_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_emu_vmon_em4_wakeup" description="This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_emu_vmon_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_em4_wakeup/SimplicityStudio/BRD4103A_EFR32BG12P_emu_vmon_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_emu_vmon_em4_wakeup" description="This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_emu_vmon_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_em4_wakeup/SimplicityStudio/BRD4104A_EFR32BG13P_emu_vmon_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_emu_vmon_em4_wakeup" description="This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_emu_vmon_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_em4_wakeup/SimplicityStudio/BRD4151A_EFR32MG1P_emu_vmon_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_emu_vmon_em4_wakeup" description="This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_emu_vmon_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_em4_wakeup/SimplicityStudio/BRD4159A_EFR32MG13P_emu_vmon_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_emu_vmon_em4_wakeup" description="This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_emu_vmon_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_em4_wakeup/SimplicityStudio/BRD4161A_EFR32MG12P_emu_vmon_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_emu_vmon_em4_wakeup" description="This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_emu_vmon_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_em4_wakeup/SimplicityStudio/BRD4169A_EFR32MG14P_emu_vmon_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_emu_vmon_em4_wakeup" description="This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_emu_vmon_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_em4_wakeup/SimplicityStudio/BRD4250A_EFR32FG1P_emu_vmon_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_emu_vmon_em4_wakeup" description="This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_emu_vmon_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_em4_wakeup/SimplicityStudio/BRD4253A_EFR32FG12P_emu_vmon_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_emu_vmon_em4_wakeup" description="This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_emu_vmon_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_em4_wakeup/SimplicityStudio/BRD4256A_EFR32FG13P_emu_vmon_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_emu_vmon_em4_wakeup" description="This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_emu_vmon_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_em4_wakeup/SimplicityStudio/BRD4257A_EFR32FG14P_emu_vmon_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_emu_vmon_em4_wakeup" description="This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_emu_vmon_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_em4_wakeup/SimplicityStudio/SLSTK3301A_EFM32TG11B_emu_vmon_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_emu_vmon_em4_wakeup" description="This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_emu_vmon_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_em4_wakeup/SimplicityStudio/SLSTK3401A_EFM32PG1B_emu_vmon_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_emu_vmon_em4_wakeup" description="This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_emu_vmon_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_em4_wakeup/SimplicityStudio/SLSTK3402A_EFM32PG12B_emu_vmon_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_emu_vmon_em4_wakeup" description="This project demonstrates using the VMON to wakeup from EM4H whenever  the battery level drops below a certain threashold. When first loaded, LED0 will be set to off.  Once the voltage drops below THRESHOLD_VOLTAGE (3.0 V), LED0 is turned on. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_emu_vmon_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_em4_wakeup/SimplicityStudio/SLSTK3701A_EFM32GG11B_emu_vmon_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_emu_vmon_interrupt" description="This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-evaluate the value  of LED0. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_emu_vmon_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_emu_vmon_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_emu_vmon_interrupt" description="This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-evaluate the value  of LED0. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_emu_vmon_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_emu_vmon_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_emu_vmon_interrupt" description="This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-evaluate the value  of LED0. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_emu_vmon_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_emu_vmon_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_emu_vmon_interrupt" description="This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-evaluate the value  of LED0. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_emu_vmon_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_emu_vmon_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_emu_vmon_interrupt" description="This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-evaluate the value  of LED0. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_emu_vmon_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_emu_vmon_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_emu_vmon_interrupt" description="This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-evaluate the value  of LED0. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_emu_vmon_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_emu_vmon_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169A_EFR32MG14P_emu_vmon_interrupt" description="This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-evaluate the value  of LED0. ">
    <properties key="core.boardCompatibility" value="brd4169a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169A_EFR32MG14P_emu_vmon_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_interrupt/SimplicityStudio/BRD4169A_EFR32MG14P_emu_vmon_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_emu_vmon_interrupt" description="This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-evaluate the value  of LED0. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_emu_vmon_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_emu_vmon_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_emu_vmon_interrupt" description="This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-evaluate the value  of LED0. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_emu_vmon_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_emu_vmon_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_emu_vmon_interrupt" description="This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-evaluate the value  of LED0. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_emu_vmon_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_emu_vmon_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_emu_vmon_interrupt" description="This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-evaluate the value  of LED0. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_emu_vmon_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_emu_vmon_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_emu_vmon_interrupt" description="This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-evaluate the value  of LED0. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_emu_vmon_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_emu_vmon_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_emu_vmon_interrupt" description="This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-evaluate the value  of LED0. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_emu_vmon_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_emu_vmon_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_emu_vmon_interrupt" description="This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-evaluate the value  of LED0. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_emu_vmon_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_emu_vmon_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_emu_vmon_interrupt" description="This project demonstrates the VMON to detect battery level threasholds in EM2.  When the source battery is below the THRESHOLD_VOLTAGE (3.0 V), LED0 is off.  When the battery is above THRESHOLD_VOLTAGE, LED0 is on. Interrupts occur on rising and falling edges to re-evaluate the value  of LED0. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_emu_vmon_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="VMON"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/vmon/vmon_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11B_emu_vmon_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A_EFR32BG1P_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="defaultName" value="BRD4100A_EFR32BG1P_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wdog/wdog_led_toggle/SimplicityStudio/BRD4100A_EFR32BG1P_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wdog/wdog_led_toggle/SimplicityStudio/BRD4103A_EFR32BG12P_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wdog/wdog_led_toggle/SimplicityStudio/BRD4104A_EFR32BG13_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A_EFR32MG1P_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="defaultName" value="BRD4151A_EFR32MG1P_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wdog/wdog_led_toggle/SimplicityStudio/BRD4151A_EFR32MG1P_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wdog/wdog_led_toggle/SimplicityStudio/BRD4159A_EFR32MG13_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wdog/wdog_led_toggle/SimplicityStudio/BRD4161A_EFR32MG12P_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wdog/wdog_led_toggle/SimplicityStudio/BRD4169B_EFR32MG14_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A_EFR32FG1P_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="defaultName" value="BRD4250A_EFR32FG1P_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wdog/wdog_led_toggle/SimplicityStudio/BRD4250A_EFR32FG1P_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wdog/wdog_led_toggle/SimplicityStudio/BRD4253A_EFR32FG12P_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wdog/wdog_led_toggle/SimplicityStudio/BRD4256A_EFR32FG13_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wdog/wdog_led_toggle/SimplicityStudio/BRD4257A_EFR32FG14_wdog.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wdog/wdog_led_toggle/SimplicityStudio/SLSTK3301A_EFM32TG11_wdog.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A_EFM32PG1B_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="defaultName" value="SLSTK3401A_EFM32PG1B_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wdog/wdog_led_toggle/SimplicityStudio/SLSTK3401A_EFM32PG1B_wdog.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wdog/wdog_led_toggle/SimplicityStudio/SLSTK3402A_EFM32PG12B_wdog.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wdog/wdog_led_toggle/SimplicityStudio/SLSTK3701A_EFM32GG11_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_wtimer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by WTIMER CC0 are transferred to a fixed length buffer by the LDMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_wtimer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_dma_edge_capture/SimplicityStudio/BRD4103A_EFR32BG12P_wtimer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_wtimer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by WTIMER CC0 are transferred to a fixed length buffer by the LDMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_wtimer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_dma_edge_capture/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_wtimer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by WTIMER CC0 are transferred to a fixed length buffer by the LDMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_wtimer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_dma_edge_capture/SimplicityStudio/BRD4159A_EFR32MG13P_wtimer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_wtimer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by WTIMER CC0 are transferred to a fixed length buffer by the LDMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_wtimer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_dma_edge_capture/SimplicityStudio/BRD4161A_EFR32MG12P_wtimer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_wtimer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by WTIMER CC0 are transferred to a fixed length buffer by the LDMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_wtimer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_dma_edge_capture/SimplicityStudio/BRD4169B_EFR32MG14P_wtimer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_wtimer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by WTIMER CC0 are transferred to a fixed length buffer by the LDMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_wtimer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_dma_edge_capture/SimplicityStudio/BRD4253A_EFR32FG12P_wtimer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_wtimer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by WTIMER CC0 are transferred to a fixed length buffer by the LDMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_wtimer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_dma_edge_capture/SimplicityStudio/BRD4256A_EFR32FG13P_wtimer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_wtimer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by WTIMER CC0 are transferred to a fixed length buffer by the LDMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_wtimer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_dma_edge_capture/SimplicityStudio/BRD4257A_EFR32FG14P_wtimer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_wtimer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by WTIMER CC0 are transferred to a fixed length buffer by the LDMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_wtimer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_dma_edge_capture/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_wtimer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by WTIMER CC0 are transferred to a fixed length buffer by the LDMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_wtimer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_dma_edge_capture/SimplicityStudio/SLSTK3402A_EFM32PG12B_wtimer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_wtimer_dma_edge_capture" description="This project demonstrates edge capture with DMA. The first 512 events captured by WTIMER CC0 are transferred to a fixed length buffer by the LDMA. This project captures falling edges of an external input periodic signal. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_wtimer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_dma_edge_capture/SimplicityStudio/SLSTK3701A_EFM32GG11B_wtimer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_wtimer_frequency_generation" description="This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Top value is set such that on each overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_wtimer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_frequency_generation/SimplicityStudio/BRD4103A_EFR32BG12P_wtimer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_wtimer_frequency_generation" description="This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Top value is set such that on each overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_wtimer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_frequency_generation/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_wtimer_frequency_generation" description="This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Top value is set such that on each overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_wtimer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_frequency_generation/SimplicityStudio/BRD4159A_EFR32MG13P_wtimer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_wtimer_frequency_generation" description="This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Top value is set such that on each overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_wtimer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_frequency_generation/SimplicityStudio/BRD4161A_EFR32MG12P_wtimer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_wtimer_frequency_generation" description="This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Top value is set such that on each overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_wtimer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_frequency_generation/SimplicityStudio/BRD4169B_EFR32MG14P_wtimer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_wtimer_frequency_generation" description="This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Top value is set such that on each overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_wtimer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_frequency_generation/SimplicityStudio/BRD4253A_EFR32FG12P_wtimer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_wtimer_frequency_generation" description="This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Top value is set such that on each overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_wtimer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_frequency_generation/SimplicityStudio/BRD4256A_EFR32FG13P_wtimer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_wtimer_frequency_generation" description="This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Top value is set such that on each overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_wtimer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_frequency_generation/SimplicityStudio/BRD4257A_EFR32FG14P_wtimer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_wtimer_frequency_generation" description="This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Top value is set such that on each overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_wtimer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_frequency_generation/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_wtimer_frequency_generation" description="This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Top value is set such that on each overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_wtimer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_frequency_generation/SimplicityStudio/SLSTK3402A_EFM32PG12B_wtimer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_wtimer_frequency_generation" description="This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Top value is set such that on each overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_wtimer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_frequency_generation/SimplicityStudio/SLSTK3701A_EFM32GG11B_wtimer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_wtimer_input_capture_interrupt" description="This project demonstrates the use of the WTIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_wtimer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_wtimer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_wtimer_input_capture_interrupt" description="This project demonstrates the use of the WTIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_wtimer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_wtimer_input_capture_interrupt" description="This project demonstrates the use of the WTIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_wtimer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_wtimer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_wtimer_input_capture_interrupt" description="This project demonstrates the use of the WTIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_wtimer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_wtimer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_wtimer_input_capture_interrupt" description="This project demonstrates the use of the WTIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_wtimer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_interrupt/SimplicityStudio/BRD4169B_EFR32MG14P_wtimer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_wtimer_input_capture_interrupt" description="This project demonstrates the use of the WTIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_wtimer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_wtimer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_wtimer_input_capture_interrupt" description="This project demonstrates the use of the WTIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_wtimer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_wtimer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_wtimer_input_capture_interrupt" description="This project demonstrates the use of the WTIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_wtimer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_wtimer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_wtimer_input_capture_interrupt" description="This project demonstrates the use of the WTIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_wtimer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_wtimer_input_capture_interrupt" description="This project demonstrates the use of the WTIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_wtimer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_wtimer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_wtimer_input_capture_interrupt" description="This project demonstrates the use of the WTIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_wtimer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11B_wtimer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_wtimer_input_capture_polled" description="This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_wtimer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_polled/SimplicityStudio/BRD4103A_EFR32BG12P_wtimer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_wtimer_input_capture_polled" description="This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_wtimer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_polled/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_wtimer_input_capture_polled" description="This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_wtimer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_polled/SimplicityStudio/BRD4159A_EFR32MG13P_wtimer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_wtimer_input_capture_polled" description="This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_wtimer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_polled/SimplicityStudio/BRD4161A_EFR32MG12P_wtimer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_wtimer_input_capture_polled" description="This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_wtimer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_polled/SimplicityStudio/BRD4169B_EFR32MG14P_wtimer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_wtimer_input_capture_polled" description="This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_wtimer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_polled/SimplicityStudio/BRD4253A_EFR32FG12P_wtimer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_wtimer_input_capture_polled" description="This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_wtimer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_polled/SimplicityStudio/BRD4256A_EFR32FG13P_wtimer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_wtimer_input_capture_polled" description="This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_wtimer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_polled/SimplicityStudio/BRD4257A_EFR32FG14P_wtimer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_wtimer_input_capture_polled" description="This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_wtimer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_polled/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_wtimer_input_capture_polled" description="This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_wtimer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_wtimer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_wtimer_input_capture_polled" description="This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button 0 is pressed. The PRS then routes this signal to the timer to indicate that an input capture needs to occur. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_wtimer_input_capture_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_input_capture_polled/SimplicityStudio/SLSTK3701A_EFM32GG11B_wtimer_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_wtimer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_wtimer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_wtimer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_wtimer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_wtimer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_wtimer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_wtimer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_wtimer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_wtimer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_wtimer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_wtimer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_wtimer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_wtimer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_interrupt/SimplicityStudio/BRD4169B_EFR32MG14P_wtimer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_wtimer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_wtimer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_wtimer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_wtimer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_wtimer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_wtimer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_wtimer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_wtimer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_wtimer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_wtimer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_wtimer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_wtimer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_wtimer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_wtimer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_wtimer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_wtimer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11B_wtimer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_wtimer_period_measurement_polled" description="This project demonstrates polled period measurement using the WTIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_wtimer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_polled/SimplicityStudio/BRD4103A_EFR32BG12P_wtimer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_wtimer_period_measurement_polled" description="This project demonstrates polled period measurement using the WTIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_wtimer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_polled/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_wtimer_period_measurement_polled" description="This project demonstrates polled period measurement using the WTIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_wtimer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_polled/SimplicityStudio/BRD4159A_EFR32MG13P_wtimer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_wtimer_period_measurement_polled" description="This project demonstrates polled period measurement using the WTIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_wtimer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_polled/SimplicityStudio/BRD4161A_EFR32MG12P_wtimer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_wtimer_period_measurement_polled" description="This project demonstrates polled period measurement using the WTIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_wtimer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_polled/SimplicityStudio/BRD4169B_EFR32MG14P_wtimer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_wtimer_period_measurement_polled" description="This project demonstrates polled period measurement using the WTIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_wtimer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_polled/SimplicityStudio/BRD4253A_EFR32FG12P_wtimer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_wtimer_period_measurement_polled" description="This project demonstrates polled period measurement using the WTIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_wtimer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_polled/SimplicityStudio/BRD4256A_EFR32FG13P_wtimer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_wtimer_period_measurement_polled" description="This project demonstrates polled period measurement using the WTIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_wtimer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_polled/SimplicityStudio/BRD4257A_EFR32FG14P_wtimer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_wtimer_period_measurement_polled" description="This project demonstrates polled period measurement using the WTIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_wtimer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_polled/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_wtimer_period_measurement_polled" description="This project demonstrates polled period measurement using the WTIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_wtimer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_wtimer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_wtimer_period_measurement_polled" description="This project demonstrates polled period measurement using the WTIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_wtimer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_period_measurement_polled/SimplicityStudio/SLSTK3701A_EFM32GG11B_wtimer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_wtimer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. WTIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_wtimer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pulse_capture/SimplicityStudio/BRD4103A_EFR32BG12P_wtimer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_wtimer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. WTIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_wtimer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pulse_capture/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_wtimer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. WTIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_wtimer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pulse_capture/SimplicityStudio/BRD4159A_EFR32MG13P_wtimer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_wtimer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. WTIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_wtimer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pulse_capture/SimplicityStudio/BRD4161A_EFR32MG12P_wtimer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_wtimer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. WTIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_wtimer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pulse_capture/SimplicityStudio/BRD4169B_EFR32MG14P_wtimer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_wtimer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. WTIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_wtimer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pulse_capture/SimplicityStudio/BRD4253A_EFR32FG12P_wtimer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_wtimer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. WTIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_wtimer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pulse_capture/SimplicityStudio/BRD4256A_EFR32FG13P_wtimer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_wtimer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. WTIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_wtimer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pulse_capture/SimplicityStudio/BRD4257A_EFR32FG14P_wtimer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_wtimer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. WTIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_wtimer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pulse_capture/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_wtimer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. WTIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_wtimer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pulse_capture/SimplicityStudio/SLSTK3402A_EFM32PG12B_wtimer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_wtimer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. WTIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_wtimer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pulse_capture/SimplicityStudio/SLSTK3701A_EFM32GG11B_wtimer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_wtimer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_wtimer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_dma/SimplicityStudio/BRD4103A_EFR32BG12P_wtimer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_wtimer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_wtimer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_dma/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_wtimer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_wtimer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_dma/SimplicityStudio/BRD4159A_EFR32MG13P_wtimer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_wtimer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_wtimer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_dma/SimplicityStudio/BRD4161A_EFR32MG12P_wtimer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_wtimer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_wtimer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_dma/SimplicityStudio/BRD4169B_EFR32MG14P_wtimer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_wtimer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_wtimer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_dma/SimplicityStudio/BRD4253A_EFR32FG12P_wtimer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_wtimer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_wtimer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_dma/SimplicityStudio/BRD4256A_EFR32FG13P_wtimer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_wtimer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_wtimer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_dma/SimplicityStudio/BRD4257A_EFR32FG14P_wtimer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_wtimer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_wtimer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_wtimer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_wtimer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_dma/SimplicityStudio/SLSTK3402A_EFM32PG12B_wtimer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_wtimer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_wtimer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_dma/SimplicityStudio/SLSTK3701A_EFM32GG11B_wtimer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_wtimer_pwm_interrupt" description="This project demonstrates pulse width modulation using the WTIMER module. WTIMER is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely updates the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_wtimer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_wtimer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_wtimer_pwm_interrupt" description="This project demonstrates pulse width modulation using the WTIMER module. WTIMER is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely updates the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_wtimer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_wtimer_pwm_interrupt" description="This project demonstrates pulse width modulation using the WTIMER module. WTIMER is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely updates the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_wtimer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_wtimer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_wtimer_pwm_interrupt" description="This project demonstrates pulse width modulation using the WTIMER module. WTIMER is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely updates the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_wtimer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_wtimer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_wtimer_pwm_interrupt" description="This project demonstrates pulse width modulation using the WTIMER module. WTIMER is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely updates the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_wtimer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_interrupt/SimplicityStudio/BRD4169B_EFR32MG14P_wtimer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_wtimer_pwm_interrupt" description="This project demonstrates pulse width modulation using the WTIMER module. WTIMER is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely updates the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_wtimer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_wtimer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_wtimer_pwm_interrupt" description="This project demonstrates pulse width modulation using the WTIMER module. WTIMER is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely updates the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_wtimer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_wtimer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_wtimer_pwm_interrupt" description="This project demonstrates pulse width modulation using the WTIMER module. WTIMER is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely updates the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_wtimer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_wtimer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_wtimer_pwm_interrupt" description="This project demonstrates pulse width modulation using the WTIMER module. WTIMER is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely updates the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_wtimer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_wtimer_pwm_interrupt" description="This project demonstrates pulse width modulation using the WTIMER module. WTIMER is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely updates the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_wtimer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_wtimer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_wtimer_pwm_interrupt" description="This project demonstrates pulse width modulation using the WTIMER module. WTIMER is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely updates the compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_wtimer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_pwm_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11B_wtimer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_wtimer_single_edge_output_compare" description="This project demonstrates single output compare using the WTIMER module. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_wtimer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_edge_output_compare/SimplicityStudio/BRD4103A_EFR32BG12P_wtimer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_wtimer_single_edge_output_compare" description="This project demonstrates single output compare using the WTIMER module. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_wtimer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_edge_output_compare/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_wtimer_single_edge_output_compare" description="This project demonstrates single output compare using the WTIMER module. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_wtimer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_edge_output_compare/SimplicityStudio/BRD4159A_EFR32MG13P_wtimer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_wtimer_single_edge_output_compare" description="This project demonstrates single output compare using the WTIMER module. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_wtimer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_edge_output_compare/SimplicityStudio/BRD4161A_EFR32MG12P_wtimer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_wtimer_single_edge_output_compare" description="This project demonstrates single output compare using the WTIMER module. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_wtimer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_edge_output_compare/SimplicityStudio/BRD4169B_EFR32MG14P_wtimer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_wtimer_single_edge_output_compare" description="This project demonstrates single output compare using the WTIMER module. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_wtimer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_edge_output_compare/SimplicityStudio/BRD4253A_EFR32FG12P_wtimer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_wtimer_single_edge_output_compare" description="This project demonstrates single output compare using the WTIMER module. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_wtimer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_edge_output_compare/SimplicityStudio/BRD4256A_EFR32FG13P_wtimer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_wtimer_single_edge_output_compare" description="This project demonstrates single output compare using the WTIMER module. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_wtimer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_edge_output_compare/SimplicityStudio/BRD4257A_EFR32FG14P_wtimer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_wtimer_single_edge_output_compare" description="This project demonstrates single output compare using the WTIMER module. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_wtimer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_edge_output_compare/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_wtimer_single_edge_output_compare" description="This project demonstrates single output compare using the WTIMER module. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_wtimer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_edge_output_compare/SimplicityStudio/SLSTK3402A_EFM32PG12B_wtimer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_wtimer_single_edge_output_compare" description="This project demonstrates single output compare using the WTIMER module. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_wtimer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_edge_output_compare/SimplicityStudio/SLSTK3701A_EFM32GG11B_wtimer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_wtimer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_wtimer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_dma/SimplicityStudio/BRD4103A_EFR32BG12P_wtimer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_wtimer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_wtimer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_dma/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_wtimer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_wtimer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_dma/SimplicityStudio/BRD4159A_EFR32MG13P_wtimer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_wtimer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_wtimer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_dma/SimplicityStudio/BRD4161A_EFR32MG12P_wtimer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_wtimer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_wtimer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_dma/SimplicityStudio/BRD4169B_EFR32MG14P_wtimer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_wtimer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_wtimer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_dma/SimplicityStudio/BRD4253A_EFR32FG12P_wtimer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_wtimer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_wtimer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_dma/SimplicityStudio/BRD4256A_EFR32FG13P_wtimer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_wtimer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_wtimer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_dma/SimplicityStudio/BRD4257A_EFR32FG14P_wtimer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_wtimer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_wtimer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_dma/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_wtimer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_wtimer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_dma/SimplicityStudio/SLSTK3402A_EFM32PG12B_wtimer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_wtimer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and an interrupt triggers after the first compare to load the second compare value to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 1 second delay. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_wtimer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_dma/SimplicityStudio/SLSTK3701A_EFM32GG11B_wtimer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_wtimer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_wtimer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_wtimer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_wtimer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_wtimer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_interrupt/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_wtimer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_wtimer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_interrupt/SimplicityStudio/BRD4159A_EFR32MG13P_wtimer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_wtimer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_wtimer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_wtimer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_wtimer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_wtimer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_interrupt/SimplicityStudio/BRD4169B_EFR32MG14P_wtimer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_wtimer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_wtimer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_wtimer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_wtimer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_wtimer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_interrupt/SimplicityStudio/BRD4256A_EFR32FG13P_wtimer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_wtimer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_wtimer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_interrupt/SimplicityStudio/BRD4257A_EFR32FG14P_wtimer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_wtimer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_wtimer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_interrupt/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_wtimer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_wtimer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_wtimer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_wtimer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH ms after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_wtimer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_interrupt/SimplicityStudio/SLSTK3701A_EFM32GG11B_wtimer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A_EFR32BG12P_wtimer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. WTIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single 1 pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="defaultName" value="BRD4103A_EFR32BG12P_wtimer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_polled/SimplicityStudio/BRD4103A_EFR32BG12P_wtimer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4104A_EFR32BG13P_wtimer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. WTIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single 1 pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4104a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg13.*"/>
    <properties key="defaultName" value="BRD4104A_EFR32BG13P_wtimer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_polled/SimplicityStudio/BRD4104A_EFR32BG13P_wtimer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4159A_EFR32MG13P_wtimer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. WTIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single 1 pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4159a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg13.*"/>
    <properties key="defaultName" value="BRD4159A_EFR32MG13P_wtimer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_polled/SimplicityStudio/BRD4159A_EFR32MG13P_wtimer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A_EFR32MG12P_wtimer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. WTIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single 1 pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="defaultName" value="BRD4161A_EFR32MG12P_wtimer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_polled/SimplicityStudio/BRD4161A_EFR32MG12P_wtimer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4169B_EFR32MG14P_wtimer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. WTIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single 1 pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4169b"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg14.*"/>
    <properties key="defaultName" value="BRD4169B_EFR32MG14P_wtimer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_polled/SimplicityStudio/BRD4169B_EFR32MG14P_wtimer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A_EFR32FG12P_wtimer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. WTIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single 1 pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="defaultName" value="BRD4253A_EFR32FG12P_wtimer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_polled/SimplicityStudio/BRD4253A_EFR32FG12P_wtimer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4256A_EFR32FG13P_wtimer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. WTIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single 1 pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4256a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg13.*"/>
    <properties key="defaultName" value="BRD4256A_EFR32FG13P_wtimer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_polled/SimplicityStudio/BRD4256A_EFR32FG13P_wtimer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4257A_EFR32FG14P_wtimer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. WTIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single 1 pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4257a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg14.*"/>
    <properties key="defaultName" value="BRD4257A_EFR32FG14P_wtimer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_polled/SimplicityStudio/BRD4257A_EFR32FG14P_wtimer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3301A_EFM32TG11B_wtimer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. WTIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single 1 pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd2102a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.tg11.*"/>
    <properties key="defaultName" value="SLSTK3301A_EFM32TG11B_wtimer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_polled/SimplicityStudio/SLSTK3301A_EFM32TG11B_wtimer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A_EFM32PG12B_wtimer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. WTIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single 1 pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="defaultName" value="SLSTK3402A_EFM32PG12B_wtimer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_wtimer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A_EFM32GG11B_wtimer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. WTIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single 1 pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="defaultName" value="SLSTK3701A_EFM32GG11B_wtimer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WTIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series1/wtimer/wtimer_single_pulse_generation_polled/SimplicityStudio/SLSTK3701A_EFM32GG11B_wtimer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_acmp_interrupt" description="This project demonstrates using the analog comparator (ACMP) peripheral to  compare an analog input to an internal reference. In this example, ACMP pos input is routed to a GPIO input pin and ACMP neg input is routed to the 1.25V internal reference. When the voltage on ACMP pos input is lower than 1.25V, the ACMP output pin is low (GND). When the voltage on ACMP pos input is higher than 1.25V, the ACMP output pin is high (IOVDD). Rising and falling interrupts are enabled for the ACMP output. The MCU core is in sleep mode in EM3, but the analog comparator remains functional. When the ACMP output transitions, the MCU wakes from EM3 to EM0 to handle the interrupt. An interrupt handler checks if the ACMP interrupt was for a rising or falling edge of the ACMP output, and sets or clears a GPIO output pin  accordingly before returning to EM3. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_acmp_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/acmp/acmp_interrupt/SimplicityStudio/BRD4181A_EFR32xG21_acmp_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_acmp_pin_output" description="This project demonstrates using the analog comparator (ACMP) peripheral to  compare an analog input to an internal reference. In this example, ACMP pos input is routed to a GPIO input pin and ACMP neg input is routed to the 1.25V internal reference. The ACMP output is also routed to a GPIO output pin. When the voltage on ACMP pos input is lower than 1.25V, the ACMP output pin is low (GND). When the voltage on ACMP pos input is  higher than 1.25V, the ACMP output pin is high (IOVDD). The MCU core is in sleep mode  in EM3, but the analog comparator remains functional. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_acmp_pin_output"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/acmp/acmp_pin_output/SimplicityStudio/BRD4181A_EFR32xG21_acmp_pin_output.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_acmp_polled" description="This project demonstrates using the analog comparator (ACMP) peripheral to  compare an analog input to an internal reference. In this example, ACMP pos input is routed to a GPIO input pin and ACMP neg input is routed to the 1.25V internal reference. The ACMP output is also routed to a GPIO output pin. When the voltage on ACMP pos input is lower than 1.25V, the ACMP output pin is low (GND). When the voltage on ACMP pos input is  higher than 1.25V, the ACMP output pin is high (IOVDD). The ACMP status register is   polled continuously in an infinite while loop. When the ACMP status register analog  comparator output value (ACMPOUT bit) goes high, an alternative GPIO output pin is set high  (IOVDD). When the ACMP status register ACMPOUT bit goes low, the alternative GPIO output pin is cleared (GND).   ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_acmp_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="ACMP"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/acmp/acmp_polled/SimplicityStudio/BRD4181A_EFR32xG21_acmp_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_burtc_em4_buram" description="This project uses the BURTC (Backup Real Time Counter) to wake the device from EM4 mode and thus trigger a reset. This project also shows how to use the BURAM retention registers to have data persist between resets. The number of resets  triggered by the BURTC will printed via the device's USART and the mainboard's  JLink CDC UART Port for view in a PC terminal program. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_burtc_em4_buram"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="BURTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/burtc/burtc_em4_buram/SimplicityStudio/BRD4181A_EFR32xG21_burtc_em4_buram.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_burtc_em4_buram" description="This project uses the BURTC (Backup Real Time Counter) to wake the device from EM4 mode and thus trigger a reset. This project also shows how to use the BURAM retention registers to have data persist between resets. The number of resets  triggered by the BURTC will printed via the device's USART and the mainboard's  JLink CDC UART Port for view in a PC terminal program. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_burtc_em4_buram"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="BURTC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/burtc/burtc_em4_buram/SimplicityStudio/BRD4182A_EFR32xG22_burtc_em4_buram.slsproj"/>
  </descriptors>
  <descriptors label="BRD4180A_EFR32xG21_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd4180a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4180A_EFR32xG21_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4180A_EFR32xG21_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_lfrco_cal_interrupt" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The calibration mechanism is setup, and a calibration run is started. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_lfrco_cal_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/cmu/lfrco_cal_interrupt/SimplicityStudio/BRD4181A_EFR32xG21_lfrco_cal_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4180A_EFR32xG21_lfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The BURTC is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4180a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4180A_EFR32xG21_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/cmu/lfrco_cal_polled/SimplicityStudio/BRD4180A_EFR32xG21_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_lfrco_cal_polled" description="The device is initialized for the board it is running on, and the qualified LFRCO is output to a pin where it can be observed.  The BURTC is setup to generate an interrupt every 16 seconds, and the device enters EM1 (so that the clock output remains active). ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_lfrco_cal_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="CMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/cmu/lfrco_cal_polled/SimplicityStudio/BRD4181A_EFR32xG21_lfrco_cal_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_em01_voltage_scaling" description="This project demonstrates the use of EM0/EM1 voltage scaling on Series 2 EFR32 devices.  Note that this differs from the voltage scaling functionality on Series 1 devices where a single setting (VS2 or VS0) applies in all operating modes.  For Series 2 devices, separate examples are provided for EM0/1 and EM2/3 voltage scaling. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_em01_voltage_scaling"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="EMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/emu/em01_voltage_scaling/SimplicityStudio/BRD4182A_EFR32xG22_em01_voltage_scaling.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_em23_voltage_scaling" description="This project demonstrates the use of EM2/EM3 voltage scaling on Series 2 EFR32 devices.  Note that this differs from the voltage scaling functionality on Series 1 devices where a single setting (VS2 or VS0) applies in all operating modes.  For Series 2 devices, separate examples are provided for EM0/1 and EM2/3 voltage scaling. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_em23_voltage_scaling"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="EMU"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/emu/em23_voltage_scaling/SimplicityStudio/BRD4182A_EFR32xG22_em23_voltage_scaling.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_euart_echo" description="This project demonstrates interrupt-drive operation of the EUART.  EUART0 is  configured for asynchronous operation at 115200 baud with 8 data bits,  no  parity, and one stop bit (115200N81). The main loop waits until 80 characters  or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_euart_echo"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="EUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/euart/euart_echo/SimplicityStudio/BRD4182A_EFR32xG22_euart_echo.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_euart_half_duplex" description="This example uses the EUART0 module to do half-duplex communication with the  EUART0 module on another board using the single data-link configuration  described in the reference manual. This means that half-duplex is done by  using only one wire to communicate between EUARTs. In this example, we ensure that only one EUART is transmitting at a time by starting one EUART with transmitter enabled and receiver disabled, while the other EUART has its receiver enabled and transmitter disabled. Each EUART switches between transmit/receive mode when it is done transmitting/receiving (i.e. it transmitted or received a '\n' character). ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_euart_half_duplex"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="EUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/euart/euart_half_duplex/SimplicityStudio/BRD4182A_EFR32xG22_euart_half_duplex.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_euart_dma" description="This project uses the EUART to receive serial input and then echo it back using the LDMA. The devices stays in EM2 the entire time since the LDMA module can  still operate in EM2. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_euart_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="EUART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/euart/euart_ldma/SimplicityStudio/BRD4182A_EFR32xG22_euart_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_gpio_conf" description="This project demonstrates a user how to set a simple digital input and digital output. Button PB0 on the WSTK is an input. LED0 is the output.  When button 0 is pressed, LED0 will be on. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_gpio_conf"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/gpio/gpio_conf/SimplicityStudio/BRD4181A_EFR32MG21_gpio_conf.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_gpio_conf" description="This project demonstrates a user how to set a simple digital input and digital output. Button PB0 on the WSTK is an input. LED0 is the output.  When button 0 is pressed, LED0 will be on. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_gpio_conf"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/gpio/gpio_conf/SimplicityStudio/BRD4182A_EFR32MG22_gpio_conf.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_gpio_em4_wakeup" description="This project uses GPIO to wake the device from EM4 mode and thus trigger a  reset. Under non-EM4 reset, the device will enter EM4. Pressing PB0 (on EFR32xG21)/ PB1 (on EFR32xG22) will wake the device from EM4 and cause the LEDs on the  STK/Radio board to toggle indefinitely. PB0 on EFR32xG22 is used as an &quot;escape hatch&quot;. This is a way to pause the device so that a debugger can connect in  order to erase flash, among other things. Before proceeding with this example,  make sure PB0 is not pressed. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_gpio_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/gpio/gpio_em4_wakeup/SimplicityStudio/BRD4181A_EFR32xG21_gpio_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_gpio_em4_wakeup" description="This project uses GPIO to wake the device from EM4 mode and thus trigger a  reset. Under non-EM4 reset, the device will enter EM4. Pressing PB0 (on EFR32xG21)/ PB1 (on EFR32xG22) will wake the device from EM4 and cause the LEDs on the  STK/Radio board to toggle indefinitely. PB0 on EFR32xG22 is used as an &quot;escape hatch&quot;. This is a way to pause the device so that a debugger can connect in  order to erase flash, among other things. Before proceeding with this example,  make sure PB0 is not pressed. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_gpio_em4_wakeup"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/gpio/gpio_em4_wakeup/SimplicityStudio/BRD4182A_EFR32xG22_gpio_em4_wakeup.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_gpio_int" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_gpio_int"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/gpio/gpio_int/SimplicityStudio/BRD4181A_EFR32MG21_gpio_int.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_gpio_int" description="This project demonstrates how to use GPIO pins to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered and toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered and toggles LED0. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_gpio_int"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/gpio/gpio_int/SimplicityStudio/BRD4182A_EFR32MG22_gpio_int.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_gpio_periph" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO, and sets the slew rate and drive strength. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_gpio_periph"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/gpio/gpio_periph/SimplicityStudio/BRD4181A_EFR32MG21_gpio_periph.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_gpio_periph" description="This project demonstrates how to configure a GPIO pin to drive the output of the LFRCO, and sets the slew rate and drive strength. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_gpio_periph"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/gpio/gpio_periph/SimplicityStudio/BRD4182A_EFR32MG22_gpio_periph.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_gpio_prs" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_gpio_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/gpio/gpio_prs/SimplicityStudio/BRD4181A_EFR32MG21_gpio_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_gpio_prs" description="This project demonstrates how the GPIO triggers an ADC scan via PRS.  The device runs the device in EM1. A falling edge (pushing button PB0) triggers a single ADC conversion. When the conversion ends, the ADC requests an interrupt to wake up the processor, and a delay cycle keeps it running in EM0 for 1 second before re-entering EM1. This allows the change in current draw to be observed using the Advanced Energy Monitor or the EnergyAware Profiler. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_gpio_prs"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/gpio/gpio_prs/SimplicityStudio/BRD4182A_EFR32MG22_gpio_prs.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_gpio_slew_rate" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing BTN0. The drive strength setting is changed by pressing BTN1.  The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_gpio_slew_rate"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/gpio/gpio_slew_rate/SimplicityStudio/BRD4181A_EFR32MG21_gpio_slew_rate.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_gpio_slew_rate" description="This project demonstrates the slew rate settings for the GPIO. A 1 MHz square wave is generated on a pin. The slew rate setting is changed by pressing BTN0. The drive strength setting is changed by pressing BTN1.  The effects of these settings on the pin's slew rate can be observed by placing a 50uF capacitor on the output pin and observing the change in rise and fall times of the 1 MHz square wave. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_gpio_slew_rate"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="GPIO"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/gpio/gpio_slew_rate/SimplicityStudio/BRD4182A_EFR32MG22_gpio_slew_rate.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_i2c_master" description="This project demonstrates the master configuration of the EFx32xG2x I2C peripheral. Two EFx32xG2x modules are connected together, one running the master project, the other running the slave project. The master starts up and enters a while loop waiting for a button press on push button 0. When push button 0 is pressed, the program performs an I2C test. This routine reads the slave device's current buffer values, increments each value by 1, and writes the new values back to the slave device. The master then reads back the slave values again and verifies the new values match what was previously written. Upon a successful write, LED0 is toggled and the device re-enters the while loop, waiting again for user input through push button 0. This project runs in a continuous loop, re-running the I2C test with every PB0 button press and toggling LED0 with each successful iteration. If there is an I2C transmission error, or if the verification step of the I2C test fails, LED1 is turned on and the master sits and remains in an infinite while loop. Connecting to the device via debugger while in the infinite loop, the I2C error code can be retrieved. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_i2c_master"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/i2c/i2c_master/SimplicityStudio/BRD4181A_EFR32xG21_i2c_master.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_i2c_master" description="This project demonstrates the master configuration of the EFx32xG2x I2C peripheral. Two EFx32xG2x modules are connected together, one running the master project, the other running the slave project. The master starts up and enters a while loop waiting for a button press on push button 0. When push button 0 is pressed, the program performs an I2C test. This routine reads the slave device's current buffer values, increments each value by 1, and writes the new values back to the slave device. The master then reads back the slave values again and verifies the new values match what was previously written. Upon a successful write, LED0 is toggled and the device re-enters the while loop, waiting again for user input through push button 0. This project runs in a continuous loop, re-running the I2C test with every PB0 button press and toggling LED0 with each successful iteration. If there is an I2C transmission error, or if the verification step of the I2C test fails, LED1 is turned on and the master sits and remains in an infinite while loop. Connecting to the device via debugger while in the infinite loop, the I2C error code can be retrieved. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_i2c_master"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/i2c/i2c_master/SimplicityStudio/BRD4182A_EFR32xG22_i2c_master.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_i2c_slave" description="This project demonstrates the slave configuration of the EFx32xG2x I2C peripheral. Two EFx32xG2x modules are connected together, one running the master project, the other running the slave project. The master reads the slave's current buffer values, increments each value, and writes the new values back to the slave device. The master then reads back the slave values again and verifies the new values match what was previously written. This program runs in a continuous loop, entering and exiting EM2 to handle I2C transmissions. Slave toggles LED0 on during I2C transaction and off when complete. Slave will set LED1 if an I2C transmission error is encountered. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_i2c_slave"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/i2c/i2c_slave/SimplicityStudio/BRD4181A_EFR32xG21_i2c_slave.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_i2c_slave" description="This project demonstrates the slave configuration of the EFx32xG2x I2C peripheral. Two EFx32xG2x modules are connected together, one running the master project, the other running the slave project. The master reads the slave's current buffer values, increments each value, and writes the new values back to the slave device. The master then reads back the slave values again and verifies the new values match what was previously written. This program runs in a continuous loop, entering and exiting EM2 to handle I2C transmissions. Slave toggles LED0 on during I2C transaction and off when complete. Slave will set LED1 if an I2C transmission error is encountered. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_i2c_slave"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="I2C"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/i2c/i2c_slave/SimplicityStudio/BRD4182A_EFR32xG22_i2c_slave.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_iadc_scan_interrupt" description="This project demonstrates using the IADC peripheral to take single-ended analog measurements across two different external inputs and six of the internal voltage supply channels. IADC interrupts handle completed conversions and store  the converted voltage results in a global array. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_iadc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_scan_interrupt/SimplicityStudio/BRD4181A_EFR32MG21_iadc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_iadc_scan_interrupt" description="This project demonstrates using the IADC peripheral to take single-ended analog measurements across two different external inputs and six of the internal voltage supply channels. IADC interrupts handle completed conversions and store  the converted voltage results in a global array. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_iadc_scan_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_scan_interrupt/SimplicityStudio/BRD4182A_EFR32MG22_iadc_scan_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_iadc_scan_ldma" description="This project demonstrates using the IADC peripheral in conjunction with the LDMA to continuously sample two single-ended input channels, all while remaining in EM2. Sample results are stored in an internal array. Sample rate is 833 ksps, and the ADC reads GPIO pins PC04 (J102 of BRD4001, Pin 25) and PC04 (J102 of BRD4001, Pin 27) as inputs. When the transfer is complete, WSTK LED0 is set. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_iadc_scan_ldma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_scan_ldma/SimplicityStudio/BRD4181A_EFR32MG21_iadc_scan_ldma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_iadc_scan_ldma" description="This project demonstrates using the IADC peripheral in conjunction with the LDMA to continuously sample two single-ended input channels, all while remaining in EM2. Sample results are stored in an internal array. Sample rate is 833 ksps, and the ADC reads GPIO pins PC04 (J102 of BRD4001, Pin 25) and PC04 (J102 of BRD4001, Pin 27) as inputs. When the transfer is complete, WSTK LED0 is set. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_iadc_scan_ldma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_scan_ldma/SimplicityStudio/BRD4182A_EFR32MG22_iadc_scan_ldma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_iadc_scan_timer" description="This project demonstrates using the IADC peripheral to take single-ended analog measurements of two input channels. IADC interrupts handle  completed conversions and store them in a global array. The IADC conversion is triggered using the IADC internal timer, which is configured to occur every 1ms. WSTK LED1 is also toggled on each conversion. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_iadc_scan_timer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_scan_timer/SimplicityStudio/BRD4181A_EFR32MG21_iadc_scan_timer.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_iadc_scan_timer" description="This project demonstrates using the IADC peripheral to take single-ended analog measurements of two input channels. IADC interrupts handle  completed conversions and store them in a global array. The IADC conversion is triggered using the IADC internal timer, which is configured to occur every 1ms. WSTK LED1 is also toggled on each conversion. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_iadc_scan_timer"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_scan_timer/SimplicityStudio/BRD4182A_EFR32MG22_iadc_scan_timer.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_iadc_single_16bit" description="This project demonstrates using the IADC peripheral's oversampling feature to acquire a 16-bit resolution conversion result while operating in EM2. IADC interrupts on conversion completion wake the MCU into EM0, where the IADC interrupt handler converts the result to a voltage before going back into EM2. The IADC sampling rate is 77 ksps with an oversampling rate of 32, and the  ADC reads GPIO pin PC04 (J102 of BRD4001, Pin 25) as input. The PRS peripheral will output a pulse on PB1 whenever the IADC finishes one single conversion. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_iadc_single_16bit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_single_16bit/SimplicityStudio/BRD4182A_EFR32MG22_iadc_single_16bit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_iadc_single_calibration" description="This project demonstrates calibrating the IADC peripheral, followed by  single polled differential analog measurements. The main program steps  through the proceedure outlined in Gain and Offset Correction section of the device  Reference Manual for calibrating the onboard IADC. Once calibration is complete, the program resembles the single differential polled example, taking measurements and storing the IADC result and a voltage conversion of the result into two  global variables. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_iadc_single_calibration"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_single_calibration/SimplicityStudio/BRD4181A_EFR32MG21_iadc_single_calibration.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_iadc_single_calibration" description="This project demonstrates calibrating the IADC peripheral, followed by  single polled differential analog measurements. The main program steps  through the proceedure outlined in Gain and Offset Correction section of the device  Reference Manual for calibrating the onboard IADC. Once calibration is complete, the program resembles the single differential polled example, taking measurements and storing the IADC result and a voltage conversion of the result into two  global variables. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_iadc_single_calibration"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_single_calibration/SimplicityStudio/BRD4182A_EFR32MG22_iadc_single_calibration.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_iadc_single_differential_polled" description="This project demonstrates using the IADC peripheral to take a differential analog measurement. The main program polls continuously for conversions, then stores the IADC result and a voltage conversion of the result into two  global variables. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_iadc_single_differential_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_single_differential_polled/SimplicityStudio/BRD4181A_EFR32MG21_iadc_single_differential_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_iadc_single_differential_polled" description="This project demonstrates using the IADC peripheral to take a differential analog measurement. The main program polls continuously for conversions, then stores the IADC result and a voltage conversion of the result into two  global variables. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_iadc_single_differential_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_single_differential_polled/SimplicityStudio/BRD4182A_EFR32MG22_iadc_single_differential_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_iadc_single_em2" description="This project demonstrates using the IADC peripheral to continuously take a single-ended analog measurement while running in low power EM2. IADC interrupts on conversion completion wake the MCU into EM0, where the IADC interrupt handler converts the result to a voltage before going back into EM2. The IADC sampling rate is 1 ksps, and the  ADC reads GPIO pin PC04 (J102 of BRD4001, Pin 25) as input. The IADC interrupt handler also toggles a GPIO (EXP13, WSTK P10) with each conversion. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_iadc_single_em2"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_single_em2/SimplicityStudio/BRD4181A_EFR32MG21_iadc_single_em2.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_iadc_single_em2" description="This project demonstrates using the IADC peripheral to continuously take a single-ended analog measurement while running in low power EM2. IADC interrupts on conversion completion wake the MCU into EM0, where the IADC interrupt handler converts the result to a voltage before going back into EM2. The IADC sampling rate is 1 ksps, and the  ADC reads GPIO pin PC04 (J102 of BRD4001, Pin 25) as input. The IADC interrupt handler also toggles a GPIO (EXP13, WSTK P10) with each conversion. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_iadc_single_em2"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_single_em2/SimplicityStudio/BRD4182A_EFR32MG22_iadc_single_em2.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_iadc_single_low_current" description="This project demonstrates one of the lowest current consumption configurations for the IADC peripheral. The IADC is configured to utilize the internal IADC timer to trigger a single single-ended conversion. Upon completion, an LDMA data transfer  occurs storing the raw data to memory. Both the IADC and LDMA run in EM2, and this project goes a step further to shutdown onboard SPI FLASH on the WSTK, along with  changing the system clock from FSRCO. The RTCC peripheral is also included in this  example and run from the LFRCO. Typical current consumption while retaining RAM is documented in the Series 2 device datasheet. This approximate current value does not include additional current for the clock trees and the IADC. This project is intended to be profiled with Simplicity Studio's Energy Profiler to observe the current consumption while in EM2. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_iadc_single_low_current"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_single_low_current/SimplicityStudio/BRD4181A_EFR32MG21_iadc_single_low_current.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_iadc_single_low_current" description="This project demonstrates one of the lowest current consumption configurations for the IADC peripheral. The IADC is configured to utilize the internal IADC timer to trigger a single single-ended conversion. Upon completion, an LDMA data transfer  occurs storing the raw data to memory. Both the IADC and LDMA run in EM2, and this project goes a step further to shutdown onboard SPI FLASH on the WSTK, along with  changing the system clock from FSRCO. The RTCC peripheral is also included in this  example and run from the LFRCO. Typical current consumption while retaining RAM is documented in the Series 2 device datasheet. This approximate current value does not include additional current for the clock trees and the IADC. This project is intended to be profiled with Simplicity Studio's Energy Profiler to observe the current consumption while in EM2. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_iadc_single_low_current"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_single_low_current/SimplicityStudio/BRD4182A_EFR32MG22_iadc_single_low_current.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_iadc_single_window_compare" description="This project demonstrates using the IADC peripheral as a window comparator on a single-ended input PC04 (J102 of BRD4001, Pin 25). The window comparator is configured to trigger on output results which are inside the specified window. WSTK LED0 is toggled on each conversion with results within the specified window. The most recent sample within the window comparison is also stored globally. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_iadc_single_window_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_single_window_compare/SimplicityStudio/BRD4181A_EFR32MG21_iadc_single_window_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_iadc_single_window_compare" description="This project demonstrates using the IADC peripheral as a window comparator on a single-ended input PC04 (J102 of BRD4001, Pin 25). The window comparator is configured to trigger on output results which are inside the specified window. WSTK LED0 is toggled on each conversion with results within the specified window. The most recent sample within the window comparison is also stored globally. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_iadc_single_window_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="IADC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/iadc/iadc_single_window_compare/SimplicityStudio/BRD4182A_EFR32MG22_iadc_single_window_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_ldma_2d_copy" description="This example is based on the EFR32 Series 2 Reference Manual: Chapter: LDMA Section: Examples Subsection: Example #6 ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/ldma/ldma_2d_copy/SimplicityStudio/BRD4181A_EFR32MG21_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_ldma_2d_copy" description="This example is based on the EFR32 Series 2 Reference Manual: Chapter: LDMA Section: Examples Subsection: Example #6 ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_ldma_2d_copy"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/ldma/ldma_2d_copy/SimplicityStudio/BRD4182A_EFR32MG22_ldma_2d_copy.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_ldma_interchannel_synchronization" description="This example is based on the EFR32 Series 2 Reference Manual: Chapter: LDMA Section: Examples Subsection: Example #5 ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/ldma/ldma_interchannel_synchronization/SimplicityStudio/BRD4181A_EFR32MG21_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_ldma_interchannel_synchronization" description="This example is based on the EFR32 Series 2 Reference Manual: Chapter: LDMA Section: Examples Subsection: Example #5 ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_ldma_interchannel_synchronization"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/ldma/ldma_interchannel_synchronization/SimplicityStudio/BRD4182A_EFR32MG22_ldma_interchannel_synchronization.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_ldma_linked_list" description="This example is based on the EFR32 Series 2 Reference Manual: Chapter: LDMA Section: Examples Subsection: Example #2 ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/ldma/ldma_linked_list/SimplicityStudio/BRD4181A_EFR32MG21_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_ldma_linked_list" description="This example is based on the EFR32 Series 2 Reference Manual: Chapter: LDMA Section: Examples Subsection: Example #2 ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_ldma_linked_list"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/ldma/ldma_linked_list/SimplicityStudio/BRD4182A_EFR32MG22_ldma_linked_list.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_ldma_linked_list_looped" description="This example is based on the EFR32 Series 2 Reference Manual: Chapter: LDMA Section: Examples Subsection: Example #4 ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/ldma/ldma_linked_list_looped/SimplicityStudio/BRD4181A_EFR32MG21_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_ldma_linked_list_looped" description="This example is based on the EFR32 Series 2 Reference Manual: Chapter: LDMA Section: Examples Subsection: Example #4 ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_ldma_linked_list_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/ldma/ldma_linked_list_looped/SimplicityStudio/BRD4182A_EFR32MG22_ldma_linked_list_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_ldma_ping_pong" description="This example is based on the EFR32 Series 2 Reference Manual: Chapter: LDMA Section: Examples Subsection: Example #7 ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/ldma/ldma_ping_pong/SimplicityStudio/BRD4181A_EFR32MG21_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_ldma_ping_pong" description="This example is based on the EFR32 Series 2 Reference Manual: Chapter: LDMA Section: Examples Subsection: Example #7 ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_ldma_ping_pong"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/ldma/ldma_ping_pong/SimplicityStudio/BRD4182A_EFR32MG22_ldma_ping_pong.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_ldma_scatter_gather" description="This example is based on the EFR32 Series 2 Reference Manual: Chapter: LDMA Section: Examples Subsection: Example #8 ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/ldma/ldma_scatter_gather/SimplicityStudio/BRD4181A_EFR32MG21_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_ldma_scatter_gather" description="This example is based on the EFR32 Series 2 Reference Manual: Chapter: LDMA Section: Examples Subsection: Example #8 ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_ldma_scatter_gather"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/ldma/ldma_scatter_gather/SimplicityStudio/BRD4182A_EFR32MG22_ldma_scatter_gather.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_ldma_single_button" description="This example is based on the EFR32 Series 2 Reference Manual: Chapter: LDMA Section: Examples Subsection: Example #1 ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/ldma/ldma_single_button/SimplicityStudio/BRD4181A_EFR32MG21_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_ldma_single_button" description="This example is based on the EFR32 Series 2 Reference Manual: Chapter: LDMA Section: Examples Subsection: Example #1 ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_ldma_single_button"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/ldma/ldma_single_button/SimplicityStudio/BRD4182A_EFR32MG22_ldma_single_button.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_ldma_single_looped" description="This example is based on the EFR32 Series 2 Reference Manual: Chapter: LDMA Section: Examples Subsection: Example #3 ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/ldma/ldma_single_looped/SimplicityStudio/BRD4181A_EFR32MG21_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_ldma_single_looped" description="This example is based on the EFR32 Series 2 Reference Manual: Chapter: LDMA Section: Examples Subsection: Example #3 ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_ldma_single_looped"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LDMA"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/ldma/ldma_single_looped/SimplicityStudio/BRD4182A_EFR32MG22_ldma_single_looped.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the letimer in one-shot mode, and expansion  header pin toggles REPEAT_COUNT times while staying in a low energy mode. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/letimer/one_shot_output_compare/SimplicityStudio/BRD4181A_EFR32xG21_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_one_shot_output_compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the letimer in one-shot mode, and expansion  header pin toggles REPEAT_COUNT times while staying in a low energy mode. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_one_shot_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/letimer/one_shot_output_compare/SimplicityStudio/BRD4182A_EFR32xG22_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the letimer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1k Hz frequency. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/letimer/pulse_train/SimplicityStudio/BRD4181A_EFR32xG21_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_pulse_train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the letimer in free mode, and creates a one  LFCLK length pulse on each underflow event. The underflow occurs  at 1k Hz frequency. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_pulse_train"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/letimer/pulse_train/SimplicityStudio/BRD4182A_EFR32xG22_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the letimer for PWM with a set 30 percent  duty cycle at 1k Hz frequency. The waveform is output on an  Expansion Header Pin on the board. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/letimer/pulse_width_modulation/SimplicityStudio/BRD4181A_EFR32xG21_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_pulse_width_modulation" description="This project demonstrates pulse width modulation using the LETIMER. The project initializes the letimer for PWM with a set 30 percent  duty cycle at 1k Hz frequency. The waveform is output on an  Expansion Header Pin on the board. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_pulse_width_modulation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="LETIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/letimer/pulse_width_modulation/SimplicityStudio/BRD4182A_EFR32xG22_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_msc_page_lock" description="This project demonstrates how to lock flash pages using the MSC_PAGELOCKn and MSC_MISCLOCKWORD registers.  While the locking process is a simple matter of writing 1s to the relevant register bits, positioning of these writes in user program code is somewhat more complicated. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_msc_page_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/msc/msc_page_lock/SimplicityStudio/BRD4181A_EFR32xG21_msc_page_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_msc_page_lock" description="This project demonstrates how to lock flash pages using the MSC_PAGELOCKn and MSC_MISCLOCKWORD registers.  While the locking process is a simple matter of writing 1s to the relevant register bits, positioning of these writes in user program code is somewhat more complicated. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_msc_page_lock"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/msc/msc_page_lock/SimplicityStudio/BRD4182A_EFR32xG22_msc_page_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/msc/msc_rw/SimplicityStudio/BRD4181A_EFR32xG21_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_msc_rw" description="This project demonstrates the use of the userdata page of the flash memory. The value 32 is stored in the 4th word of the page. A variable is set to the value stored at this location, which can then be read in the debugger. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_msc_rw"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="MSC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/msc/msc_rw/SimplicityStudio/BRD4182A_EFR32xG22_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4184A_EFR32BG22_pdm_stereo_interrupt" description="This project demonstrates how to get stereo PCM data from a MEMS microphone using the PDM interface. An interrupt is triggered when there is valid data in the PDM's hardware FIFO. The interrupt handler reads and translates the raw PCM data from the FIFO into left and right stereo audio PCM data. The device enters EM1 when the CPU isn't busy. ">
    <properties key="core.boardCompatibility" value="brd4184a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg22.*"/>
    <properties key="defaultName" value="BRD4184A_EFR32BG22_pdm_stereo_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PDM"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/pdm/pdm_stereo_interrupt/SimplicityStudio/BRD4184A_EFR32BG22_pdm_stereo_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4184A_EFR32BG22_pdm_stereo_ldma" description="This project demonstrates how to get stereo PCM data from a MEMS microphone using the PDM interface. An LDMA transfer is triggered when there is valid data in the PDM's hardware FIFO. The LDMA transfers the raw PCM data from the FIFO to the ping-pong buffers. The main loop converts the raw PCM data in the ping-pong buffers into left and right stereo audio PCM data. The device enters EM1 when the CPU isn't busy. ">
    <properties key="core.boardCompatibility" value="brd4184a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg22.*"/>
    <properties key="defaultName" value="BRD4184A_EFR32BG22_pdm_stereo_ldma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PDM"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/pdm/pdm_stereo_ldma/SimplicityStudio/BRD4184A_EFR32BG22_pdm_stereo_ldma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_prs_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are set as PRS source.  ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_prs_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/prs/prs_logic_unit/SimplicityStudio/BRD4181A_EFR32xG21_prs_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_prs_logic_unit" description="This project demonstrates the built-in PRS logic functions between channels. PB0 and PB1 are set as PRS source.  ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_prs_logic_unit"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="PRS"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/prs/prs_logic_unit/SimplicityStudio/BRD4182A_EFR32xG22_prs_logic_unit.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_rtcc_interrupt" description="This project uses the RTCC (Real Time Clock with Capture) to wake the device from EM2 (LFRCO or LFXO) or EM3 (ULFRCO) mode. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_rtcc_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/rtcc/rtcc_interrupt/SimplicityStudio/BRD4181A_EFR32xG21_rtcc_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_rtcc_interrupt" description="This project uses the RTCC (Real Time Clock with Capture) to wake the device from EM2 (LFRCO or LFXO) or EM3 (ULFRCO) mode. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_rtcc_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="RTCC"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/rtcc/rtcc_interrupt/SimplicityStudio/BRD4182A_EFR32xG22_rtcc_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_timer_dma_edge_capture" description="This project demonstrates DMA driven edge capture from a TIMER Compare/Capture channel. TIMER0 CC0 is configured to capture rising and falling edges. GPIO Pin PA6 (Expansion Header Pin 14) is to be connected to a periodic signal, and  edges captured from PA6 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_dma_edge_capture/SimplicityStudio/BRD4181A_EFR32xG21_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_timer_dma_edge_capture" description="This project demonstrates DMA driven edge capture from a TIMER Compare/Capture channel. TIMER0 CC0 is configured to capture rising and falling edges. GPIO Pin PA6 (Expansion Header Pin 14) is to be connected to a periodic signal, and  edges captured from PA6 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_timer_dma_edge_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_dma_edge_capture/SimplicityStudio/BRD4182A_EFR32xG22_timer_dma_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PA6 (Expansion Header Pin 14). The Top value is set such that on each overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_frequency_generation/SimplicityStudio/BRD4181A_EFR32xG21_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_timer_frequency_generation" description="This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PA6 (Expansion Header Pin 14). The Top value is set such that on each overflow, the output toggles at the desired frequency. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_timer_frequency_generation"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_frequency_generation/SimplicityStudio/BRD4182A_EFR32xG22_timer_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_input_capture_interrupt/SimplicityStudio/BRD4181A_EFR32xG21_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_timer_input_capture_interrupt" description="This project demonstrates the use of the TIMER module for interrupt based input capture. After button 0 is pressed, the PRS routes this signal to the timer to indicate that an input capture needs to occur. An interrupt then occurs because the Compare/Capture channel interrupt flag is set. The captured timer value is then stored in the user's buffer. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_timer_input_capture_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_input_capture_interrupt/SimplicityStudio/BRD4182A_EFR32xG22_timer_input_capture_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_period_measurement_interrupt/SimplicityStudio/BRD4181A_EFR32xG21_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_timer_period_measurement_interrupt" description="This project demonstrates period measurement using the TIMER module. TIMER is initialized for input capture on Compare/Capture channel 0 for falling edge capture and interrupts. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in the measuredPeriod global variable in units of  microseconds. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_timer_period_measurement_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_period_measurement_interrupt/SimplicityStudio/BRD4182A_EFR32xG22_timer_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_period_measurement_polled/SimplicityStudio/BRD4181A_EFR32xG21_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_timer_period_measurement_polled" description="This project demonstrates polled period measurement using the TIMER module.  TIMER is initialized for input capture on Compare/Capture channel 0 for falling  edge capture. The program waits for a falling edge and then the captured edge is  read from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in the measuredPeriod global variable in  units of microseconds. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_timer_period_measurement_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_period_measurement_polled/SimplicityStudio/BRD4182A_EFR32xG22_timer_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_pulse_capture/SimplicityStudio/BRD4181A_EFR32xG21_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_timer_pulse_capture" description="This project demonstrates single pulse capture using the TIMER module. The HFXO is configured to run the HFPER clock. TIMER is then initialized for input capture on Compare/Capture channel 0 for interrupts on every edge. The GPIO Pin specified below is to be connected to a periodic signal or pulse generator. The two edges captured (one falling and one rising) are read from the CCV register. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_timer_pulse_capture"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_pulse_capture/SimplicityStudio/BRD4182A_EFR32xG22_timer_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_pwm_dma/SimplicityStudio/BRD4181A_EFR32xG21_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_timer_pwm_dma" description="This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The DMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each overflow event. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_timer_pwm_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_pwm_dma/SimplicityStudio/BRD4182A_EFR32xG22_timer_pwm_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_pwm_interrupt/SimplicityStudio/BRD4181A_EFR32xG21_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_timer_pwm_interrupt" description="This project demonstrates pulse width modulation using the TIMER module. TIMER  is initialized for PWM on Compare/Capture channel 0 which is routed to the GPIO  Pin specified below. In PWM mode, overflow events set the output pin, while  compare events clear the pin. Thus the overflow value is set to output the  desired signal frequency, while the CCV is set to control the duty cycle. The  duty cycle is altered by writing to the CCVB register, which safely updates the  compare value on the next overflow event. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_timer_pwm_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_pwm_interrupt/SimplicityStudio/BRD4182A_EFR32xG22_timer_pwm_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_single_edge_output_compare/SimplicityStudio/BRD4181A_EFR32xG21_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_timer_single_edge_output_compare" description="This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO pin specified below. The Compare value is set such that after 3 seconds, the GPIO pin will be set high. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_timer_single_edge_output_compare"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_single_edge_output_compare/SimplicityStudio/BRD4182A_EFR32xG22_timer_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. TIMER0 is initialized for output compare on Compare/Capture  channel 0 which is routed to GPIO Pin specified below. The timer is configured  in one-shot mode and an interrupt triggers after the first compare to load the  second, falling edge to the OC. The LDMA is configured to transfer a single  word to the OC register once the first compare event occurs. The values loaded  into the OC are such that a 1ms pulse is generated after a 3 second delay. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_single_pulse_generation_dma/SimplicityStudio/BRD4181A_EFR32xG21_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_timer_single_pulse_generation_dma" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. TIMER0 is initialized for output compare on Compare/Capture  channel 0 which is routed to GPIO Pin specified below. The timer is configured  in one-shot mode and an interrupt triggers after the first compare to load the  second, falling edge to the OC. The LDMA is configured to transfer a single  word to the OC register once the first compare event occurs. The values loaded  into the OC are such that a 1ms pulse is generated after a 3 second delay. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_timer_single_pulse_generation_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_single_pulse_generation_dma/SimplicityStudio/BRD4182A_EFR32xG22_timer_single_pulse_generation_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH s after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/BRD4181A_EFR32xG21_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_timer_single_pulse_generation_interrupt" description="This project demonstrates the generation of a single pulse using output compare. TIMER is initialized for output compare on Compare/Capture channel 0 which is routed to the GPIO Pin specified below. The timer is configured in one-shot mode and toggles the output at every compare event. The first compare event is configured to trigger after NUM_SEC_DELAY seconds. This compare event toggles the output high and triggers an interrupt that loads the CCV compare register with another compare value. The second compare event is set to occur PULSE_WIDTH s after the first compare event and toggles the output low. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_timer_single_pulse_generation_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_single_pulse_generation_interrupt/SimplicityStudio/BRD4182A_EFR32xG22_timer_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_single_pulse_generation_polled/SimplicityStudio/BRD4181A_EFR32xG21_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_timer_single_pulse_generation_polled" description="This project demonstrates the generation of a single pulse signal using output compare. TIMER is initialized for output compare on Compare/Capture channel 0, which is routed to the GPIO Pin specified below. The buffered compare values are set such that a single pulse is generated. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_timer_single_pulse_generation_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="TIMER"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/timer/timer_single_pulse_generation_polled/SimplicityStudio/BRD4182A_EFR32xG22_timer_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_usart_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  USART1 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81). The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_usart_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_async_interrupt/SimplicityStudio/BRD4181A_EFR32xG21_usart_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_usart_async_interrupt" description="This project demonstrates interrupt-drive operation of the USART in asynchronous mode.  USART1 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81). The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_usart_async_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_async_interrupt/SimplicityStudio/BRD4182A_EFR32xG22_usart_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_usart_async_polled" description="This project demonstrates polled operation of the USART in asynchronous mode.  USART1 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_usart_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_async_polled/SimplicityStudio/BRD4181A_EFR32xG21_usart_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_usart_async_polled" description="This project demonstrates polled operation of the USART in asynchronous mode.  USART1 is configured for asynchronous operation at 115200 baud with 8 data bits, no parity, and one stop bit (115200N81).  The main loop waits until 80 characters or a carriage return are received and then echos these back to the user. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_usart_async_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_async_polled/SimplicityStudio/BRD4182A_EFR32xG22_usart_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_usart_spi_master_dma" description="This project demonstrates DMA-driven operation of the USART in synchronous master mode.  USART0 is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_usart_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_spi_master_dma/SimplicityStudio/BRD4181A_EFR32xG21_usart_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_usart_spi_master_dma" description="This project demonstrates DMA-driven operation of the USART in synchronous master mode.  USART0 is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_usart_spi_master_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_spi_master_dma/SimplicityStudio/BRD4182A_EFR32xG22_usart_spi_master_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4180A_EFR32xG21_usart_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  USART0 is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4180a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4180A_EFR32xG21_usart_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_spi_master_interrupt/SimplicityStudio/BRD4180A_EFR32xG21_usart_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_usart_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  USART0 is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_usart_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_spi_master_interrupt/SimplicityStudio/BRD4181A_EFR32xG21_usart_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_usart_spi_master_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous master mode.  USART0 is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_usart_spi_master_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_spi_master_interrupt/SimplicityStudio/BRD4182A_EFR32xG22_usart_spi_master_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_usart_spi_master_polled" description="This project demonstrates polled operation of the USART in synchronous master mode.  USART0 is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_usart_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_spi_master_polled/SimplicityStudio/BRD4181A_EFR32xG21_usart_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_usart_spi_master_polled" description="This project demonstrates polled operation of the USART in synchronous master mode.  USART0 is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_usart_spi_master_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_spi_master_polled/SimplicityStudio/BRD4182A_EFR32xG22_usart_spi_master_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_usart_spi_slave_dma" description="This project demonstrates DMA-driven operation of the USART in synchronous slave mode.  USART0 is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_usart_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_spi_slave_dma/SimplicityStudio/BRD4181A_EFR32xG21_usart_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_usart_spi_slave_dma" description="This project demonstrates DMA-driven operation of the USART in synchronous slave mode.  USART0 is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_usart_spi_slave_dma"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_spi_slave_dma/SimplicityStudio/BRD4182A_EFR32xG22_usart_spi_slave_dma.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_spi_slave_interrupt/SimplicityStudio/BRD4181A_EFR32xG21_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_spi_slave_interrupt" description="This project demonstrates interrupt-driven operation of the USART in synchronous slave mode.  One of the USARTs (this depends on the device) is configured for SPI-compatible operation at 1 Mbps.  Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_spi_slave_interrupt"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_spi_slave_interrupt/SimplicityStudio/BRD4182A_EFR32xG22_spi_slave_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32xG21_usart_spi_slave_polled" description="This project demonstrates polled operation of the USART in synchronous slave mode.  USART0 is configured for SPI-compatible operation at 1 Mbps. Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32xG21_usart_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_spi_slave_polled/SimplicityStudio/BRD4181A_EFR32xG21_usart_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32xG22_usart_spi_slave_polled" description="This project demonstrates polled operation of the USART in synchronous slave mode.  USART0 is configured for SPI-compatible operation at 1 Mbps. Compatibility with the Synchronous Peripheral Interface standard implies a word size of 8 data bits transmitted and received MSB-first. ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32xG22_usart_spi_slave_polled"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="USART"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/usart/usart_spi_slave_polled/SimplicityStudio/BRD4182A_EFR32xG22_usart_spi_slave_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4181A_EFR32MG21_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LED0 and a Push-button to indicate the state of the system. If LED0 is  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, LED0 is turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd4181a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg21.*"/>
    <properties key="defaultName" value="BRD4181A_EFR32MG21_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/wdog/wdog_led_toggle/SimplicityStudio/BRD4181A_EFR32MG21_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4182A_EFR32MG22_wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LED0 and a Push-button to indicate the state of the system. If LED0 is  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, LED0 is turned on and the code does not execute  any further.  ">
    <properties key="core.boardCompatibility" value="brd4182a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg22.*"/>
    <properties key="defaultName" value="BRD4182A_EFR32MG22_wdog"/>
    <properties key="quality" value="Evaluation"/>
    <properties key="template.category" value="WDOG"/>
    <properties key="template.initiallyOpenedResource" value="readme.txt"/>
    <properties key="template.projectFilePaths" value="series2/wdog/wdog_led_toggle/SimplicityStudio/BRD4182A_EFR32MG22_wdog.slsproj"/>
  </descriptors>
</model:MDescriptors>
